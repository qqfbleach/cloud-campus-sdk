/*
 * 交换机管理VLAN配置
 * LSW管理VLAN配置北向接口，主要特性：  · 查询交换机管理VLAN配置信息 · 修改交换机管理VLAN配置 
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 交换机管理VLAN配置结构体。
 */
@ApiModel(description = "交换机管理VLAN配置结构体。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:26.687+08:00")
public class MgmtVlanDto {
  @SerializedName("vlanId")
  private Integer vlanId = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("mask")
  private String mask = null;

  @SerializedName("gateway")
  private String gateway = null;

  @SerializedName("isAutoAddUpPort")
  private Boolean isAutoAddUpPort = null;

  public MgmtVlanDto vlanId(Integer vlanId) {
    this.vlanId = vlanId;
    return this;
  }

   /**
   * 管理VLAN。
   * minimum: 1
   * maximum: 4094
   * return vlanId
  **/
  @ApiModelProperty(required = true, value = "管理VLAN。")
  public Integer getVlanId() {
    return vlanId;
  }

   /**
   * 管理VLAN。
   * minimum: 1
   * maximum: 4094
   * Param vlanId
  **/
  public void setVlanId(Integer vlanId) {
    this.vlanId = vlanId;
  }

  public MgmtVlanDto ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * 静态IP地址，支持配置单播IP地址。
   * return ip
  **/
  @ApiModelProperty(value = "静态IP地址，支持配置单播IP地址。")
  public String getIp() {
    return ip;
  }

   /**
   * 静态IP地址，支持配置单播IP地址。
   * Param ip
  **/
  public void setIp(String ip) {
    this.ip = ip;
  }

  public MgmtVlanDto mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * 掩码范围是1~32范围内的整数。
   * return mask
  **/
  @ApiModelProperty(value = "掩码范围是1~32范围内的整数。")
  public String getMask() {
    return mask;
  }

   /**
   * 掩码范围是1~32范围内的整数。
   * Param mask
  **/
  public void setMask(String mask) {
    this.mask = mask;
  }

  public MgmtVlanDto gateway(String gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * 网关地址，支持配置单播IP地址。
   * return gateway
  **/
  @ApiModelProperty(value = "网关地址，支持配置单播IP地址。")
  public String getGateway() {
    return gateway;
  }

   /**
   * 网关地址，支持配置单播IP地址。
   * Param gateway
  **/
  public void setGateway(String gateway) {
    this.gateway = gateway;
  }

  public MgmtVlanDto isAutoAddUpPort(Boolean isAutoAddUpPort) {
    this.isAutoAddUpPort = isAutoAddUpPort;
    return this;
  }

   /**
   * 上行口自动放行。
   * return isAutoAddUpPort
  **/
  @ApiModelProperty(value = "上行口自动放行。")
  public Boolean getIsAutoAddUpPort() {
    return isAutoAddUpPort;
  }

   /**
   * 上行口自动放行。
   * Param isAutoAddUpPort
  **/
  public void setIsAutoAddUpPort(Boolean isAutoAddUpPort) {
    this.isAutoAddUpPort = isAutoAddUpPort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MgmtVlanDto mgmtVlanDto = (MgmtVlanDto) o;
    return Objects.equals(this.vlanId, mgmtVlanDto.vlanId) &&
        Objects.equals(this.ip, mgmtVlanDto.ip) &&
        Objects.equals(this.mask, mgmtVlanDto.mask) &&
        Objects.equals(this.gateway, mgmtVlanDto.gateway) &&
        Objects.equals(this.isAutoAddUpPort, mgmtVlanDto.isAutoAddUpPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vlanId, ip, mask, gateway, isAutoAddUpPort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MgmtVlanDto {\n");
    
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    isAutoAddUpPort: ").append(toIndentedString(isAutoAddUpPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

