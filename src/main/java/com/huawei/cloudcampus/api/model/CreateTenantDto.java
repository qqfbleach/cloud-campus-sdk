/*
 * 租户管理
 * 租户管理第三方北向接口。 · 提供租户创建接口 · 提供租户删除接口 · 提供租户查询接口 
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.CreateTenantCommonDto;
import com.huawei.cloudcampus.api.model.TenantCommonDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 创建租户基本信息。
 */
@ApiModel(description = "创建租户基本信息。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:16.197+08:00")
public class CreateTenantDto {
  @SerializedName("tenantName")
  private String tenantName = null;

  @SerializedName("tenantEmail")
  private String tenantEmail = null;

  @SerializedName("tenantPhone")
  private String tenantPhone = null;

  @SerializedName("tenantDescription")
  private String tenantDescription = null;

  @SerializedName("tenantAddress")
  private String tenantAddress = null;

  @SerializedName("limitAccountNum")
  private Integer limitAccountNum = null;

  @SerializedName("userAccount")
  private String userAccount = null;

  @SerializedName("userEmail")
  private String userEmail = null;

  @SerializedName("sendInitEmailEnable")
  private Boolean sendInitEmailEnable = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  @SerializedName("isLogoInherit")
  private Boolean isLogoInherit = false;

  @SerializedName("userPassword")
  private String userPassword = null;

  public CreateTenantDto tenantName(String tenantName) {
    this.tenantName = tenantName;
    return this;
  }

   /**
   * 租户名称。
   * return tenantName
  **/
  @ApiModelProperty(value = "租户名称。")
  public String getTenantName() {
    return tenantName;
  }

   /**
   * 租户名称。
   * Param tenantName
  **/
  public void setTenantName(String tenantName) {
    this.tenantName = tenantName;
  }

  public CreateTenantDto tenantEmail(String tenantEmail) {
    this.tenantEmail = tenantEmail;
    return this;
  }

   /**
   * 租户服务邮箱。
   * return tenantEmail
  **/
  @ApiModelProperty(value = "租户服务邮箱。")
  public String getTenantEmail() {
    return tenantEmail;
  }

   /**
   * 租户服务邮箱。
   * Param tenantEmail
  **/
  public void setTenantEmail(String tenantEmail) {
    this.tenantEmail = tenantEmail;
  }

  public CreateTenantDto tenantPhone(String tenantPhone) {
    this.tenantPhone = tenantPhone;
    return this;
  }

   /**
   * 租户服务电话。
   * return tenantPhone
  **/
  @ApiModelProperty(value = "租户服务电话。")
  public String getTenantPhone() {
    return tenantPhone;
  }

   /**
   * 租户服务电话。
   * Param tenantPhone
  **/
  public void setTenantPhone(String tenantPhone) {
    this.tenantPhone = tenantPhone;
  }

  public CreateTenantDto tenantDescription(String tenantDescription) {
    this.tenantDescription = tenantDescription;
    return this;
  }

   /**
   * 租户描述。
   * return tenantDescription
  **/
  @ApiModelProperty(value = "租户描述。")
  public String getTenantDescription() {
    return tenantDescription;
  }

   /**
   * 租户描述。
   * Param tenantDescription
  **/
  public void setTenantDescription(String tenantDescription) {
    this.tenantDescription = tenantDescription;
  }

  public CreateTenantDto tenantAddress(String tenantAddress) {
    this.tenantAddress = tenantAddress;
    return this;
  }

   /**
   * 租户地址。
   * return tenantAddress
  **/
  @ApiModelProperty(value = "租户地址。")
  public String getTenantAddress() {
    return tenantAddress;
  }

   /**
   * 租户地址。
   * Param tenantAddress
  **/
  public void setTenantAddress(String tenantAddress) {
    this.tenantAddress = tenantAddress;
  }

  public CreateTenantDto limitAccountNum(Integer limitAccountNum) {
    this.limitAccountNum = limitAccountNum;
    return this;
  }

   /**
   * 帐号数量限制，默认值：20。
   * minimum: 1
   * maximum: 100
   * return limitAccountNum
  **/
  @ApiModelProperty(value = "帐号数量限制，默认值：20。")
  public Integer getLimitAccountNum() {
    return limitAccountNum;
  }

   /**
   * 帐号数量限制，默认值：20。
   * minimum: 1
   * maximum: 100
   * Param limitAccountNum
  **/
  public void setLimitAccountNum(Integer limitAccountNum) {
    this.limitAccountNum = limitAccountNum;
  }

  public CreateTenantDto userAccount(String userAccount) {
    this.userAccount = userAccount;
    return this;
  }

   /**
   * 租户默认管理员帐号。
   * return userAccount
  **/
  @ApiModelProperty(value = "租户默认管理员帐号。")
  public String getUserAccount() {
    return userAccount;
  }

   /**
   * 租户默认管理员帐号。
   * Param userAccount
  **/
  public void setUserAccount(String userAccount) {
    this.userAccount = userAccount;
  }

  public CreateTenantDto userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

   /**
   * 租户默认管理员邮箱，用于接收初始化密码邮件。如未填，将按照租户默认管理员帐号发送邮件。
   * return userEmail
  **/
  @ApiModelProperty(value = "租户默认管理员邮箱，用于接收初始化密码邮件。如未填，将按照租户默认管理员帐号发送邮件。")
  public String getUserEmail() {
    return userEmail;
  }

   /**
   * 租户默认管理员邮箱，用于接收初始化密码邮件。如未填，将按照租户默认管理员帐号发送邮件。
   * Param userEmail
  **/
  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }

  public CreateTenantDto sendInitEmailEnable(Boolean sendInitEmailEnable) {
    this.sendInitEmailEnable = sendInitEmailEnable;
    return this;
  }

   /**
   * 是否发送初始化邮件，默认：true。
   * return sendInitEmailEnable
  **/
  @ApiModelProperty(value = "是否发送初始化邮件，默认：true。")
  public Boolean getSendInitEmailEnable() {
    return sendInitEmailEnable;
  }

   /**
   * 是否发送初始化邮件，默认：true。
   * Param sendInitEmailEnable
  **/
  public void setSendInitEmailEnable(Boolean sendInitEmailEnable) {
    this.sendInitEmailEnable = sendInitEmailEnable;
  }

  public CreateTenantDto countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * 国家码，不填默认CN。
   * return countryCode
  **/
  @ApiModelProperty(value = "国家码，不填默认CN。")
  public String getCountryCode() {
    return countryCode;
  }

   /**
   * 国家码，不填默认CN。
   * Param countryCode
  **/
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public CreateTenantDto isLogoInherit(Boolean isLogoInherit) {
    this.isLogoInherit = isLogoInherit;
    return this;
  }

   /**
   * 租户logo是否继承自MSP。
   * return isLogoInherit
  **/
  @ApiModelProperty(value = "租户logo是否继承自MSP。")
  public Boolean getIsLogoInherit() {
    return isLogoInherit;
  }

   /**
   * 租户logo是否继承自MSP。
   * Param isLogoInherit
  **/
  public void setIsLogoInherit(Boolean isLogoInherit) {
    this.isLogoInherit = isLogoInherit;
  }

  public CreateTenantDto userPassword(String userPassword) {
    this.userPassword = userPassword;
    return this;
  }

   /**
   * 用户密码，如未填，会生成随机密码。
   * return userPassword
  **/
  @ApiModelProperty(value = "用户密码，如未填，会生成随机密码。")
  public String getUserPassword() {
    return userPassword;
  }

   /**
   * 用户密码，如未填，会生成随机密码。
   * Param userPassword
  **/
  public void setUserPassword(String userPassword) {
    this.userPassword = userPassword;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTenantDto createTenantDto = (CreateTenantDto) o;
    return Objects.equals(this.tenantName, createTenantDto.tenantName) &&
        Objects.equals(this.tenantEmail, createTenantDto.tenantEmail) &&
        Objects.equals(this.tenantPhone, createTenantDto.tenantPhone) &&
        Objects.equals(this.tenantDescription, createTenantDto.tenantDescription) &&
        Objects.equals(this.tenantAddress, createTenantDto.tenantAddress) &&
        Objects.equals(this.limitAccountNum, createTenantDto.limitAccountNum) &&
        Objects.equals(this.userAccount, createTenantDto.userAccount) &&
        Objects.equals(this.userEmail, createTenantDto.userEmail) &&
        Objects.equals(this.sendInitEmailEnable, createTenantDto.sendInitEmailEnable) &&
        Objects.equals(this.countryCode, createTenantDto.countryCode) &&
        Objects.equals(this.isLogoInherit, createTenantDto.isLogoInherit) &&
        Objects.equals(this.userPassword, createTenantDto.userPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantName, tenantEmail, tenantPhone, tenantDescription, tenantAddress, limitAccountNum, userAccount, userEmail, sendInitEmailEnable, countryCode, isLogoInherit, userPassword);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTenantDto {\n");
    
    sb.append("    tenantName: ").append(toIndentedString(tenantName)).append("\n");
    sb.append("    tenantEmail: ").append(toIndentedString(tenantEmail)).append("\n");
    sb.append("    tenantPhone: ").append(toIndentedString(tenantPhone)).append("\n");
    sb.append("    tenantDescription: ").append(toIndentedString(tenantDescription)).append("\n");
    sb.append("    tenantAddress: ").append(toIndentedString(tenantAddress)).append("\n");
    sb.append("    limitAccountNum: ").append(toIndentedString(limitAccountNum)).append("\n");
    sb.append("    userAccount: ").append(toIndentedString(userAccount)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    sendInitEmailEnable: ").append(toIndentedString(sendInitEmailEnable)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    isLogoInherit: ").append(toIndentedString(isLogoInherit)).append("\n");
    sb.append("    userPassword: ").append(toIndentedString(userPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

