/*
 * 站点内AP设备Nat日志上报开关
 * · 查询站点内AP设备Nat日志上报配置 · 配置站点内AP设备Nat日志上报信息 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 配置请求参数。
 */
@ApiModel(description = "配置请求参数。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:10.757+08:00")
public class NatSessionLogConfigParam {
  @SerializedName("natSessionLogEnable")
  private Boolean natSessionLogEnable = null;

  @SerializedName("logInterval")
  private Long logInterval = null;

  @SerializedName("binaryNatSessionLogEnable")
  private Boolean binaryNatSessionLogEnable = null;

  @SerializedName("binaryLogHostAddress")
  private String binaryLogHostAddress = null;

  @SerializedName("binaryLogHostPort")
  private Long binaryLogHostPort = null;

  @SerializedName("binaryLogSrcPort")
  private Long binaryLogSrcPort = null;

  public NatSessionLogConfigParam natSessionLogEnable(Boolean natSessionLogEnable) {
    this.natSessionLogEnable = natSessionLogEnable;
    return this;
  }

   /**
   * Nat日志上报使能开关。当natSessionLogEnable为true时，logInterval，binaryNatSessionLogEnable生效。
   * return natSessionLogEnable
  **/
  @ApiModelProperty(value = "Nat日志上报使能开关。当natSessionLogEnable为true时，logInterval，binaryNatSessionLogEnable生效。")
  public Boolean getNatSessionLogEnable() {
    return natSessionLogEnable;
  }

   /**
   * Nat日志上报使能开关。当natSessionLogEnable为true时，logInterval，binaryNatSessionLogEnable生效。
   * Param natSessionLogEnable
  **/
  public void setNatSessionLogEnable(Boolean natSessionLogEnable) {
    this.natSessionLogEnable = natSessionLogEnable;
  }

  public NatSessionLogConfigParam logInterval(Long logInterval) {
    this.logInterval = logInterval;
    return this;
  }

   /**
   * Nat日志上报时间间隔，单位：s，默认30s。
   * minimum: 1
   * maximum: 400
   * return logInterval
  **/
  @ApiModelProperty(value = "Nat日志上报时间间隔，单位：s，默认30s。")
  public Long getLogInterval() {
    return logInterval;
  }

   /**
   * Nat日志上报时间间隔，单位：s，默认30s。
   * minimum: 1
   * maximum: 400
   * Param logInterval
  **/
  public void setLogInterval(Long logInterval) {
    this.logInterval = logInterval;
  }

  public NatSessionLogConfigParam binaryNatSessionLogEnable(Boolean binaryNatSessionLogEnable) {
    this.binaryNatSessionLogEnable = binaryNatSessionLogEnable;
    return this;
  }

   /**
   * 二进制格式的日志上报开关。当binaryNatSessionLogEnable为true时，binaryLogHostAddress，binaryLogHostPort，binaryLogSrcPort生效。当binaryNatSessionLogEnable为false时，Nat日志上报的格式为文本。
   * return binaryNatSessionLogEnable
  **/
  @ApiModelProperty(value = "二进制格式的日志上报开关。当binaryNatSessionLogEnable为true时，binaryLogHostAddress，binaryLogHostPort，binaryLogSrcPort生效。当binaryNatSessionLogEnable为false时，Nat日志上报的格式为文本。")
  public Boolean getBinaryNatSessionLogEnable() {
    return binaryNatSessionLogEnable;
  }

   /**
   * 二进制格式的日志上报开关。当binaryNatSessionLogEnable为true时，binaryLogHostAddress，binaryLogHostPort，binaryLogSrcPort生效。当binaryNatSessionLogEnable为false时，Nat日志上报的格式为文本。
   * Param binaryNatSessionLogEnable
  **/
  public void setBinaryNatSessionLogEnable(Boolean binaryNatSessionLogEnable) {
    this.binaryNatSessionLogEnable = binaryNatSessionLogEnable;
  }

  public NatSessionLogConfigParam binaryLogHostAddress(String binaryLogHostAddress) {
    this.binaryLogHostAddress = binaryLogHostAddress;
    return this;
  }

   /**
   * 二进制上报日志目标服务器IP地址。
   * return binaryLogHostAddress
  **/
  @ApiModelProperty(value = "二进制上报日志目标服务器IP地址。")
  public String getBinaryLogHostAddress() {
    return binaryLogHostAddress;
  }

   /**
   * 二进制上报日志目标服务器IP地址。
   * Param binaryLogHostAddress
  **/
  public void setBinaryLogHostAddress(String binaryLogHostAddress) {
    this.binaryLogHostAddress = binaryLogHostAddress;
  }

  public NatSessionLogConfigParam binaryLogHostPort(Long binaryLogHostPort) {
    this.binaryLogHostPort = binaryLogHostPort;
    return this;
  }

   /**
   * 二进制上报日志目标服务器端口号，范围为：1-65535。
   * minimum: 1
   * maximum: 65535
   * return binaryLogHostPort
  **/
  @ApiModelProperty(value = "二进制上报日志目标服务器端口号，范围为：1-65535。")
  public Long getBinaryLogHostPort() {
    return binaryLogHostPort;
  }

   /**
   * 二进制上报日志目标服务器端口号，范围为：1-65535。
   * minimum: 1
   * maximum: 65535
   * Param binaryLogHostPort
  **/
  public void setBinaryLogHostPort(Long binaryLogHostPort) {
    this.binaryLogHostPort = binaryLogHostPort;
  }

  public NatSessionLogConfigParam binaryLogSrcPort(Long binaryLogSrcPort) {
    this.binaryLogSrcPort = binaryLogSrcPort;
    return this;
  }

   /**
   * 二进制上报日志设备源端口号，范围为：10240-55534。
   * minimum: 10240
   * maximum: 55534
   * return binaryLogSrcPort
  **/
  @ApiModelProperty(value = "二进制上报日志设备源端口号，范围为：10240-55534。")
  public Long getBinaryLogSrcPort() {
    return binaryLogSrcPort;
  }

   /**
   * 二进制上报日志设备源端口号，范围为：10240-55534。
   * minimum: 10240
   * maximum: 55534
   * Param binaryLogSrcPort
  **/
  public void setBinaryLogSrcPort(Long binaryLogSrcPort) {
    this.binaryLogSrcPort = binaryLogSrcPort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NatSessionLogConfigParam natSessionLogConfigParam = (NatSessionLogConfigParam) o;
    return Objects.equals(this.natSessionLogEnable, natSessionLogConfigParam.natSessionLogEnable) &&
        Objects.equals(this.logInterval, natSessionLogConfigParam.logInterval) &&
        Objects.equals(this.binaryNatSessionLogEnable, natSessionLogConfigParam.binaryNatSessionLogEnable) &&
        Objects.equals(this.binaryLogHostAddress, natSessionLogConfigParam.binaryLogHostAddress) &&
        Objects.equals(this.binaryLogHostPort, natSessionLogConfigParam.binaryLogHostPort) &&
        Objects.equals(this.binaryLogSrcPort, natSessionLogConfigParam.binaryLogSrcPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(natSessionLogEnable, logInterval, binaryNatSessionLogEnable, binaryLogHostAddress, binaryLogHostPort, binaryLogSrcPort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NatSessionLogConfigParam {\n");
    
    sb.append("    natSessionLogEnable: ").append(toIndentedString(natSessionLogEnable)).append("\n");
    sb.append("    logInterval: ").append(toIndentedString(logInterval)).append("\n");
    sb.append("    binaryNatSessionLogEnable: ").append(toIndentedString(binaryNatSessionLogEnable)).append("\n");
    sb.append("    binaryLogHostAddress: ").append(toIndentedString(binaryLogHostAddress)).append("\n");
    sb.append("    binaryLogHostPort: ").append(toIndentedString(binaryLogHostPort)).append("\n");
    sb.append("    binaryLogSrcPort: ").append(toIndentedString(binaryLogSrcPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

