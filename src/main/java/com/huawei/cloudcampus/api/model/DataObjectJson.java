/*
 * 链路管理
 * 链路管理北向接口 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DataObjectJson
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:41.151+08:00")
public class DataObjectJson {
  @SerializedName("linkid")
  private String linkid = null;

  @SerializedName("linkType")
  private String linkType = null;

  @SerializedName("anedn")
  private String anedn = null;

  @SerializedName("znedn")
  private String znedn = null;

  @SerializedName("anePortid")
  private String anePortid = null;

  @SerializedName("znePortid")
  private String znePortid = null;

  @SerializedName("aneDevType")
  private String aneDevType = null;

  @SerializedName("zneDevType")
  private String zneDevType = null;

  @SerializedName("linkStatus")
  private Integer linkStatus = null;

  @SerializedName("aportName")
  private String aportName = null;

  @SerializedName("zportName")
  private String zportName = null;

  public DataObjectJson linkid(String linkid) {
    this.linkid = linkid;
    return this;
  }

   /**
   * 链路ID
   * return linkid
  **/
  @ApiModelProperty(value = "链路ID")
  public String getLinkid() {
    return linkid;
  }

   /**
   * 链路ID
   * Param linkid
  **/
  public void setLinkid(String linkid) {
    this.linkid = linkid;
  }

  public DataObjectJson linkType(String linkType) {
    this.linkType = linkType;
    return this;
  }

   /**
   * 链路类型，例如：FC、ETH
   * return linkType
  **/
  @ApiModelProperty(value = "链路类型，例如：FC、ETH")
  public String getLinkType() {
    return linkType;
  }

   /**
   * 链路类型，例如：FC、ETH
   * Param linkType
  **/
  public void setLinkType(String linkType) {
    this.linkType = linkType;
  }

  public DataObjectJson anedn(String anedn) {
    this.anedn = anedn;
    return this;
  }

   /**
   * 源网元DN
   * return anedn
  **/
  @ApiModelProperty(value = "源网元DN")
  public String getAnedn() {
    return anedn;
  }

   /**
   * 源网元DN
   * Param anedn
  **/
  public void setAnedn(String anedn) {
    this.anedn = anedn;
  }

  public DataObjectJson znedn(String znedn) {
    this.znedn = znedn;
    return this;
  }

   /**
   * 目的网元DN
   * return znedn
  **/
  @ApiModelProperty(value = "目的网元DN")
  public String getZnedn() {
    return znedn;
  }

   /**
   * 目的网元DN
   * Param znedn
  **/
  public void setZnedn(String znedn) {
    this.znedn = znedn;
  }

  public DataObjectJson anePortid(String anePortid) {
    this.anePortid = anePortid;
    return this;
  }

   /**
   * 源网元端口
   * return anePortid
  **/
  @ApiModelProperty(value = "源网元端口")
  public String getAnePortid() {
    return anePortid;
  }

   /**
   * 源网元端口
   * Param anePortid
  **/
  public void setAnePortid(String anePortid) {
    this.anePortid = anePortid;
  }

  public DataObjectJson znePortid(String znePortid) {
    this.znePortid = znePortid;
    return this;
  }

   /**
   * 目的网元端口
   * return znePortid
  **/
  @ApiModelProperty(value = "目的网元端口")
  public String getZnePortid() {
    return znePortid;
  }

   /**
   * 目的网元端口
   * Param znePortid
  **/
  public void setZnePortid(String znePortid) {
    this.znePortid = znePortid;
  }

  public DataObjectJson aneDevType(String aneDevType) {
    this.aneDevType = aneDevType;
    return this;
  }

   /**
   * 源网元类型
   * return aneDevType
  **/
  @ApiModelProperty(value = "源网元类型")
  public String getAneDevType() {
    return aneDevType;
  }

   /**
   * 源网元类型
   * Param aneDevType
  **/
  public void setAneDevType(String aneDevType) {
    this.aneDevType = aneDevType;
  }

  public DataObjectJson zneDevType(String zneDevType) {
    this.zneDevType = zneDevType;
    return this;
  }

   /**
   * 目的网元类型
   * return zneDevType
  **/
  @ApiModelProperty(value = "目的网元类型")
  public String getZneDevType() {
    return zneDevType;
  }

   /**
   * 目的网元类型
   * Param zneDevType
  **/
  public void setZneDevType(String zneDevType) {
    this.zneDevType = zneDevType;
  }

  public DataObjectJson linkStatus(Integer linkStatus) {
    this.linkStatus = linkStatus;
    return this;
  }

   /**
   * 链路状态： 0：正常 1：未知 2：重要故障 3：紧急故障 4：离线 5：不管理 
   * return linkStatus
  **/
  @ApiModelProperty(value = "链路状态： 0：正常 1：未知 2：重要故障 3：紧急故障 4：离线 5：不管理 ")
  public Integer getLinkStatus() {
    return linkStatus;
  }

   /**
   * 链路状态： 0：正常 1：未知 2：重要故障 3：紧急故障 4：离线 5：不管理 
   * Param linkStatus
  **/
  public void setLinkStatus(Integer linkStatus) {
    this.linkStatus = linkStatus;
  }

  public DataObjectJson aportName(String aportName) {
    this.aportName = aportName;
    return this;
  }

   /**
   * 源网元端口名称
   * return aportName
  **/
  @ApiModelProperty(value = "源网元端口名称")
  public String getAportName() {
    return aportName;
  }

   /**
   * 源网元端口名称
   * Param aportName
  **/
  public void setAportName(String aportName) {
    this.aportName = aportName;
  }

  public DataObjectJson zportName(String zportName) {
    this.zportName = zportName;
    return this;
  }

   /**
   * 目的网元端口名称
   * return zportName
  **/
  @ApiModelProperty(value = "目的网元端口名称")
  public String getZportName() {
    return zportName;
  }

   /**
   * 目的网元端口名称
   * Param zportName
  **/
  public void setZportName(String zportName) {
    this.zportName = zportName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataObjectJson dataObjectJson = (DataObjectJson) o;
    return Objects.equals(this.linkid, dataObjectJson.linkid) &&
        Objects.equals(this.linkType, dataObjectJson.linkType) &&
        Objects.equals(this.anedn, dataObjectJson.anedn) &&
        Objects.equals(this.znedn, dataObjectJson.znedn) &&
        Objects.equals(this.anePortid, dataObjectJson.anePortid) &&
        Objects.equals(this.znePortid, dataObjectJson.znePortid) &&
        Objects.equals(this.aneDevType, dataObjectJson.aneDevType) &&
        Objects.equals(this.zneDevType, dataObjectJson.zneDevType) &&
        Objects.equals(this.linkStatus, dataObjectJson.linkStatus) &&
        Objects.equals(this.aportName, dataObjectJson.aportName) &&
        Objects.equals(this.zportName, dataObjectJson.zportName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkid, linkType, anedn, znedn, anePortid, znePortid, aneDevType, zneDevType, linkStatus, aportName, zportName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataObjectJson {\n");
    
    sb.append("    linkid: ").append(toIndentedString(linkid)).append("\n");
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    anedn: ").append(toIndentedString(anedn)).append("\n");
    sb.append("    znedn: ").append(toIndentedString(znedn)).append("\n");
    sb.append("    anePortid: ").append(toIndentedString(anePortid)).append("\n");
    sb.append("    znePortid: ").append(toIndentedString(znePortid)).append("\n");
    sb.append("    aneDevType: ").append(toIndentedString(aneDevType)).append("\n");
    sb.append("    zneDevType: ").append(toIndentedString(zneDevType)).append("\n");
    sb.append("    linkStatus: ").append(toIndentedString(linkStatus)).append("\n");
    sb.append("    aportName: ").append(toIndentedString(aportName)).append("\n");
    sb.append("    zportName: ").append(toIndentedString(zportName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

