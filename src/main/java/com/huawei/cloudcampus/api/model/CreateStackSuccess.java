/*
 * 堆叠管理
 * 堆叠管理第三方接口。 场景：创建堆叠操作的第三方接口。
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.StackMemberOutput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 创建堆叠返回success结构。
 */
@ApiModel(description = "创建堆叠返回success结构。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:11.966+08:00")
public class CreateStackSuccess {
  @SerializedName("stackId")
  private String stackId = null;

  @SerializedName("stackName")
  private String stackName = null;

  @SerializedName("stackMember")
  private List<StackMemberOutput> stackMember = null;

  public CreateStackSuccess stackId(String stackId) {
    this.stackId = stackId;
    return this;
  }

   /**
   * 堆叠ID，UUID格式。
   * return stackId
  **/
  @ApiModelProperty(value = "堆叠ID，UUID格式。")
  public String getStackId() {
    return stackId;
  }

   /**
   * 堆叠ID，UUID格式。
   * Param stackId
  **/
  public void setStackId(String stackId) {
    this.stackId = stackId;
  }

  public CreateStackSuccess stackName(String stackName) {
    this.stackName = stackName;
    return this;
  }

   /**
   * 堆叠名称。
   * return stackName
  **/
  @ApiModelProperty(value = "堆叠名称。")
  public String getStackName() {
    return stackName;
  }

   /**
   * 堆叠名称。
   * Param stackName
  **/
  public void setStackName(String stackName) {
    this.stackName = stackName;
  }

  public CreateStackSuccess stackMember(List<StackMemberOutput> stackMember) {
    this.stackMember = stackMember;
    return this;
  }

  public CreateStackSuccess addStackMemberItem(StackMemberOutput stackMemberItem) {
    if (this.stackMember == null) {
      this.stackMember = new ArrayList<StackMemberOutput>();
    }
    this.stackMember.add(stackMemberItem);
    return this;
  }

   /**
   * 堆叠成员。
   * return stackMember
  **/
  @ApiModelProperty(value = "堆叠成员。")
  public List<StackMemberOutput> getStackMember() {
    return stackMember;
  }

   /**
   * 堆叠成员。
   * Param stackMember
  **/
  public void setStackMember(List<StackMemberOutput> stackMember) {
    this.stackMember = stackMember;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStackSuccess createStackSuccess = (CreateStackSuccess) o;
    return Objects.equals(this.stackId, createStackSuccess.stackId) &&
        Objects.equals(this.stackName, createStackSuccess.stackName) &&
        Objects.equals(this.stackMember, createStackSuccess.stackMember);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stackId, stackName, stackMember);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStackSuccess {\n");
    
    sb.append("    stackId: ").append(toIndentedString(stackId)).append("\n");
    sb.append("    stackName: ").append(toIndentedString(stackName)).append("\n");
    sb.append("    stackMember: ").append(toIndentedString(stackMember)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

