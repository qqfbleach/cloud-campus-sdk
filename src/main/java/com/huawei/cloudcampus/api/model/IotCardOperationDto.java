/*
 * AP网口IOT插卡管理
 * AP网口IOT插卡查询及操作接口。 场景：对AP网口IOT插卡查询及操作的第三方接口。
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 查询物联网卡操作数据传送对象。
 */
@ApiModel(description = "查询物联网卡操作数据传送对象。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:14.620+08:00")
public class IotCardOperationDto {
  @SerializedName("deviceId")
  private String deviceId = null;

  @SerializedName("slot")
  private Integer slot = null;

  /**
   * 下发操作。取值范围：reboot---重启、reset-factory-configuration---恢复出厂配置、switch-firmware---切换分区、reset-network-configuration---重置网络配置。
   */
  @JsonAdapter(OperationEnum.Adapter.class)
  public enum OperationEnum {
    REBOOT("reboot"),
    
    RESET_FACTORY_CONFIGURATION("reset-factory-configuration"),
    
    SWITCH_FIRMWARE("switch-firmware"),
    
    RESET_NETWORK_CONFIGURATION("reset-network-configuration");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationEnum fromValue(String text) {
      for (OperationEnum b : OperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OperationEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("operation")
  private OperationEnum operation = null;

  public IotCardOperationDto deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * AP的设备ID，UUID格式。
   * return deviceId
  **/
  @ApiModelProperty(required = true, value = "AP的设备ID，UUID格式。")
  public String getDeviceId() {
    return deviceId;
  }

   /**
   * AP的设备ID，UUID格式。
   * Param deviceId
  **/
  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public IotCardOperationDto slot(Integer slot) {
    this.slot = slot;
    return this;
  }

   /**
   * 插卡槽位号。
   * minimum: 0
   * maximum: 8
   * return slot
  **/
  @ApiModelProperty(required = true, value = "插卡槽位号。")
  public Integer getSlot() {
    return slot;
  }

   /**
   * 插卡槽位号。
   * minimum: 0
   * maximum: 8
   * Param slot
  **/
  public void setSlot(Integer slot) {
    this.slot = slot;
  }

  public IotCardOperationDto operation(OperationEnum operation) {
    this.operation = operation;
    return this;
  }

   /**
   * 下发操作。取值范围：reboot---重启、reset-factory-configuration---恢复出厂配置、switch-firmware---切换分区、reset-network-configuration---重置网络配置。
   * return operation
  **/
  @ApiModelProperty(required = true, value = "下发操作。取值范围：reboot---重启、reset-factory-configuration---恢复出厂配置、switch-firmware---切换分区、reset-network-configuration---重置网络配置。")
  public OperationEnum getOperation() {
    return operation;
  }

   /**
   * 下发操作。取值范围：reboot---重启、reset-factory-configuration---恢复出厂配置、switch-firmware---切换分区、reset-network-configuration---重置网络配置。
   * Param operation
  **/
  public void setOperation(OperationEnum operation) {
    this.operation = operation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IotCardOperationDto iotCardOperationDto = (IotCardOperationDto) o;
    return Objects.equals(this.deviceId, iotCardOperationDto.deviceId) &&
        Objects.equals(this.slot, iotCardOperationDto.slot) &&
        Objects.equals(this.operation, iotCardOperationDto.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, slot, operation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IotCardOperationDto {\n");
    
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    slot: ").append(toIndentedString(slot)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

