/*
 * 站点模板SNMP配置
 * 站点模板SNMP配置第三方接口说明。 
 *
 * OpenAPI spec version: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 告警服务器列表。
 */
@ApiModel(description = "告警服务器列表。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:07.861+08:00")
public class TargetHostsDto {
  @SerializedName("hostIp")
  private String hostIp = null;

  @SerializedName("hostName")
  private String hostName = null;

  public TargetHostsDto hostIp(String hostIp) {
    this.hostIp = hostIp;
    return this;
  }

   /**
   * 主机IP地址，只支持A/B/C类IP地址。
   * return hostIp
  **/
  @ApiModelProperty(value = "主机IP地址，只支持A/B/C类IP地址。")
  public String getHostIp() {
    return hostIp;
  }

   /**
   * 主机IP地址，只支持A/B/C类IP地址。
   * Param hostIp
  **/
  public void setHostIp(String hostIp) {
    this.hostIp = hostIp;
  }

  public TargetHostsDto hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * 主机名称，当protocolVersion为V3时，hostName生效，其值只能从userInfos的snmpUserName中选择。
   * return hostName
  **/
  @ApiModelProperty(value = "主机名称，当protocolVersion为V3时，hostName生效，其值只能从userInfos的snmpUserName中选择。")
  public String getHostName() {
    return hostName;
  }

   /**
   * 主机名称，当protocolVersion为V3时，hostName生效，其值只能从userInfos的snmpUserName中选择。
   * Param hostName
  **/
  public void setHostName(String hostName) {
    this.hostName = hostName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetHostsDto targetHostsDto = (TargetHostsDto) o;
    return Objects.equals(this.hostIp, targetHostsDto.hostIp) &&
        Objects.equals(this.hostName, targetHostsDto.hostName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostIp, hostName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetHostsDto {\n");
    
    sb.append("    hostIp: ").append(toIndentedString(hostIp)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

