/*
 * RADIUS模板管理
 * RADIUS模板配置第三方北向接口说明。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 实时计费功能。
 */
@ApiModel(description = "实时计费功能。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:57.602+08:00")
public class RadiusTempDtoRealtimeAccounting {
  @SerializedName("realtimeEnable")
  private Boolean realtimeEnable = null;

  @SerializedName("realtimeInterval")
  private Integer realtimeInterval = null;

  public RadiusTempDtoRealtimeAccounting realtimeEnable(Boolean realtimeEnable) {
    this.realtimeEnable = realtimeEnable;
    return this;
  }

   /**
   * 是否设置实时计费，如果为true，必须配置实时计费周期，且先配置主计费服务器。创建时，若不填则默认值为false。
   * return realtimeEnable
  **/
  @ApiModelProperty(value = "是否设置实时计费，如果为true，必须配置实时计费周期，且先配置主计费服务器。创建时，若不填则默认值为false。")
  public Boolean getRealtimeEnable() {
    return realtimeEnable;
  }

   /**
   * 是否设置实时计费，如果为true，必须配置实时计费周期，且先配置主计费服务器。创建时，若不填则默认值为false。
   * Param realtimeEnable
  **/
  public void setRealtimeEnable(Boolean realtimeEnable) {
    this.realtimeEnable = realtimeEnable;
  }

  public RadiusTempDtoRealtimeAccounting realtimeInterval(Integer realtimeInterval) {
    this.realtimeInterval = realtimeInterval;
    return this;
  }

   /**
   * 实时计费周期，单位是分钟，当realTimeEnable为true时必填。
   * minimum: 1
   * maximum: 65535
   * return realtimeInterval
  **/
  @ApiModelProperty(value = "实时计费周期，单位是分钟，当realTimeEnable为true时必填。")
  public Integer getRealtimeInterval() {
    return realtimeInterval;
  }

   /**
   * 实时计费周期，单位是分钟，当realTimeEnable为true时必填。
   * minimum: 1
   * maximum: 65535
   * Param realtimeInterval
  **/
  public void setRealtimeInterval(Integer realtimeInterval) {
    this.realtimeInterval = realtimeInterval;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RadiusTempDtoRealtimeAccounting radiusTempDtoRealtimeAccounting = (RadiusTempDtoRealtimeAccounting) o;
    return Objects.equals(this.realtimeEnable, radiusTempDtoRealtimeAccounting.realtimeEnable) &&
        Objects.equals(this.realtimeInterval, radiusTempDtoRealtimeAccounting.realtimeInterval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(realtimeEnable, realtimeInterval);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RadiusTempDtoRealtimeAccounting {\n");
    
    sb.append("    realtimeEnable: ").append(toIndentedString(realtimeEnable)).append("\n");
    sb.append("    realtimeInterval: ").append(toIndentedString(realtimeInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

