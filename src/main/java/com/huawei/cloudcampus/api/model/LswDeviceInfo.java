/*
 * 交换机有线认证模板配置
 * 交换机有线认证模板，主要包括： · 创建站点下交换机有线认证模板配置 · 查询站点下交换机有线认证模板配置 · 修改站点下交换机有线认证模板配置 · 删除站点下交换机有线认证模板配置 · 修改站点交换机有线认证部分模板配置 · 增量绑站点交换机有线认证模板配置定 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.LswInterfaceInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LswDeviceInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:43.536+08:00")
public class LswDeviceInfo {
  @SerializedName("lswInterfaceInfo")
  private LswInterfaceInfo lswInterfaceInfo = null;

  /**
   * 操作。取值范围：add---新增，update---修改，delete---删除设备。
   */
  @JsonAdapter(DeviceOperationEnum.Adapter.class)
  public enum DeviceOperationEnum {
    ADD("add"),
    
    UPDATE("update"),
    
    DELETE("delete");

    private String value;

    DeviceOperationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeviceOperationEnum fromValue(String text) {
      for (DeviceOperationEnum b : DeviceOperationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeviceOperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeviceOperationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeviceOperationEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeviceOperationEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("deviceOperation")
  private DeviceOperationEnum deviceOperation = null;

  public LswDeviceInfo lswInterfaceInfo(LswInterfaceInfo lswInterfaceInfo) {
    this.lswInterfaceInfo = lswInterfaceInfo;
    return this;
  }

   /**
   * Get lswInterfaceInfo
   * return lswInterfaceInfo
  **/
  @ApiModelProperty(required = true, value = "")
  public LswInterfaceInfo getLswInterfaceInfo() {
    return lswInterfaceInfo;
  }

   /**
   * Set lswInterfaceInfo
   * Param lswInterfaceInfo
  **/
  public void setLswInterfaceInfo(LswInterfaceInfo lswInterfaceInfo) {
    this.lswInterfaceInfo = lswInterfaceInfo;
  }

  public LswDeviceInfo deviceOperation(DeviceOperationEnum deviceOperation) {
    this.deviceOperation = deviceOperation;
    return this;
  }

   /**
   * 操作。取值范围：add---新增，update---修改，delete---删除设备。
   * return deviceOperation
  **/
  @ApiModelProperty(required = true, value = "操作。取值范围：add---新增，update---修改，delete---删除设备。")
  public DeviceOperationEnum getDeviceOperation() {
    return deviceOperation;
  }

   /**
   * 操作。取值范围：add---新增，update---修改，delete---删除设备。
   * Param deviceOperation
  **/
  public void setDeviceOperation(DeviceOperationEnum deviceOperation) {
    this.deviceOperation = deviceOperation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LswDeviceInfo lswDeviceInfo = (LswDeviceInfo) o;
    return Objects.equals(this.lswInterfaceInfo, lswDeviceInfo.lswInterfaceInfo) &&
        Objects.equals(this.deviceOperation, lswDeviceInfo.deviceOperation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lswInterfaceInfo, deviceOperation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LswDeviceInfo {\n");
    
    sb.append("    lswInterfaceInfo: ").append(toIndentedString(lswInterfaceInfo)).append("\n");
    sb.append("    deviceOperation: ").append(toIndentedString(deviceOperation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

