/*
 * 站点管理
 * 站点管理第三方接口。 场景：对站点增删改查操作的第三方接口。
 *
 * OpenAPI spec version: 1.3.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 创建站点入参sites结构。
 */
@ApiModel(description = "创建站点入参sites结构。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:01.736+08:00")
public class CreateSiteDtoData {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AP("AP"),
    
    AR("AR"),
    
    LSW("LSW"),
    
    FW("FW"),
    
    AC("AC"),
    
    ONT("ONT"),
    
    OLT("OLT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private List<TypeEnum> type = null;

  @SerializedName("pattern")
  private Integer pattern = null;

  public CreateSiteDtoData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 站点名称。
   * return name
  **/
  @ApiModelProperty(required = true, value = "站点名称。")
  public String getName() {
    return name;
  }

   /**
   * 站点名称。
   * Param name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public CreateSiteDtoData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * 站点描述。
   * return description
  **/
  @ApiModelProperty(value = "站点描述。")
  public String getDescription() {
    return description;
  }

   /**
   * 站点描述。
   * Param description
  **/
  public void setDescription(String description) {
    this.description = description;
  }

  public CreateSiteDtoData type(List<TypeEnum> type) {
    this.type = type;
    return this;
  }

  public CreateSiteDtoData addTypeItem(TypeEnum typeItem) {
    if (this.type == null) {
      this.type = new ArrayList<TypeEnum>();
    }
    this.type.add(typeItem);
    return this;
  }

   /**
   * 混合站点类型集合：可选“AR”、“AP”、“FW”、“AC（Fit AP）”、“LSW”、“ONT”或者“OLT”中一个或多个类型。
   * return type
  **/
  @ApiModelProperty(value = "混合站点类型集合：可选“AR”、“AP”、“FW”、“AC（Fit AP）”、“LSW”、“ONT”或者“OLT”中一个或多个类型。")
  public List<TypeEnum> getType() {
    return type;
  }

   /**
   * 混合站点类型集合：可选“AR”、“AP”、“FW”、“AC（Fit AP）”、“LSW”、“ONT”或者“OLT”中一个或多个类型。
   * Param type
  **/
  public void setType(List<TypeEnum> type) {
    this.type = type;
  }

  public CreateSiteDtoData pattern(Integer pattern) {
    this.pattern = pattern;
    return this;
  }

   /**
   * 站点配置模式，取值范围为：1---默认，2---配置文件。
   * minimum: 1
   * maximum: 2
   * return pattern
  **/
  @ApiModelProperty(value = "站点配置模式，取值范围为：1---默认，2---配置文件。")
  public Integer getPattern() {
    return pattern;
  }

   /**
   * 站点配置模式，取值范围为：1---默认，2---配置文件。
   * minimum: 1
   * maximum: 2
   * Param pattern
  **/
  public void setPattern(Integer pattern) {
    this.pattern = pattern;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSiteDtoData createSiteDtoData = (CreateSiteDtoData) o;
    return Objects.equals(this.name, createSiteDtoData.name) &&
        Objects.equals(this.description, createSiteDtoData.description) &&
        Objects.equals(this.type, createSiteDtoData.type) &&
        Objects.equals(this.pattern, createSiteDtoData.pattern);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, type, pattern);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSiteDtoData {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

