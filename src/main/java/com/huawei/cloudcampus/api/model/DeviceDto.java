/*
 * 设备基本信息管理
 * 设备相关操作接口。 场景：对设备增删改查操作的第三方接口。
 *
 * OpenAPI spec version: 1.6.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DeviceDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-10-12T17:12:59.914+08:00")
public class DeviceDto {
  @SerializedName("esn")
  private String esn = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("siteId")
  private String siteId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("resourceId")
  private String resourceId = null;

  @SerializedName("deviceModel")
  private String deviceModel = null;

  @SerializedName("systemIp")
  private String systemIp = null;

  @SerializedName("tags")
  private List<String> tags = null;

  public DeviceDto esn(String esn) {
    this.esn = esn;
    return this;
  }

   /**
   * 设备ESN号。
   * return esn
  **/
  @ApiModelProperty(value = "设备ESN号。")
  public String getEsn() {
    return esn;
  }

   /**
   * 设备ESN号。
   * Param esn
  **/
  public void setEsn(String esn) {
    this.esn = esn;
  }

  public DeviceDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 设备名称，若不传或传值为空，则以ESN号命名设备，设备名称不能包含\&quot;?\&quot;或者制表符TAB。
   * return name
  **/
  @ApiModelProperty(value = "设备名称，若不传或传值为空，则以ESN号命名设备，设备名称不能包含\"?\"或者制表符TAB。")
  public String getName() {
    return name;
  }

   /**
   * 设备名称，若不传或传值为空，则以ESN号命名设备，设备名称不能包含\&quot;?\&quot;或者制表符TAB。
   * Param name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public DeviceDto siteId(String siteId) {
    this.siteId = siteId;
    return this;
  }

   /**
   * 站点ID，如果不传，则不添加到任意站点。
   * return siteId
  **/
  @ApiModelProperty(value = "站点ID，如果不传，则不添加到任意站点。")
  public String getSiteId() {
    return siteId;
  }

   /**
   * 站点ID，如果不传，则不添加到任意站点。
   * Param siteId
  **/
  public void setSiteId(String siteId) {
    this.siteId = siteId;
  }

  public DeviceDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * 设备详情描述。
   * return description
  **/
  @ApiModelProperty(value = "设备详情描述。")
  public String getDescription() {
    return description;
  }

   /**
   * 设备详情描述。
   * Param description
  **/
  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceDto resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * 资产编号。
   * return resourceId
  **/
  @ApiModelProperty(value = "资产编号。")
  public String getResourceId() {
    return resourceId;
  }

   /**
   * 资产编号。
   * Param resourceId
  **/
  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public DeviceDto deviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
    return this;
  }

   /**
   * 设备款型。版本支持的设备款型请参考《版本说明书》中的“版本配套说明”章节。
   * return deviceModel
  **/
  @ApiModelProperty(value = "设备款型。版本支持的设备款型请参考《版本说明书》中的“版本配套说明”章节。")
  public String getDeviceModel() {
    return deviceModel;
  }

   /**
   * 设备款型。版本支持的设备款型请参考《版本说明书》中的“版本配套说明”章节。
   * Param deviceModel
  **/
  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }

  public DeviceDto systemIp(String systemIp) {
    this.systemIp = systemIp;
    return this;
  }

   /**
   * 系统IP地址。若systemIp不传或为空，则从地址池中自动分配IP下发给设备的loopback口；若非空，则将指定的systemIp下发给设备的loopback口。
   * return systemIp
  **/
  @ApiModelProperty(value = "系统IP地址。若systemIp不传或为空，则从地址池中自动分配IP下发给设备的loopback口；若非空，则将指定的systemIp下发给设备的loopback口。")
  public String getSystemIp() {
    return systemIp;
  }

   /**
   * 系统IP地址。若systemIp不传或为空，则从地址池中自动分配IP下发给设备的loopback口；若非空，则将指定的systemIp下发给设备的loopback口。
   * Param systemIp
  **/
  public void setSystemIp(String systemIp) {
    this.systemIp = systemIp;
  }

  public DeviceDto tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DeviceDto addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * 设备标签列表，关联标签列表时，站点ID不能为空，只支持AP设备。
   * return tags
  **/
  @ApiModelProperty(value = "设备标签列表，关联标签列表时，站点ID不能为空，只支持AP设备。")
  public List<String> getTags() {
    return tags;
  }

   /**
   * 设备标签列表，关联标签列表时，站点ID不能为空，只支持AP设备。
   * Param tags
  **/
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceDto deviceDto = (DeviceDto) o;
    return Objects.equals(this.esn, deviceDto.esn) &&
        Objects.equals(this.name, deviceDto.name) &&
        Objects.equals(this.siteId, deviceDto.siteId) &&
        Objects.equals(this.description, deviceDto.description) &&
        Objects.equals(this.resourceId, deviceDto.resourceId) &&
        Objects.equals(this.deviceModel, deviceDto.deviceModel) &&
        Objects.equals(this.systemIp, deviceDto.systemIp) &&
        Objects.equals(this.tags, deviceDto.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(esn, name, siteId, description, resourceId, deviceModel, systemIp, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceDto {\n");
    
    sb.append("    esn: ").append(toIndentedString(esn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    systemIp: ").append(toIndentedString(systemIp)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

