/*
 * 运维ping/trace探测
 * ping/trace探测第三方接口。 · 创建ping探测任务 · 查询ping探测结果 · 创建trace探测任务 · 查询trace探测结果 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.PingReplyResultPingReply;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ping探测任务返回具体信息。
 */
@ApiModel(description = "ping探测任务返回具体信息。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:49.142+08:00")
public class PingReplyResult {
  @SerializedName("taskId")
  private String taskId = null;

  @SerializedName("totalCount")
  private Integer totalCount = null;

  @SerializedName("successCount")
  private Integer successCount = null;

  @SerializedName("lossRate")
  private Float lossRate = null;

  @SerializedName("rttAvg")
  private Integer rttAvg = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("PingReply")
  private PingReplyResultPingReply pingReply = null;

  public PingReplyResult taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * ping探测任务ID，格式UUID。
   * return taskId
  **/
  @ApiModelProperty(required = true, value = "ping探测任务ID，格式UUID。")
  public String getTaskId() {
    return taskId;
  }

   /**
   * ping探测任务ID，格式UUID。
   * Param taskId
  **/
  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }

  public PingReplyResult totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * 总探测次数。
   * return totalCount
  **/
  @ApiModelProperty(required = true, value = "总探测次数。")
  public Integer getTotalCount() {
    return totalCount;
  }

   /**
   * 总探测次数。
   * Param totalCount
  **/
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }

  public PingReplyResult successCount(Integer successCount) {
    this.successCount = successCount;
    return this;
  }

   /**
   * 成功探测次数。
   * return successCount
  **/
  @ApiModelProperty(required = true, value = "成功探测次数。")
  public Integer getSuccessCount() {
    return successCount;
  }

   /**
   * 成功探测次数。
   * Param successCount
  **/
  public void setSuccessCount(Integer successCount) {
    this.successCount = successCount;
  }

  public PingReplyResult lossRate(Float lossRate) {
    this.lossRate = lossRate;
    return this;
  }

   /**
   * 丢失率。单位：百分比。
   * return lossRate
  **/
  @ApiModelProperty(required = true, value = "丢失率。单位：百分比。")
  public Float getLossRate() {
    return lossRate;
  }

   /**
   * 丢失率。单位：百分比。
   * Param lossRate
  **/
  public void setLossRate(Float lossRate) {
    this.lossRate = lossRate;
  }

  public PingReplyResult rttAvg(Integer rttAvg) {
    this.rttAvg = rttAvg;
    return this;
  }

   /**
   * 报文平均响应时间，单位：毫秒。
   * return rttAvg
  **/
  @ApiModelProperty(required = true, value = "报文平均响应时间，单位：毫秒。")
  public Integer getRttAvg() {
    return rttAvg;
  }

   /**
   * 报文平均响应时间，单位：毫秒。
   * Param rttAvg
  **/
  public void setRttAvg(Integer rttAvg) {
    this.rttAvg = rttAvg;
  }

  public PingReplyResult status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * 探测状态。 0 --- 成功 1 --- 执行中 2 --- 超时 
   * return status
  **/
  @ApiModelProperty(required = true, value = "探测状态。 0 --- 成功 1 --- 执行中 2 --- 超时 ")
  public Integer getStatus() {
    return status;
  }

   /**
   * 探测状态。 0 --- 成功 1 --- 执行中 2 --- 超时 
   * Param status
  **/
  public void setStatus(Integer status) {
    this.status = status;
  }

  public PingReplyResult pingReply(PingReplyResultPingReply pingReply) {
    this.pingReply = pingReply;
    return this;
  }

   /**
   * Get pingReply
   * return pingReply
  **/
  @ApiModelProperty(value = "")
  public PingReplyResultPingReply getPingReply() {
    return pingReply;
  }

   /**
   * Set pingReply
   * Param pingReply
  **/
  public void setPingReply(PingReplyResultPingReply pingReply) {
    this.pingReply = pingReply;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PingReplyResult pingReplyResult = (PingReplyResult) o;
    return Objects.equals(this.taskId, pingReplyResult.taskId) &&
        Objects.equals(this.totalCount, pingReplyResult.totalCount) &&
        Objects.equals(this.successCount, pingReplyResult.successCount) &&
        Objects.equals(this.lossRate, pingReplyResult.lossRate) &&
        Objects.equals(this.rttAvg, pingReplyResult.rttAvg) &&
        Objects.equals(this.status, pingReplyResult.status) &&
        Objects.equals(this.pingReply, pingReplyResult.pingReply);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskId, totalCount, successCount, lossRate, rttAvg, status, pingReply);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PingReplyResult {\n");
    
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    lossRate: ").append(toIndentedString(lossRate)).append("\n");
    sb.append("    rttAvg: ").append(toIndentedString(rttAvg)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    pingReply: ").append(toIndentedString(pingReply)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

