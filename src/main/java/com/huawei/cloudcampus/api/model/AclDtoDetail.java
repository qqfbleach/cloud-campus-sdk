/*
 * ACL模板管理
 * ACL模板第三方管理接口说明。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.RuleList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AclDtoDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:09.348+08:00")
public class AclDtoDetail {
  @SerializedName("name")
  private String name = null;

  @SerializedName("aclNumber")
  private String aclNumber = null;

  @SerializedName("description")
  private String description = null;

  /**
   * ACL模板类型。
   */
  @JsonAdapter(AclTypeEnum.Adapter.class)
  public enum AclTypeEnum {
    ADVANCED("Advanced"),
    
    USER("User");

    private String value;

    AclTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AclTypeEnum fromValue(String text) {
      for (AclTypeEnum b : AclTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AclTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AclTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AclTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AclTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("aclType")
  private AclTypeEnum aclType = null;

  @SerializedName("ruleList")
  private List<RuleList> ruleList = new ArrayList<RuleList>();

  public AclDtoDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * ACL模板名称，包括汉字、字母、数字、下划线、.、@、-不能与已有的名称重复。
   * return name
  **/
  @ApiModelProperty(required = true, value = "ACL模板名称，包括汉字、字母、数字、下划线、.、@、-不能与已有的名称重复。")
  public String getName() {
    return name;
  }

   /**
   * ACL模板名称，包括汉字、字母、数字、下划线、.、@、-不能与已有的名称重复。
   * Param name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public AclDtoDetail aclNumber(String aclNumber) {
    this.aclNumber = aclNumber;
    return this;
  }

   /**
   * ACL模板编号，必须为数字，aclType为Advanced时，aclNumber范围：3001-3999，aclType为User时，aclNumber范围：6000-6031。
   * return aclNumber
  **/
  @ApiModelProperty(required = true, value = "ACL模板编号，必须为数字，aclType为Advanced时，aclNumber范围：3001-3999，aclType为User时，aclNumber范围：6000-6031。")
  public String getAclNumber() {
    return aclNumber;
  }

   /**
   * ACL模板编号，必须为数字，aclType为Advanced时，aclNumber范围：3001-3999，aclType为User时，aclNumber范围：6000-6031。
   * Param aclNumber
  **/
  public void setAclNumber(String aclNumber) {
    this.aclNumber = aclNumber;
  }

  public AclDtoDetail description(String description) {
    this.description = description;
    return this;
  }

   /**
   * ACL模板描述。
   * return description
  **/
  @ApiModelProperty(value = "ACL模板描述。")
  public String getDescription() {
    return description;
  }

   /**
   * ACL模板描述。
   * Param description
  **/
  public void setDescription(String description) {
    this.description = description;
  }

  public AclDtoDetail aclType(AclTypeEnum aclType) {
    this.aclType = aclType;
    return this;
  }

   /**
   * ACL模板类型。
   * return aclType
  **/
  @ApiModelProperty(required = true, value = "ACL模板类型。")
  public AclTypeEnum getAclType() {
    return aclType;
  }

   /**
   * ACL模板类型。
   * Param aclType
  **/
  public void setAclType(AclTypeEnum aclType) {
    this.aclType = aclType;
  }

  public AclDtoDetail ruleList(List<RuleList> ruleList) {
    this.ruleList = ruleList;
    return this;
  }

  public AclDtoDetail addRuleListItem(RuleList ruleListItem) {
    this.ruleList.add(ruleListItem);
    return this;
  }

   /**
   * 规则列表。
   * return ruleList
  **/
  @ApiModelProperty(required = true, value = "规则列表。")
  public List<RuleList> getRuleList() {
    return ruleList;
  }

   /**
   * 规则列表。
   * Param ruleList
  **/
  public void setRuleList(List<RuleList> ruleList) {
    this.ruleList = ruleList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AclDtoDetail aclDtoDetail = (AclDtoDetail) o;
    return Objects.equals(this.name, aclDtoDetail.name) &&
        Objects.equals(this.aclNumber, aclDtoDetail.aclNumber) &&
        Objects.equals(this.description, aclDtoDetail.description) &&
        Objects.equals(this.aclType, aclDtoDetail.aclType) &&
        Objects.equals(this.ruleList, aclDtoDetail.ruleList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, aclNumber, description, aclType, ruleList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AclDtoDetail {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    aclNumber: ").append(toIndentedString(aclNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    aclType: ").append(toIndentedString(aclType)).append("\n");
    sb.append("    ruleList: ").append(toIndentedString(ruleList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

