/*
 * 框式交换机板卡信息操作
 * 框式上云相关操作接口： 场景：对框式交换机信息查询操作的第三方接口。
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 系统电源信息结果。
 */
@ApiModel(description = "系统电源信息结果。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:14.794+08:00")
public class SystemPowerInfoDto {
  @SerializedName("chassisId")
  private Integer chassisId = null;

  @SerializedName("totalPowerSupplied")
  private Integer totalPowerSupplied = null;

  @SerializedName("maximumPowerNeeded")
  private Integer maximumPowerNeeded = null;

  @SerializedName("remainReservedPower")
  private Integer remainReservedPower = null;

  @SerializedName("remainPower")
  private Integer remainPower = null;

  public SystemPowerInfoDto chassisId(Integer chassisId) {
    this.chassisId = chassisId;
    return this;
  }

   /**
   * 堆叠序号，若ID对应的设备为堆叠设备，输入对应的堆叠序号，若非堆叠设备，默认为1。
   * return chassisId
  **/
  @ApiModelProperty(value = "堆叠序号，若ID对应的设备为堆叠设备，输入对应的堆叠序号，若非堆叠设备，默认为1。")
  public Integer getChassisId() {
    return chassisId;
  }

   /**
   * 堆叠序号，若ID对应的设备为堆叠设备，输入对应的堆叠序号，若非堆叠设备，默认为1。
   * Param chassisId
  **/
  public void setChassisId(Integer chassisId) {
    this.chassisId = chassisId;
  }

  public SystemPowerInfoDto totalPowerSupplied(Integer totalPowerSupplied) {
    this.totalPowerSupplied = totalPowerSupplied;
    return this;
  }

   /**
   * 设备当前可提供的最大功率，单位是W。
   * return totalPowerSupplied
  **/
  @ApiModelProperty(value = "设备当前可提供的最大功率，单位是W。")
  public Integer getTotalPowerSupplied() {
    return totalPowerSupplied;
  }

   /**
   * 设备当前可提供的最大功率，单位是W。
   * Param totalPowerSupplied
  **/
  public void setTotalPowerSupplied(Integer totalPowerSupplied) {
    this.totalPowerSupplied = totalPowerSupplied;
  }

  public SystemPowerInfoDto maximumPowerNeeded(Integer maximumPowerNeeded) {
    this.maximumPowerNeeded = maximumPowerNeeded;
    return this;
  }

   /**
   * 设备需要的最大功率，单位是W。
   * return maximumPowerNeeded
  **/
  @ApiModelProperty(value = "设备需要的最大功率，单位是W。")
  public Integer getMaximumPowerNeeded() {
    return maximumPowerNeeded;
  }

   /**
   * 设备需要的最大功率，单位是W。
   * Param maximumPowerNeeded
  **/
  public void setMaximumPowerNeeded(Integer maximumPowerNeeded) {
    this.maximumPowerNeeded = maximumPowerNeeded;
  }

  public SystemPowerInfoDto remainReservedPower(Integer remainReservedPower) {
    this.remainReservedPower = remainReservedPower;
    return this;
  }

   /**
   * 设备剩余的预留功率，单位是W。
   * return remainReservedPower
  **/
  @ApiModelProperty(value = "设备剩余的预留功率，单位是W。")
  public Integer getRemainReservedPower() {
    return remainReservedPower;
  }

   /**
   * 设备剩余的预留功率，单位是W。
   * Param remainReservedPower
  **/
  public void setRemainReservedPower(Integer remainReservedPower) {
    this.remainReservedPower = remainReservedPower;
  }

  public SystemPowerInfoDto remainPower(Integer remainPower) {
    this.remainPower = remainPower;
    return this;
  }

   /**
   * 设备剩余功率，单位是W。
   * return remainPower
  **/
  @ApiModelProperty(value = "设备剩余功率，单位是W。")
  public Integer getRemainPower() {
    return remainPower;
  }

   /**
   * 设备剩余功率，单位是W。
   * Param remainPower
  **/
  public void setRemainPower(Integer remainPower) {
    this.remainPower = remainPower;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemPowerInfoDto systemPowerInfoDto = (SystemPowerInfoDto) o;
    return Objects.equals(this.chassisId, systemPowerInfoDto.chassisId) &&
        Objects.equals(this.totalPowerSupplied, systemPowerInfoDto.totalPowerSupplied) &&
        Objects.equals(this.maximumPowerNeeded, systemPowerInfoDto.maximumPowerNeeded) &&
        Objects.equals(this.remainReservedPower, systemPowerInfoDto.remainReservedPower) &&
        Objects.equals(this.remainPower, systemPowerInfoDto.remainPower);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chassisId, totalPowerSupplied, maximumPowerNeeded, remainReservedPower, remainPower);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemPowerInfoDto {\n");
    
    sb.append("    chassisId: ").append(toIndentedString(chassisId)).append("\n");
    sb.append("    totalPowerSupplied: ").append(toIndentedString(totalPowerSupplied)).append("\n");
    sb.append("    maximumPowerNeeded: ").append(toIndentedString(maximumPowerNeeded)).append("\n");
    sb.append("    remainReservedPower: ").append(toIndentedString(remainReservedPower)).append("\n");
    sb.append("    remainPower: ").append(toIndentedString(remainPower)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

