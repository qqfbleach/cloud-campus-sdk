/*
 * 终端应用流量信息查询
 * 终端TopN应用流量查询。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 应用信息。
 */
@ApiModel(description = "应用信息。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:15.986+08:00")
public class ApplicationInfoDetail {
  @SerializedName("name")
  private String name = null;

  @SerializedName("percent")
  private Float percent = null;

  @SerializedName("traffic")
  private Float traffic = null;

  @SerializedName("unit")
  private String unit = null;

  public ApplicationInfoDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 应用或应用分类名称。
   * return name
  **/
  @ApiModelProperty(value = "应用或应用分类名称。")
  public String getName() {
    return name;
  }

   /**
   * 应用或应用分类名称。
   * Param name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public ApplicationInfoDetail percent(Float percent) {
    this.percent = percent;
    return this;
  }

   /**
   * 流量占总流量的比值。
   * minimum: 0
   * maximum: 1
   * return percent
  **/
  @ApiModelProperty(value = "流量占总流量的比值。")
  public Float getPercent() {
    return percent;
  }

   /**
   * 流量占总流量的比值。
   * minimum: 0
   * maximum: 1
   * Param percent
  **/
  public void setPercent(Float percent) {
    this.percent = percent;
  }

  public ApplicationInfoDetail traffic(Float traffic) {
    this.traffic = traffic;
    return this;
  }

   /**
   * 应用或者应用类型上行流量与下行流量总和大小。
   * minimum: 0
   * maximum: 340282350000000000000000000000000000000
   * return traffic
  **/
  @ApiModelProperty(value = "应用或者应用类型上行流量与下行流量总和大小。")
  public Float getTraffic() {
    return traffic;
  }

   /**
   * 应用或者应用类型上行流量与下行流量总和大小。
   * minimum: 0
   * maximum: 340282350000000000000000000000000000000
   * Param traffic
  **/
  public void setTraffic(Float traffic) {
    this.traffic = traffic;
  }

  public ApplicationInfoDetail unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * 流量单位。
   * return unit
  **/
  @ApiModelProperty(value = "流量单位。")
  public String getUnit() {
    return unit;
  }

   /**
   * 流量单位。
   * Param unit
  **/
  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationInfoDetail applicationInfoDetail = (ApplicationInfoDetail) o;
    return Objects.equals(this.name, applicationInfoDetail.name) &&
        Objects.equals(this.percent, applicationInfoDetail.percent) &&
        Objects.equals(this.traffic, applicationInfoDetail.traffic) &&
        Objects.equals(this.unit, applicationInfoDetail.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, percent, traffic, unit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationInfoDetail {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    traffic: ").append(toIndentedString(traffic)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

