/*
 * 配置结果查询
 * 查询配置结果
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.huawei.cloudcampus.api.model.FeatureItemStateDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 特性信息。
 */
@ApiModel(description = "特性信息。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:37.211+08:00")
public class FeatureStateDto {
  @SerializedName("featureIdentify")
  private String featureIdentify = null;

  @SerializedName("state")
  private Integer state = null;

  @SerializedName("featureItems")
  private List<FeatureItemStateDto> featureItems = null;

  public FeatureStateDto featureIdentify(String featureIdentify) {
    this.featureIdentify = featureIdentify;
    return this;
  }

   /**
   * 特性类型。
   * return featureIdentify
  **/
  @ApiModelProperty(value = "特性类型。")
  public String getFeatureIdentify() {
    return featureIdentify;
  }

   /**
   * 特性类型。
   * Param featureIdentify
  **/
  public void setFeatureIdentify(String featureIdentify) {
    this.featureIdentify = featureIdentify;
  }

  public FeatureStateDto state(Integer state) {
    this.state = state;
    return this;
  }

   /**
   * 配置下发状态，取值范围：0---成功；1---告警；2---预配置；3---失败；4---正在下发。
   * return state
  **/
  @ApiModelProperty(value = "配置下发状态，取值范围：0---成功；1---告警；2---预配置；3---失败；4---正在下发。")
  public Integer getState() {
    return state;
  }

   /**
   * 配置下发状态，取值范围：0---成功；1---告警；2---预配置；3---失败；4---正在下发。
   * Param state
  **/
  public void setState(Integer state) {
    this.state = state;
  }

  public FeatureStateDto featureItems(List<FeatureItemStateDto> featureItems) {
    this.featureItems = featureItems;
    return this;
  }

  public FeatureStateDto addFeatureItemsItem(FeatureItemStateDto featureItemsItem) {
    if (this.featureItems == null) {
      this.featureItems = new ArrayList<FeatureItemStateDto>();
    }
    this.featureItems.add(featureItemsItem);
    return this;
  }

   /**
   * 设备对应特性的配置结果。
   * return featureItems
  **/
  @ApiModelProperty(value = "设备对应特性的配置结果。")
  public List<FeatureItemStateDto> getFeatureItems() {
    return featureItems;
  }

   /**
   * 设备对应特性的配置结果。
   * Param featureItems
  **/
  public void setFeatureItems(List<FeatureItemStateDto> featureItems) {
    this.featureItems = featureItems;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureStateDto featureStateDto = (FeatureStateDto) o;
    return Objects.equals(this.featureIdentify, featureStateDto.featureIdentify) &&
        Objects.equals(this.state, featureStateDto.state) &&
        Objects.equals(this.featureItems, featureStateDto.featureItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureIdentify, state, featureItems);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureStateDto {\n");
    
    sb.append("    featureIdentify: ").append(toIndentedString(featureIdentify)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    featureItems: ").append(toIndentedString(featureItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

