/*
 * 站点内AP增值服务配置
 * 站点内AP增值服务配置北向接口，主要特性： * 查询站点内AP增值服务配置。 * 修改站点内AP增值服务配置。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 站点内上传功能配置结构体
 */
@ApiModel(description = "站点内上传功能配置结构体")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:13.248+08:00")
public class DataUploadDto {
  @SerializedName("mu")
  private Boolean mu = null;

  @SerializedName("serverIp")
  private String serverIp = null;

  @SerializedName("serverPort")
  private Integer serverPort = null;

  @SerializedName("interver")
  private Integer interver = null;

  @SerializedName("rssi")
  private Integer rssi = null;

  public DataUploadDto mu(Boolean mu) {
    this.mu = mu;
    return this;
  }

   /**
   * 是否开启上传功能，将终端位置信息上报到指定服务器。
   * return mu
  **/
  @ApiModelProperty(value = "是否开启上传功能，将终端位置信息上报到指定服务器。")
  public Boolean getMu() {
    return mu;
  }

   /**
   * 是否开启上传功能，将终端位置信息上报到指定服务器。
   * Param mu
  **/
  public void setMu(Boolean mu) {
    this.mu = mu;
  }

  public DataUploadDto serverIp(String serverIp) {
    this.serverIp = serverIp;
    return this;
  }

   /**
   * 服务器IP/域名。当mu为true时，serverIp必填。
   * return serverIp
  **/
  @ApiModelProperty(value = "服务器IP/域名。当mu为true时，serverIp必填。")
  public String getServerIp() {
    return serverIp;
  }

   /**
   * 服务器IP/域名。当mu为true时，serverIp必填。
   * Param serverIp
  **/
  public void setServerIp(String serverIp) {
    this.serverIp = serverIp;
  }

  public DataUploadDto serverPort(Integer serverPort) {
    this.serverPort = serverPort;
    return this;
  }

   /**
   * 端口号，必须为1-65535范围内的整数，不填默认为10031。端口号跟服务器IP/域名要么都填，要么都不填。
   * minimum: 1
   * maximum: 65535
   * return serverPort
  **/
  @ApiModelProperty(value = "端口号，必须为1-65535范围内的整数，不填默认为10031。端口号跟服务器IP/域名要么都填，要么都不填。")
  public Integer getServerPort() {
    return serverPort;
  }

   /**
   * 端口号，必须为1-65535范围内的整数，不填默认为10031。端口号跟服务器IP/域名要么都填，要么都不填。
   * minimum: 1
   * maximum: 65535
   * Param serverPort
  **/
  public void setServerPort(Integer serverPort) {
    this.serverPort = serverPort;
  }

  public DataUploadDto interver(Integer interver) {
    this.interver = interver;
    return this;
  }

   /**
   * 上报周期，单位为ms，必须是500-60000范围内的整数，不填默认为20000。
   * minimum: 500
   * maximum: 60000
   * return interver
  **/
  @ApiModelProperty(value = "上报周期，单位为ms，必须是500-60000范围内的整数，不填默认为20000。")
  public Integer getInterver() {
    return interver;
  }

   /**
   * 上报周期，单位为ms，必须是500-60000范围内的整数，不填默认为20000。
   * minimum: 500
   * maximum: 60000
   * Param interver
  **/
  public void setInterver(Integer interver) {
    this.interver = interver;
  }

  public DataUploadDto rssi(Integer rssi) {
    this.rssi = rssi;
    return this;
  }

   /**
   * 阀值，必须为-95-0范围内的整数，不填默认为-75。
   * minimum: -95
   * maximum: 0
   * return rssi
  **/
  @ApiModelProperty(value = "阀值，必须为-95-0范围内的整数，不填默认为-75。")
  public Integer getRssi() {
    return rssi;
  }

   /**
   * 阀值，必须为-95-0范围内的整数，不填默认为-75。
   * minimum: -95
   * maximum: 0
   * Param rssi
  **/
  public void setRssi(Integer rssi) {
    this.rssi = rssi;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataUploadDto dataUploadDto = (DataUploadDto) o;
    return Objects.equals(this.mu, dataUploadDto.mu) &&
        Objects.equals(this.serverIp, dataUploadDto.serverIp) &&
        Objects.equals(this.serverPort, dataUploadDto.serverPort) &&
        Objects.equals(this.interver, dataUploadDto.interver) &&
        Objects.equals(this.rssi, dataUploadDto.rssi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mu, serverIp, serverPort, interver, rssi);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataUploadDto {\n");
    
    sb.append("    mu: ").append(toIndentedString(mu)).append("\n");
    sb.append("    serverIp: ").append(toIndentedString(serverIp)).append("\n");
    sb.append("    serverPort: ").append(toIndentedString(serverPort)).append("\n");
    sb.append("    interver: ").append(toIndentedString(interver)).append("\n");
    sb.append("    rssi: ").append(toIndentedString(rssi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

