/*
 * 配置保存
 * 配置保存接口说明。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 保存结果。
 */
@ApiModel(description = "保存结果。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:19:35.965+08:00")
public class ConfigSaveItem {
  @SerializedName("deviceId")
  private String deviceId = null;

  @SerializedName("saveTime")
  private String saveTime = null;

  @SerializedName("saveResult")
  private Integer saveResult = null;

  @SerializedName("failReason")
  private String failReason = null;

  public ConfigSaveItem deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * 设备ID。
   * return deviceId
  **/
  @ApiModelProperty(value = "设备ID。")
  public String getDeviceId() {
    return deviceId;
  }

   /**
   * 设备ID。
   * Param deviceId
  **/
  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public ConfigSaveItem saveTime(String saveTime) {
    this.saveTime = saveTime;
    return this;
  }

   /**
   * 保存时间。
   * return saveTime
  **/
  @ApiModelProperty(value = "保存时间。")
  public String getSaveTime() {
    return saveTime;
  }

   /**
   * 保存时间。
   * Param saveTime
  **/
  public void setSaveTime(String saveTime) {
    this.saveTime = saveTime;
  }

  public ConfigSaveItem saveResult(Integer saveResult) {
    this.saveResult = saveResult;
    return this;
  }

   /**
   * 保存结果：0---未保存，1---保存中，2---保存成功，3---保存失败，4---保存告警。
   * return saveResult
  **/
  @ApiModelProperty(value = "保存结果：0---未保存，1---保存中，2---保存成功，3---保存失败，4---保存告警。")
  public Integer getSaveResult() {
    return saveResult;
  }

   /**
   * 保存结果：0---未保存，1---保存中，2---保存成功，3---保存失败，4---保存告警。
   * Param saveResult
  **/
  public void setSaveResult(Integer saveResult) {
    this.saveResult = saveResult;
  }

  public ConfigSaveItem failReason(String failReason) {
    this.failReason = failReason;
    return this;
  }

   /**
   * 失败原因。
   * return failReason
  **/
  @ApiModelProperty(value = "失败原因。")
  public String getFailReason() {
    return failReason;
  }

   /**
   * 失败原因。
   * Param failReason
  **/
  public void setFailReason(String failReason) {
    this.failReason = failReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigSaveItem configSaveItem = (ConfigSaveItem) o;
    return Objects.equals(this.deviceId, configSaveItem.deviceId) &&
        Objects.equals(this.saveTime, configSaveItem.saveTime) &&
        Objects.equals(this.saveResult, configSaveItem.saveResult) &&
        Objects.equals(this.failReason, configSaveItem.failReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, saveTime, saveResult, failReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigSaveItem {\n");
    
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    saveTime: ").append(toIndentedString(saveTime)).append("\n");
    sb.append("    saveResult: ").append(toIndentedString(saveResult)).append("\n");
    sb.append("    failReason: ").append(toIndentedString(failReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

