/*
 * CIS服务接口
 * CIS操作接口说明： 1、创建CIS隔离 2、创建CIS阻断 3、撤销CIS阻断/隔离 4、阻断隔离应用状态查询 5、CIS策略命中率查询 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InterdictionDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:17:59.469+08:00")
public class InterdictionDTO {
  @SerializedName("blockId")
  private String blockId = null;

  @SerializedName("tenant")
  private String tenant = null;

  @SerializedName("producer")
  private String producer = null;

  @SerializedName("direction")
  private Integer direction = null;

  @SerializedName("srcIps")
  private List<String> srcIps = null;

  @SerializedName("dstIps")
  private List<String> dstIps = null;

  public InterdictionDTO blockId(String blockId) {
    this.blockId = blockId;
    return this;
  }

   /**
   * 事件ID，UUID格式，必填。
   * return blockId
  **/
  @ApiModelProperty(required = true, value = "事件ID，UUID格式，必填。")
  public String getBlockId() {
    return blockId;
  }

   /**
   * 事件ID，UUID格式，必填。
   * Param blockId
  **/
  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }

  public InterdictionDTO tenant(String tenant) {
    this.tenant = tenant;
    return this;
  }

   /**
   * 租户ID，UUID格式。
   * return tenant
  **/
  @ApiModelProperty(value = "租户ID，UUID格式。")
  public String getTenant() {
    return tenant;
  }

   /**
   * 租户ID，UUID格式。
   * Param tenant
  **/
  public void setTenant(String tenant) {
    this.tenant = tenant;
  }

  public InterdictionDTO producer(String producer) {
    this.producer = producer;
    return this;
  }

   /**
   * 调用者。
   * return producer
  **/
  @ApiModelProperty(value = "调用者。")
  public String getProducer() {
    return producer;
  }

   /**
   * 调用者。
   * Param producer
  **/
  public void setProducer(String producer) {
    this.producer = producer;
  }

  public InterdictionDTO direction(Integer direction) {
    this.direction = direction;
    return this;
  }

   /**
   * 流量方向，0-单向，1-双向，默认为0，必填。
   * return direction
  **/
  @ApiModelProperty(required = true, value = "流量方向，0-单向，1-双向，默认为0，必填。")
  public Integer getDirection() {
    return direction;
  }

   /**
   * 流量方向，0-单向，1-双向，默认为0，必填。
   * Param direction
  **/
  public void setDirection(Integer direction) {
    this.direction = direction;
  }

  public InterdictionDTO srcIps(List<String> srcIps) {
    this.srcIps = srcIps;
    return this;
  }

  public InterdictionDTO addSrcIpsItem(String srcIpsItem) {
    if (this.srcIps == null) {
      this.srcIps = new ArrayList<String>();
    }
    this.srcIps.add(srcIpsItem);
    return this;
  }

   /**
   * 源IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多8个IP；源IP列表和目的IP列表不可同时为空。
   * return srcIps
  **/
  @ApiModelProperty(value = "源IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多8个IP；源IP列表和目的IP列表不可同时为空。")
  public List<String> getSrcIps() {
    return srcIps;
  }

   /**
   * 源IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多8个IP；源IP列表和目的IP列表不可同时为空。
   * Param srcIps
  **/
  public void setSrcIps(List<String> srcIps) {
    this.srcIps = srcIps;
  }

  public InterdictionDTO dstIps(List<String> dstIps) {
    this.dstIps = dstIps;
    return this;
  }

  public InterdictionDTO addDstIpsItem(String dstIpsItem) {
    if (this.dstIps == null) {
      this.dstIps = new ArrayList<String>();
    }
    this.dstIps.add(dstIpsItem);
    return this;
  }

   /**
   * 目的IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多只能填1个目的IP；源IP列表和目的IP列表不可同时为空。
   * return dstIps
  **/
  @ApiModelProperty(value = "目的IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多只能填1个目的IP；源IP列表和目的IP列表不可同时为空。")
  public List<String> getDstIps() {
    return dstIps;
  }

   /**
   * 目的IP列表，非必填；非空必须满足合法的IPV4，IPV6格式，最多只能填1个目的IP；源IP列表和目的IP列表不可同时为空。
   * Param dstIps
  **/
  public void setDstIps(List<String> dstIps) {
    this.dstIps = dstIps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterdictionDTO interdictionDTO = (InterdictionDTO) o;
    return Objects.equals(this.blockId, interdictionDTO.blockId) &&
        Objects.equals(this.tenant, interdictionDTO.tenant) &&
        Objects.equals(this.producer, interdictionDTO.producer) &&
        Objects.equals(this.direction, interdictionDTO.direction) &&
        Objects.equals(this.srcIps, interdictionDTO.srcIps) &&
        Objects.equals(this.dstIps, interdictionDTO.dstIps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockId, tenant, producer, direction, srcIps, dstIps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterdictionDTO {\n");
    
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    producer: ").append(toIndentedString(producer)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    srcIps: ").append(toIndentedString(srcIps)).append("\n");
    sb.append("    dstIps: ").append(toIndentedString(dstIps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

