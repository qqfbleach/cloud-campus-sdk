/*
 * 终端客流量数据信息查询
 * 1、查询设备标签。 2、查询历史客户流量。 3、查询实时客户流量，返回最近5分钟内接入客户流量。 4、查询访客、路人、接入用户的历史趋势。 5、查询访客驻留时长的历史趋势。 6、查询回头客记录。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 时间戳与流量。
 */
@ApiModel(description = "时间戳与流量。")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaSdnClientCodegen", date = "2019-12-17T15:18:32.011+08:00")
public class Count {
  @SerializedName("count")
  private String count = null;

  @SerializedName("stamp")
  private Long stamp = null;

  public Count count(String count) {
    this.count = count;
    return this;
  }

   /**
   * 客流量。
   * return count
  **/
  @ApiModelProperty(value = "客流量。")
  public String getCount() {
    return count;
  }

   /**
   * 客流量。
   * Param count
  **/
  public void setCount(String count) {
    this.count = count;
  }

  public Count stamp(Long stamp) {
    this.stamp = stamp;
    return this;
  }

   /**
   * 时间戳（毫秒）。
   * minimum: 0
   * maximum: 9223372036854775807
   * return stamp
  **/
  @ApiModelProperty(value = "时间戳（毫秒）。")
  public Long getStamp() {
    return stamp;
  }

   /**
   * 时间戳（毫秒）。
   * minimum: 0
   * maximum: 9223372036854775807
   * Param stamp
  **/
  public void setStamp(Long stamp) {
    this.stamp = stamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Count count = (Count) o;
    return Objects.equals(this.count, count.count) &&
        Objects.equals(this.stamp, count.stamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, stamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Count {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    stamp: ").append(toIndentedString(stamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

