/*
 * 站点模板管理
 * 站点模板第三方接口说明。 
 *
 * OpenAPI spec version: 1.2.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.BindingSiteListDto;
import com.huawei.cloudcampus.api.model.CreateSiteTempDto;
import com.huawei.cloudcampus.api.model.CreateSiteTempResponseDto;
import com.huawei.cloudcampus.api.model.DeleteSiteTempDto;
import com.huawei.cloudcampus.api.model.DeleteSiteTempResponseDto;
import com.huawei.cloudcampus.api.model.GetSiteListDto;
import com.huawei.cloudcampus.api.model.GetSiteTempDto;
import com.huawei.cloudcampus.api.model.GetSiteTempResponseDto;
import com.huawei.cloudcampus.api.model.SiteTemplateAndSiteListResponseDto;
import com.huawei.cloudcampus.api.model.UpdateSiteTempDto;
import com.huawei.cloudcampus.api.model.UpdateSiteTempResponseDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SiteTemplateNorthboundApi {
    private ApiClient apiClient;

    public SiteTemplateNorthboundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SiteTemplateNorthboundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for addSiteTemplate
     * @param body 待创建的站点模板信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addSiteTemplateCall(CreateSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-templates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addSiteTemplateValidateBeforeCall(CreateSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling addSiteTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = addSiteTemplateCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 创建站点模板
     * ## 典型场景 ##  提供创建站点模板接口。 ## 接口功能 ##  创建站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待创建的站点模板信息。 (required)
     * @return CreateSiteTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreateSiteTempResponseDto addSiteTemplate(CreateSiteTempDto body) throws ApiException {
        ApiResponse<CreateSiteTempResponseDto> resp = addSiteTemplateWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 创建站点模板
     * ## 典型场景 ##  提供创建站点模板接口。 ## 接口功能 ##  创建站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待创建的站点模板信息。 (required)
     * @return ApiResponse&lt;CreateSiteTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreateSiteTempResponseDto> addSiteTemplateWithHttpInfo(CreateSiteTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = addSiteTemplateValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<CreateSiteTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 创建站点模板 (asynchronously)
     * ## 典型场景 ##  提供创建站点模板接口。 ## 接口功能 ##  创建站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待创建的站点模板信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addSiteTemplateAsync(CreateSiteTempDto body, final ApiCallback<CreateSiteTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addSiteTemplateValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreateSiteTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for bindSiteTemplate
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call bindSiteTemplateCall(String siteTemplateId, BindingSiteListDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-template-binding-relationship/{siteTemplateId}"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call bindSiteTemplateValidateBeforeCall(String siteTemplateId, BindingSiteListDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling bindSiteTemplate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling bindSiteTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = bindSiteTemplateCall(siteTemplateId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 绑定一个或多个站点到站点模板
     * ## 典型场景 ##  提供绑定一个或多个站点到站点模板接口。 ## 接口功能 ##  绑定一个或多个站点到站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @return SiteTemplateAndSiteListResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateAndSiteListResponseDto bindSiteTemplate(String siteTemplateId, BindingSiteListDto body) throws ApiException {
        ApiResponse<SiteTemplateAndSiteListResponseDto> resp = bindSiteTemplateWithHttpInfo(siteTemplateId, body);
        return resp.getData();
    }

    /**
     * 绑定一个或多个站点到站点模板
     * ## 典型场景 ##  提供绑定一个或多个站点到站点模板接口。 ## 接口功能 ##  绑定一个或多个站点到站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @return ApiResponse&lt;SiteTemplateAndSiteListResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateAndSiteListResponseDto> bindSiteTemplateWithHttpInfo(String siteTemplateId, BindingSiteListDto body) throws ApiException {
        com.squareup.okhttp.Call call = bindSiteTemplateValidateBeforeCall(siteTemplateId, body, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateAndSiteListResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 绑定一个或多个站点到站点模板 (asynchronously)
     * ## 典型场景 ##  提供绑定一个或多个站点到站点模板接口。 ## 接口功能 ##  绑定一个或多个站点到站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call bindSiteTemplateAsync(String siteTemplateId, BindingSiteListDto body, final ApiCallback<SiteTemplateAndSiteListResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = bindSiteTemplateValidateBeforeCall(siteTemplateId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateAndSiteListResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteSiteTemplates
     * @param body 待删除的站点模板ID列表。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteSiteTemplatesCall(DeleteSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-templates/batch-delete";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteSiteTemplatesValidateBeforeCall(DeleteSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteSiteTemplates(Async)");
        }
        
        
        com.squareup.okhttp.Call call = deleteSiteTemplatesCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除站点模板
     * ## 典型场景 ##  提供删除站点模板接口。 ## 接口功能 ##  删除站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待删除的站点模板ID列表。 (required)
     * @return DeleteSiteTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteSiteTempResponseDto deleteSiteTemplates(DeleteSiteTempDto body) throws ApiException {
        ApiResponse<DeleteSiteTempResponseDto> resp = deleteSiteTemplatesWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 删除站点模板
     * ## 典型场景 ##  提供删除站点模板接口。 ## 接口功能 ##  删除站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待删除的站点模板ID列表。 (required)
     * @return ApiResponse&lt;DeleteSiteTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteSiteTempResponseDto> deleteSiteTemplatesWithHttpInfo(DeleteSiteTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = deleteSiteTemplatesValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<DeleteSiteTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除站点模板 (asynchronously)
     * ## 典型场景 ##  提供删除站点模板接口。 ## 接口功能 ##  删除站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body 待删除的站点模板ID列表。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteSiteTemplatesAsync(DeleteSiteTempDto body, final ApiCallback<DeleteSiteTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteSiteTemplatesValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteSiteTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getBindingSiteList
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getBindingSiteListCall(String siteTemplateId, Integer pageSize, Integer pageIndex, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-template-binding-relationship/{siteTemplateId}/sites"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));
        if (pageIndex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageIndex", pageIndex));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getBindingSiteListValidateBeforeCall(String siteTemplateId, Integer pageSize, Integer pageIndex, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling getBindingSiteList(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getBindingSiteListCall(siteTemplateId, pageSize, pageIndex, sort, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 根据站点模板ID查询绑定的站点
     * ## 典型场景 ##  提供根据站点模板ID查询绑定的站点接口。 ## 接口功能 ##  根据站点模板ID查询绑定的站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name。 (optional)
     * @return GetSiteListDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetSiteListDto getBindingSiteList(String siteTemplateId, Integer pageSize, Integer pageIndex, String sort) throws ApiException {
        ApiResponse<GetSiteListDto> resp = getBindingSiteListWithHttpInfo(siteTemplateId, pageSize, pageIndex, sort);
        return resp.getData();
    }

    /**
     * 根据站点模板ID查询绑定的站点
     * ## 典型场景 ##  提供根据站点模板ID查询绑定的站点接口。 ## 接口功能 ##  根据站点模板ID查询绑定的站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name。 (optional)
     * @return ApiResponse&lt;GetSiteListDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetSiteListDto> getBindingSiteListWithHttpInfo(String siteTemplateId, Integer pageSize, Integer pageIndex, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getBindingSiteListValidateBeforeCall(siteTemplateId, pageSize, pageIndex, sort, null, null);
        Type localVarReturnType = new TypeToken<GetSiteListDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 根据站点模板ID查询绑定的站点 (asynchronously)
     * ## 典型场景 ##  提供根据站点模板ID查询绑定的站点接口。 ## 接口功能 ##  根据站点模板ID查询绑定的站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getBindingSiteListAsync(String siteTemplateId, Integer pageSize, Integer pageIndex, String sort, final ApiCallback<GetSiteListDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getBindingSiteListValidateBeforeCall(siteTemplateId, pageSize, pageIndex, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetSiteListDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getBindingSiteTemplate
     * @param siteId 站点ID，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getBindingSiteTemplateCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-template-binding-relationship/{siteId}/site-template"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getBindingSiteTemplateValidateBeforeCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling getBindingSiteTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getBindingSiteTemplateCall(siteId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 根据站点ID查询绑定的站点模板
     * ## 典型场景 ##  提供根据站点ID查询绑定的站点模板接口。 ## 接口功能 ##  根据站点ID查询绑定的站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @return GetSiteTempDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetSiteTempDto getBindingSiteTemplate(String siteId) throws ApiException {
        ApiResponse<GetSiteTempDto> resp = getBindingSiteTemplateWithHttpInfo(siteId);
        return resp.getData();
    }

    /**
     * 根据站点ID查询绑定的站点模板
     * ## 典型场景 ##  提供根据站点ID查询绑定的站点模板接口。 ## 接口功能 ##  根据站点ID查询绑定的站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @return ApiResponse&lt;GetSiteTempDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetSiteTempDto> getBindingSiteTemplateWithHttpInfo(String siteId) throws ApiException {
        com.squareup.okhttp.Call call = getBindingSiteTemplateValidateBeforeCall(siteId, null, null);
        Type localVarReturnType = new TypeToken<GetSiteTempDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 根据站点ID查询绑定的站点模板 (asynchronously)
     * ## 典型场景 ##  提供根据站点ID查询绑定的站点模板接口。 ## 接口功能 ##  根据站点ID查询绑定的站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getBindingSiteTemplateAsync(String siteId, final ApiCallback<GetSiteTempDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getBindingSiteTemplateValidateBeforeCall(siteId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetSiteTempDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getSiteTemplates
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name和type，开头带有+表示升序，带有-表示降序，若不设置，默认以name升序返回。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getSiteTemplatesCall(Integer pageSize, Integer pageIndex, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-templates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));
        if (pageIndex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageIndex", pageIndex));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getSiteTemplatesValidateBeforeCall(Integer pageSize, Integer pageIndex, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getSiteTemplatesCall(pageSize, pageIndex, sort, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询站点模板
     * ## 典型场景 ##  提供查询站点模板接口。 ## 接口功能 ##  查询站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name和type，开头带有+表示升序，带有-表示降序，若不设置，默认以name升序返回。 (optional)
     * @return GetSiteTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetSiteTempResponseDto getSiteTemplates(Integer pageSize, Integer pageIndex, String sort) throws ApiException {
        ApiResponse<GetSiteTempResponseDto> resp = getSiteTemplatesWithHttpInfo(pageSize, pageIndex, sort);
        return resp.getData();
    }

    /**
     * 查询站点模板
     * ## 典型场景 ##  提供查询站点模板接口。 ## 接口功能 ##  查询站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name和type，开头带有+表示升序，带有-表示降序，若不设置，默认以name升序返回。 (optional)
     * @return ApiResponse&lt;GetSiteTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetSiteTempResponseDto> getSiteTemplatesWithHttpInfo(Integer pageSize, Integer pageIndex, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getSiteTemplatesValidateBeforeCall(pageSize, pageIndex, sort, null, null);
        Type localVarReturnType = new TypeToken<GetSiteTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询站点模板 (asynchronously)
     * ## 典型场景 ##  提供查询站点模板接口。 ## 接口功能 ##  查询站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param sort 排序字段，支持name和type，开头带有+表示升序，带有-表示降序，若不设置，默认以name升序返回。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getSiteTemplatesAsync(Integer pageSize, Integer pageIndex, String sort, final ApiCallback<GetSiteTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getSiteTemplatesValidateBeforeCall(pageSize, pageIndex, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetSiteTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for unbindSiteTemplate
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call unbindSiteTemplateCall(String siteTemplateId, BindingSiteListDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-template-binding-relationship/{siteTemplateId}/batch-delete"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call unbindSiteTemplateValidateBeforeCall(String siteTemplateId, BindingSiteListDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling unbindSiteTemplate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling unbindSiteTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = unbindSiteTemplateCall(siteTemplateId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 站点模板解绑定一个或多个站点
     * ## 典型场景 ##  提供站点模板解绑定一个或多个站点接口。 ## 接口功能 ##  站点模板解绑定一个或多个站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @return SiteTemplateAndSiteListResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateAndSiteListResponseDto unbindSiteTemplate(String siteTemplateId, BindingSiteListDto body) throws ApiException {
        ApiResponse<SiteTemplateAndSiteListResponseDto> resp = unbindSiteTemplateWithHttpInfo(siteTemplateId, body);
        return resp.getData();
    }

    /**
     * 站点模板解绑定一个或多个站点
     * ## 典型场景 ##  提供站点模板解绑定一个或多个站点接口。 ## 接口功能 ##  站点模板解绑定一个或多个站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @return ApiResponse&lt;SiteTemplateAndSiteListResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateAndSiteListResponseDto> unbindSiteTemplateWithHttpInfo(String siteTemplateId, BindingSiteListDto body) throws ApiException {
        com.squareup.okhttp.Call call = unbindSiteTemplateValidateBeforeCall(siteTemplateId, body, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateAndSiteListResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 站点模板解绑定一个或多个站点 (asynchronously)
     * ## 典型场景 ##  提供站点模板解绑定一个或多个站点接口。 ## 接口功能 ##  站点模板解绑定一个或多个站点。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点ID列表。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call unbindSiteTemplateAsync(String siteTemplateId, BindingSiteListDto body, final ApiCallback<SiteTemplateAndSiteListResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = unbindSiteTemplateValidateBeforeCall(siteTemplateId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateAndSiteListResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateSiteTemplate
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点模板修改内容。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateSiteTemplateCall(String siteTemplateId, UpdateSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/site-templates/{siteTemplateId}"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateSiteTemplateValidateBeforeCall(String siteTemplateId, UpdateSiteTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling updateSiteTemplate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateSiteTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateSiteTemplateCall(siteTemplateId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改站点模板
     * ## 典型场景 ##  提供修改站点模板接口。 ## 接口功能 ##  修改站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点模板修改内容。 (required)
     * @return UpdateSiteTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UpdateSiteTempResponseDto updateSiteTemplate(String siteTemplateId, UpdateSiteTempDto body) throws ApiException {
        ApiResponse<UpdateSiteTempResponseDto> resp = updateSiteTemplateWithHttpInfo(siteTemplateId, body);
        return resp.getData();
    }

    /**
     * 修改站点模板
     * ## 典型场景 ##  提供修改站点模板接口。 ## 接口功能 ##  修改站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点模板修改内容。 (required)
     * @return ApiResponse&lt;UpdateSiteTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UpdateSiteTempResponseDto> updateSiteTemplateWithHttpInfo(String siteTemplateId, UpdateSiteTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = updateSiteTemplateValidateBeforeCall(siteTemplateId, body, null, null);
        Type localVarReturnType = new TypeToken<UpdateSiteTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改站点模板 (asynchronously)
     * ## 典型场景 ##  提供修改站点模板接口。 ## 接口功能 ##  修改站点模板。 ## 接口约束 ##  该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板ID，UUID格式。 (required)
     * @param body 站点模板修改内容。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateSiteTemplateAsync(String siteTemplateId, UpdateSiteTempDto body, final ApiCallback<UpdateSiteTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateSiteTemplateValidateBeforeCall(siteTemplateId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UpdateSiteTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
