/*
 * PoE电源状态查询
 * 查询设备PoE电源状态。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.GetPoePowerStateResp;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GetPoePowerStateApi {
    private ApiClient apiClient;

    public GetPoePowerStateApi() {
        this(Configuration.getDefaultApiClient());
    }

    public GetPoePowerStateApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getPoePowerState
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getPoePowerStateCall(String deviceId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/oamservice/poe/{deviceId}"
            .replaceAll("\\{" + "deviceId" + "\\}", apiClient.escapeString(deviceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getPoePowerStateValidateBeforeCall(String deviceId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'deviceId' is set
        if (deviceId == null) {
            throw new ApiException("Missing the required parameter 'deviceId' when calling getPoePowerState(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getPoePowerStateCall(deviceId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询PoE电源状态
     * ## 典型场景 ##    查询PoE电源状态。 ## 接口功能 ##    查询PoE电源状态。 ## 接口约束 ##    北向接口管理员可以访问。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @return GetPoePowerStateResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetPoePowerStateResp getPoePowerState(String deviceId) throws ApiException {
        ApiResponse<GetPoePowerStateResp> resp = getPoePowerStateWithHttpInfo(deviceId);
        return resp.getData();
    }

    /**
     * 查询PoE电源状态
     * ## 典型场景 ##    查询PoE电源状态。 ## 接口功能 ##    查询PoE电源状态。 ## 接口约束 ##    北向接口管理员可以访问。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @return ApiResponse&lt;GetPoePowerStateResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetPoePowerStateResp> getPoePowerStateWithHttpInfo(String deviceId) throws ApiException {
        com.squareup.okhttp.Call call = getPoePowerStateValidateBeforeCall(deviceId, null, null);
        Type localVarReturnType = new TypeToken<GetPoePowerStateResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询PoE电源状态 (asynchronously)
     * ## 典型场景 ##    查询PoE电源状态。 ## 接口功能 ##    查询PoE电源状态。 ## 接口约束 ##    北向接口管理员可以访问。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getPoePowerStateAsync(String deviceId, final ApiCallback<GetPoePowerStateResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getPoePowerStateValidateBeforeCall(deviceId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetPoePowerStateResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
