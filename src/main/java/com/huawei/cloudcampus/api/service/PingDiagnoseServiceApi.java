/*
 * 运维ping/trace探测
 * ping/trace探测第三方接口。 · 创建ping探测任务 · 查询ping探测结果 · 创建trace探测任务 · 查询trace探测结果 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.PingDiagnoseDto;
import com.huawei.cloudcampus.api.model.PingReplyResponse;
import com.huawei.cloudcampus.api.model.PingTaskResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PingDiagnoseServiceApi {
    private ApiClient apiClient;

    public PingDiagnoseServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PingDiagnoseServiceApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for createPingTask
     * @param request 请求参数。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createPingTaskCall(PingDiagnoseDto request, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = request;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/oamservice/ping";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createPingTaskValidateBeforeCall(PingDiagnoseDto request, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'request' is set
        if (request == null) {
            throw new ApiException("Missing the required parameter 'request' when calling createPingTask(Async)");
        }
        
        
        com.squareup.okhttp.Call call = createPingTaskCall(request, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 创建ping探测任务
     * ## 典型场景 ##  创建ping探测任务。 ## 接口功能 ##  1、创建一个ping任务，并返回任务ID。通过任务ID，可得知本次任务的执行结果。  2、ping间隔500ms，超时时间2000ms，默认ping 5次。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param request 请求参数。 (required)
     * @return PingTaskResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PingTaskResponse createPingTask(PingDiagnoseDto request) throws ApiException {
        ApiResponse<PingTaskResponse> resp = createPingTaskWithHttpInfo(request);
        return resp.getData();
    }

    /**
     * 创建ping探测任务
     * ## 典型场景 ##  创建ping探测任务。 ## 接口功能 ##  1、创建一个ping任务，并返回任务ID。通过任务ID，可得知本次任务的执行结果。  2、ping间隔500ms，超时时间2000ms，默认ping 5次。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param request 请求参数。 (required)
     * @return ApiResponse&lt;PingTaskResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PingTaskResponse> createPingTaskWithHttpInfo(PingDiagnoseDto request) throws ApiException {
        com.squareup.okhttp.Call call = createPingTaskValidateBeforeCall(request, null, null);
        Type localVarReturnType = new TypeToken<PingTaskResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 创建ping探测任务 (asynchronously)
     * ## 典型场景 ##  创建ping探测任务。 ## 接口功能 ##  1、创建一个ping任务，并返回任务ID。通过任务ID，可得知本次任务的执行结果。  2、ping间隔500ms，超时时间2000ms，默认ping 5次。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param request 请求参数。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createPingTaskAsync(PingDiagnoseDto request, final ApiCallback<PingTaskResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createPingTaskValidateBeforeCall(request, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PingTaskResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for queryPingTaskByTaskId
     * @param taskId ping探测任务ID，格式UUID。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call queryPingTaskByTaskIdCall(String taskId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/oamservice/ping/{taskId}"
            .replaceAll("\\{" + "taskId" + "\\}", apiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call queryPingTaskByTaskIdValidateBeforeCall(String taskId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling queryPingTaskByTaskId(Async)");
        }
        
        
        com.squareup.okhttp.Call call = queryPingTaskByTaskIdCall(taskId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询ping探测结果
     * ## 典型场景 ##  根据任务ID查询ping探测结果。 ## 接口功能 ##  查询ping探测结果。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param taskId ping探测任务ID，格式UUID。 (required)
     * @return PingReplyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PingReplyResponse queryPingTaskByTaskId(String taskId) throws ApiException {
        ApiResponse<PingReplyResponse> resp = queryPingTaskByTaskIdWithHttpInfo(taskId);
        return resp.getData();
    }

    /**
     * 查询ping探测结果
     * ## 典型场景 ##  根据任务ID查询ping探测结果。 ## 接口功能 ##  查询ping探测结果。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param taskId ping探测任务ID，格式UUID。 (required)
     * @return ApiResponse&lt;PingReplyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PingReplyResponse> queryPingTaskByTaskIdWithHttpInfo(String taskId) throws ApiException {
        com.squareup.okhttp.Call call = queryPingTaskByTaskIdValidateBeforeCall(taskId, null, null);
        Type localVarReturnType = new TypeToken<PingReplyResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询ping探测结果 (asynchronously)
     * ## 典型场景 ##  根据任务ID查询ping探测结果。 ## 接口功能 ##  查询ping探测结果。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param taskId ping探测任务ID，格式UUID。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call queryPingTaskByTaskIdAsync(String taskId, final ApiCallback<PingReplyResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = queryPingTaskByTaskIdValidateBeforeCall(taskId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PingReplyResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
