/*
 * RADIUS模板管理
 * RADIUS模板配置第三方北向接口说明。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.CreateRadiusTempDto;
import com.huawei.cloudcampus.api.model.CreateRadiusTempResponseDto;
import com.huawei.cloudcampus.api.model.DeleteRadiusTempDto;
import com.huawei.cloudcampus.api.model.DeleteRadiusTempResponseDto;
import com.huawei.cloudcampus.api.model.GetRadiusTempResponseDto;
import com.huawei.cloudcampus.api.model.UpdateRadiusTempDto;
import com.huawei.cloudcampus.api.model.UpdateRadiusTempResponseDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RadiusTemplateNorthboundApi {
    private ApiClient apiClient;

    public RadiusTemplateNorthboundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public RadiusTemplateNorthboundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for createRadiusTemplate
     * @param body RADIUS服务器模板信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createRadiusTemplateCall(CreateRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/profile/radius";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createRadiusTemplateValidateBeforeCall(CreateRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createRadiusTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = createRadiusTemplateCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 创建RADIUS模板
     * ## 典型场景 ##    创建RADIUS模板。 ## 接口功能 ##    RADIUS模板创建接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板信息。 (required)
     * @return CreateRadiusTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreateRadiusTempResponseDto createRadiusTemplate(CreateRadiusTempDto body) throws ApiException {
        ApiResponse<CreateRadiusTempResponseDto> resp = createRadiusTemplateWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 创建RADIUS模板
     * ## 典型场景 ##    创建RADIUS模板。 ## 接口功能 ##    RADIUS模板创建接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板信息。 (required)
     * @return ApiResponse&lt;CreateRadiusTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreateRadiusTempResponseDto> createRadiusTemplateWithHttpInfo(CreateRadiusTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = createRadiusTemplateValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<CreateRadiusTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 创建RADIUS模板 (asynchronously)
     * ## 典型场景 ##    创建RADIUS模板。 ## 接口功能 ##    RADIUS模板创建接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createRadiusTemplateAsync(CreateRadiusTempDto body, final ApiCallback<CreateRadiusTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createRadiusTemplateValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreateRadiusTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteRadiusTemplate
     * @param body RADIUS服务器模板ID列表。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteRadiusTemplateCall(DeleteRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/profile/radius/batch-delete";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteRadiusTemplateValidateBeforeCall(DeleteRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteRadiusTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = deleteRadiusTemplateCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除RADIUS模板
     * ## 典型场景 ##    删除RADIUS模板信息。 ## 接口功能 ##    RADIUS模板删除接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板ID列表。 (required)
     * @return DeleteRadiusTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteRadiusTempResponseDto deleteRadiusTemplate(DeleteRadiusTempDto body) throws ApiException {
        ApiResponse<DeleteRadiusTempResponseDto> resp = deleteRadiusTemplateWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 删除RADIUS模板
     * ## 典型场景 ##    删除RADIUS模板信息。 ## 接口功能 ##    RADIUS模板删除接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板ID列表。 (required)
     * @return ApiResponse&lt;DeleteRadiusTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteRadiusTempResponseDto> deleteRadiusTemplateWithHttpInfo(DeleteRadiusTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = deleteRadiusTemplateValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<DeleteRadiusTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除RADIUS模板 (asynchronously)
     * ## 典型场景 ##    删除RADIUS模板信息。 ## 接口功能 ##    RADIUS模板删除接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param body RADIUS服务器模板ID列表。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteRadiusTemplateAsync(DeleteRadiusTempDto body, final ApiCallback<DeleteRadiusTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteRadiusTemplateValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteRadiusTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getRadiusTemplate
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getRadiusTemplateCall(Integer pageSize, Integer pageIndex, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/profile/radius";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));
        if (pageIndex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageIndex", pageIndex));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getRadiusTemplateValidateBeforeCall(Integer pageSize, Integer pageIndex, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getRadiusTemplateCall(pageSize, pageIndex, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询RADIUS模板
     * ## 典型场景 ##    查询RADIUS模板列表信息。 ## 接口功能 ##    RADIUS模板查询接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @return GetRadiusTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetRadiusTempResponseDto getRadiusTemplate(Integer pageSize, Integer pageIndex) throws ApiException {
        ApiResponse<GetRadiusTempResponseDto> resp = getRadiusTemplateWithHttpInfo(pageSize, pageIndex);
        return resp.getData();
    }

    /**
     * 查询RADIUS模板
     * ## 典型场景 ##    查询RADIUS模板列表信息。 ## 接口功能 ##    RADIUS模板查询接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @return ApiResponse&lt;GetRadiusTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetRadiusTempResponseDto> getRadiusTemplateWithHttpInfo(Integer pageSize, Integer pageIndex) throws ApiException {
        com.squareup.okhttp.Call call = getRadiusTemplateValidateBeforeCall(pageSize, pageIndex, null, null);
        Type localVarReturnType = new TypeToken<GetRadiusTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询RADIUS模板 (asynchronously)
     * ## 典型场景 ##    查询RADIUS模板列表信息。 ## 接口功能 ##    RADIUS模板查询接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param pageSize 每页大小。 (optional)
     * @param pageIndex 页码。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getRadiusTemplateAsync(Integer pageSize, Integer pageIndex, final ApiCallback<GetRadiusTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getRadiusTemplateValidateBeforeCall(pageSize, pageIndex, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetRadiusTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateRadiusTemplate
     * @param id RADIUS服务器模板ID，UUID格式。 (required)
     * @param body RADIUS服务器模板信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateRadiusTemplateCall(String id, UpdateRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/profile/radius/{id}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateRadiusTemplateValidateBeforeCall(String id, UpdateRadiusTempDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateRadiusTemplate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateRadiusTemplate(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateRadiusTemplateCall(id, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改RADIUS模板
     * ## 典型场景 ##    修改RADIUS模板。 ## 接口功能 ##    RADIUS模板修改接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param id RADIUS服务器模板ID，UUID格式。 (required)
     * @param body RADIUS服务器模板信息。 (required)
     * @return UpdateRadiusTempResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UpdateRadiusTempResponseDto updateRadiusTemplate(String id, UpdateRadiusTempDto body) throws ApiException {
        ApiResponse<UpdateRadiusTempResponseDto> resp = updateRadiusTemplateWithHttpInfo(id, body);
        return resp.getData();
    }

    /**
     * 修改RADIUS模板
     * ## 典型场景 ##    修改RADIUS模板。 ## 接口功能 ##    RADIUS模板修改接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param id RADIUS服务器模板ID，UUID格式。 (required)
     * @param body RADIUS服务器模板信息。 (required)
     * @return ApiResponse&lt;UpdateRadiusTempResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UpdateRadiusTempResponseDto> updateRadiusTemplateWithHttpInfo(String id, UpdateRadiusTempDto body) throws ApiException {
        com.squareup.okhttp.Call call = updateRadiusTemplateValidateBeforeCall(id, body, null, null);
        Type localVarReturnType = new TypeToken<UpdateRadiusTempResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改RADIUS模板 (asynchronously)
     * ## 典型场景 ##    修改RADIUS模板。 ## 接口功能 ##    RADIUS模板修改接口。 ## 接口约束 ##    该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param id RADIUS服务器模板ID，UUID格式。 (required)
     * @param body RADIUS服务器模板信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateRadiusTemplateAsync(String id, UpdateRadiusTempDto body, final ApiCallback<UpdateRadiusTempResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateRadiusTemplateValidateBeforeCall(id, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UpdateRadiusTempResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
