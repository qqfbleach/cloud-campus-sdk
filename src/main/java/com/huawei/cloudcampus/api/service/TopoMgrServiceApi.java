/*
 * 拓扑管理
 * 拓扑管理第三方北向接口。 1、查询LACP LAG信息 2、查询LLDP信息 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.LacpLagInfoResultDto;
import com.huawei.cloudcampus.api.model.NeighborsInfoResultDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TopoMgrServiceApi {
    private ApiClient apiClient;

    public TopoMgrServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TopoMgrServiceApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getLacpLagInfo
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getLacpLagInfoCall(String deviceId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkresource/topomanager/device/{deviceId}/ethtrunk"
            .replaceAll("\\{" + "deviceId" + "\\}", apiClient.escapeString(deviceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getLacpLagInfoValidateBeforeCall(String deviceId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'deviceId' is set
        if (deviceId == null) {
            throw new ApiException("Missing the required parameter 'deviceId' when calling getLacpLagInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getLacpLagInfoCall(deviceId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询LACP LAG信息
     * ## 典型场景 ##  根据设备ID查询LACP LAG信息。 ## 接口功能 ##  查询LACP LAG信息。 ## 接口约束 ##  1、当前仅LSW支持该接口。  2、该接口必须在用户会话建立后使用。  3、该接口需从设备查询信息，数据量大时会导致查询响应慢。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @return LacpLagInfoResultDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public LacpLagInfoResultDto getLacpLagInfo(String deviceId) throws ApiException {
        ApiResponse<LacpLagInfoResultDto> resp = getLacpLagInfoWithHttpInfo(deviceId);
        return resp.getData();
    }

    /**
     * 查询LACP LAG信息
     * ## 典型场景 ##  根据设备ID查询LACP LAG信息。 ## 接口功能 ##  查询LACP LAG信息。 ## 接口约束 ##  1、当前仅LSW支持该接口。  2、该接口必须在用户会话建立后使用。  3、该接口需从设备查询信息，数据量大时会导致查询响应慢。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @return ApiResponse&lt;LacpLagInfoResultDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<LacpLagInfoResultDto> getLacpLagInfoWithHttpInfo(String deviceId) throws ApiException {
        com.squareup.okhttp.Call call = getLacpLagInfoValidateBeforeCall(deviceId, null, null);
        Type localVarReturnType = new TypeToken<LacpLagInfoResultDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询LACP LAG信息 (asynchronously)
     * ## 典型场景 ##  根据设备ID查询LACP LAG信息。 ## 接口功能 ##  查询LACP LAG信息。 ## 接口约束 ##  1、当前仅LSW支持该接口。  2、该接口必须在用户会话建立后使用。  3、该接口需从设备查询信息，数据量大时会导致查询响应慢。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getLacpLagInfoAsync(String deviceId, final ApiCallback<LacpLagInfoResultDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getLacpLagInfoValidateBeforeCall(deviceId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<LacpLagInfoResultDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getNeighborsInfo
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param localIfName 本端接口名称，值为空时表示查询该设备所有接口的LLDP连接。 (optional)
     * @param pageIndex 分页时，当前页面索引，值&lt;&#x3D;0时表示获取所有数据。 (optional, default to 0)
     * @param pageSize 分页时，当前页面设备数据长度；pageIndex为空或&lt;&#x3D;0时，此参数无意义。 (optional, default to 20)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getNeighborsInfoCall(String deviceId, String localIfName, Integer pageIndex, Integer pageSize, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkresource/topomanager/device/{deviceId}/neighbors"
            .replaceAll("\\{" + "deviceId" + "\\}", apiClient.escapeString(deviceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (localIfName != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "localIfName", localIfName));
        if (pageIndex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageIndex", pageIndex));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getNeighborsInfoValidateBeforeCall(String deviceId, String localIfName, Integer pageIndex, Integer pageSize, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'deviceId' is set
        if (deviceId == null) {
            throw new ApiException("Missing the required parameter 'deviceId' when calling getNeighborsInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getNeighborsInfoCall(deviceId, localIfName, pageIndex, pageSize, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询LLDP信息
     * ## 典型场景 ##  根据设备ID查询LLDP信息。 ## 接口功能 ##  查询LLDP信息。 ## 接口约束 ##  1、当前仅LSW和云AP支持该接口。  2、该接口必须在用户会话建立后使用。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param localIfName 本端接口名称，值为空时表示查询该设备所有接口的LLDP连接。 (optional)
     * @param pageIndex 分页时，当前页面索引，值&lt;&#x3D;0时表示获取所有数据。 (optional, default to 0)
     * @param pageSize 分页时，当前页面设备数据长度；pageIndex为空或&lt;&#x3D;0时，此参数无意义。 (optional, default to 20)
     * @return NeighborsInfoResultDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public NeighborsInfoResultDto getNeighborsInfo(String deviceId, String localIfName, Integer pageIndex, Integer pageSize) throws ApiException {
        ApiResponse<NeighborsInfoResultDto> resp = getNeighborsInfoWithHttpInfo(deviceId, localIfName, pageIndex, pageSize);
        return resp.getData();
    }

    /**
     * 查询LLDP信息
     * ## 典型场景 ##  根据设备ID查询LLDP信息。 ## 接口功能 ##  查询LLDP信息。 ## 接口约束 ##  1、当前仅LSW和云AP支持该接口。  2、该接口必须在用户会话建立后使用。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param localIfName 本端接口名称，值为空时表示查询该设备所有接口的LLDP连接。 (optional)
     * @param pageIndex 分页时，当前页面索引，值&lt;&#x3D;0时表示获取所有数据。 (optional, default to 0)
     * @param pageSize 分页时，当前页面设备数据长度；pageIndex为空或&lt;&#x3D;0时，此参数无意义。 (optional, default to 20)
     * @return ApiResponse&lt;NeighborsInfoResultDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<NeighborsInfoResultDto> getNeighborsInfoWithHttpInfo(String deviceId, String localIfName, Integer pageIndex, Integer pageSize) throws ApiException {
        com.squareup.okhttp.Call call = getNeighborsInfoValidateBeforeCall(deviceId, localIfName, pageIndex, pageSize, null, null);
        Type localVarReturnType = new TypeToken<NeighborsInfoResultDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询LLDP信息 (asynchronously)
     * ## 典型场景 ##  根据设备ID查询LLDP信息。 ## 接口功能 ##  查询LLDP信息。 ## 接口约束 ##  1、当前仅LSW和云AP支持该接口。  2、该接口必须在用户会话建立后使用。 
     * @param deviceId 设备ID，UUID格式。 (required)
     * @param localIfName 本端接口名称，值为空时表示查询该设备所有接口的LLDP连接。 (optional)
     * @param pageIndex 分页时，当前页面索引，值&lt;&#x3D;0时表示获取所有数据。 (optional, default to 0)
     * @param pageSize 分页时，当前页面设备数据长度；pageIndex为空或&lt;&#x3D;0时，此参数无意义。 (optional, default to 20)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getNeighborsInfoAsync(String deviceId, String localIfName, Integer pageIndex, Integer pageSize, final ApiCallback<NeighborsInfoResultDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getNeighborsInfoValidateBeforeCall(deviceId, localIfName, pageIndex, pageSize, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<NeighborsInfoResultDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
