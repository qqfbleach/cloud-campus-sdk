/*
 * 站点内设备域名配置
 * 站点内设备域名配置北向接口，主要特性： · 查询站点内设备域名配置 · 修改站点内设备域名配置 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.DomainNameDto;
import com.huawei.cloudcampus.api.model.DomainNameResponseDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DomainNameNorthboundApi {
    private ApiClient apiClient;

    public DomainNameNorthboundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DomainNameNorthboundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for config
     * @param siteId 站点ID，UUID格式 (required)
     * @param body 站点内设备域名配置参数体。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call configCall(String siteId, DomainNameDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/domainname/sites/{siteId}/domainnames"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call configValidateBeforeCall(String siteId, DomainNameDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling config(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling config(Async)");
        }
        
        
        com.squareup.okhttp.Call call = configCall(siteId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改站点内设备域名配置
     * ## 典型场景 ##    提供配置参数的接口，修改站点内设备域名配置。 ## 接口功能 ##    修改站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式 (required)
     * @param body 站点内设备域名配置参数体。 (required)
     * @return DomainNameResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DomainNameResponseDto config(String siteId, DomainNameDto body) throws ApiException {
        ApiResponse<DomainNameResponseDto> resp = configWithHttpInfo(siteId, body);
        return resp.getData();
    }

    /**
     * 修改站点内设备域名配置
     * ## 典型场景 ##    提供配置参数的接口，修改站点内设备域名配置。 ## 接口功能 ##    修改站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式 (required)
     * @param body 站点内设备域名配置参数体。 (required)
     * @return ApiResponse&lt;DomainNameResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DomainNameResponseDto> configWithHttpInfo(String siteId, DomainNameDto body) throws ApiException {
        com.squareup.okhttp.Call call = configValidateBeforeCall(siteId, body, null, null);
        Type localVarReturnType = new TypeToken<DomainNameResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改站点内设备域名配置 (asynchronously)
     * ## 典型场景 ##    提供配置参数的接口，修改站点内设备域名配置。 ## 接口功能 ##    修改站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式 (required)
     * @param body 站点内设备域名配置参数体。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call configAsync(String siteId, DomainNameDto body, final ApiCallback<DomainNameResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = configValidateBeforeCall(siteId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DomainNameResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getConfig
     * @param siteId 站点ID，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getConfigCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/domainname/sites/{siteId}/domainnames"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getConfigValidateBeforeCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling getConfig(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getConfigCall(siteId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 获取站点内设备域名配置
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点内设备域名配置。 ## 接口功能 ##    获取站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @return DomainNameResponseDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DomainNameResponseDto getConfig(String siteId) throws ApiException {
        ApiResponse<DomainNameResponseDto> resp = getConfigWithHttpInfo(siteId);
        return resp.getData();
    }

    /**
     * 获取站点内设备域名配置
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点内设备域名配置。 ## 接口功能 ##    获取站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @return ApiResponse&lt;DomainNameResponseDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DomainNameResponseDto> getConfigWithHttpInfo(String siteId) throws ApiException {
        com.squareup.okhttp.Call call = getConfigValidateBeforeCall(siteId, null, null);
        Type localVarReturnType = new TypeToken<DomainNameResponseDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 获取站点内设备域名配置 (asynchronously)
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点内设备域名配置。 ## 接口功能 ##    获取站点内设备域名配置。 ## 接口约束 ##    该接口必须在站点内使用。 
     * @param siteId 站点ID，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getConfigAsync(String siteId, final ApiCallback<DomainNameResponseDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getConfigValidateBeforeCall(siteId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DomainNameResponseDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
