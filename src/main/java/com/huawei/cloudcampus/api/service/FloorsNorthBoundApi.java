/*
 * 室内地图信息查询
 * 室内地图第三方北向接口。 · 查询站点中所有楼栋基本信息 · 查询楼栋中所有楼层基本信息 · 查询楼栋中所有楼层详细信息 · 查询楼栋中楼层和设备布放信息 · 查询楼栋中楼层已布放设备详细信息 · 查询楼层已布放设备位置信息 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.QueryFloorDetailsResponse;
import com.huawei.cloudcampus.api.model.QueryFloorLocationDetailsResponse;
import com.huawei.cloudcampus.api.model.QueryLocatedDeviceDetailsResponse;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FloorsNorthBoundApi {
    private ApiClient apiClient;

    public FloorsNorthBoundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public FloorsNorthBoundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getDeviceDetailsByFloorId
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param deviceType 设备类型，类型取值范围：\&quot;AP\&quot;，\&quot;LSW\&quot;，\&quot;ALL\&quot;。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getDeviceDetailsByFloorIdCall(UUID floorId, String deviceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/indoormapservice/floors/{floorId}/devices-details"
            .replaceAll("\\{" + "floorId" + "\\}", apiClient.escapeString(floorId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (deviceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "deviceType", deviceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getDeviceDetailsByFloorIdValidateBeforeCall(UUID floorId, String deviceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'floorId' is set
        if (floorId == null) {
            throw new ApiException("Missing the required parameter 'floorId' when calling getDeviceDetailsByFloorId(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getDeviceDetailsByFloorIdCall(floorId, deviceType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询楼栋中楼层已布放设备详细信息
     * ## 典型场景 ##  查询楼层已布放设备详细信息。 ## 接口功能 ##  查询楼层已布放设备详细信息，支持基于设备类型查询。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param deviceType 设备类型，类型取值范围：\&quot;AP\&quot;，\&quot;LSW\&quot;，\&quot;ALL\&quot;。 (optional)
     * @return QueryLocatedDeviceDetailsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public QueryLocatedDeviceDetailsResponse getDeviceDetailsByFloorId(UUID floorId, String deviceType) throws ApiException {
        ApiResponse<QueryLocatedDeviceDetailsResponse> resp = getDeviceDetailsByFloorIdWithHttpInfo(floorId, deviceType);
        return resp.getData();
    }

    /**
     * 查询楼栋中楼层已布放设备详细信息
     * ## 典型场景 ##  查询楼层已布放设备详细信息。 ## 接口功能 ##  查询楼层已布放设备详细信息，支持基于设备类型查询。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param deviceType 设备类型，类型取值范围：\&quot;AP\&quot;，\&quot;LSW\&quot;，\&quot;ALL\&quot;。 (optional)
     * @return ApiResponse&lt;QueryLocatedDeviceDetailsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<QueryLocatedDeviceDetailsResponse> getDeviceDetailsByFloorIdWithHttpInfo(UUID floorId, String deviceType) throws ApiException {
        com.squareup.okhttp.Call call = getDeviceDetailsByFloorIdValidateBeforeCall(floorId, deviceType, null, null);
        Type localVarReturnType = new TypeToken<QueryLocatedDeviceDetailsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询楼栋中楼层已布放设备详细信息 (asynchronously)
     * ## 典型场景 ##  查询楼层已布放设备详细信息。 ## 接口功能 ##  查询楼层已布放设备详细信息，支持基于设备类型查询。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param deviceType 设备类型，类型取值范围：\&quot;AP\&quot;，\&quot;LSW\&quot;，\&quot;ALL\&quot;。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getDeviceDetailsByFloorIdAsync(UUID floorId, String deviceType, final ApiCallback<QueryLocatedDeviceDetailsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getDeviceDetailsByFloorIdValidateBeforeCall(floorId, deviceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<QueryLocatedDeviceDetailsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getFloorDetails
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getFloorDetailsCall(UUID floorId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/indoormapservice/floors/{floorId}"
            .replaceAll("\\{" + "floorId" + "\\}", apiClient.escapeString(floorId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getFloorDetailsValidateBeforeCall(UUID floorId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'floorId' is set
        if (floorId == null) {
            throw new ApiException("Missing the required parameter 'floorId' when calling getFloorDetails(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getFloorDetailsCall(floorId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询楼栋中所有楼层详细信息
     * ## 典型场景 ##  查询楼层详细信息。 ## 接口功能 ##  查询楼层详细信息，包含楼层名称，楼层号，楼层图纸和比例尺。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @return QueryFloorDetailsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public QueryFloorDetailsResponse getFloorDetails(UUID floorId) throws ApiException {
        ApiResponse<QueryFloorDetailsResponse> resp = getFloorDetailsWithHttpInfo(floorId);
        return resp.getData();
    }

    /**
     * 查询楼栋中所有楼层详细信息
     * ## 典型场景 ##  查询楼层详细信息。 ## 接口功能 ##  查询楼层详细信息，包含楼层名称，楼层号，楼层图纸和比例尺。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @return ApiResponse&lt;QueryFloorDetailsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<QueryFloorDetailsResponse> getFloorDetailsWithHttpInfo(UUID floorId) throws ApiException {
        com.squareup.okhttp.Call call = getFloorDetailsValidateBeforeCall(floorId, null, null);
        Type localVarReturnType = new TypeToken<QueryFloorDetailsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询楼栋中所有楼层详细信息 (asynchronously)
     * ## 典型场景 ##  查询楼层详细信息。 ## 接口功能 ##  查询楼层详细信息，包含楼层名称，楼层号，楼层图纸和比例尺。 ## 接口约束 ##  只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getFloorDetailsAsync(UUID floorId, final ApiCallback<QueryFloorDetailsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getFloorDetailsValidateBeforeCall(floorId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<QueryFloorDetailsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getFloorLocationDetails
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getFloorLocationDetailsCall(UUID floorId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/indoormapservice/floors/{floorId}/locaion-details"
            .replaceAll("\\{" + "floorId" + "\\}", apiClient.escapeString(floorId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getFloorLocationDetailsValidateBeforeCall(UUID floorId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'floorId' is set
        if (floorId == null) {
            throw new ApiException("Missing the required parameter 'floorId' when calling getFloorLocationDetails(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getFloorLocationDetailsCall(floorId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询楼栋中楼层和设备布放信息
     * ## 典型场景 ##  查询楼层和设备布放信息。 ## 接口功能 ##  查询楼层和设备布放信息，包含楼层名称，楼层所属楼栋名称，楼层图纸，比例尺，已布放设备列表和未布放设备列表。 ## 接口约束 ##  1、只有租户管理员获取token并建立会话后才能调用该接口。  2、楼层未添加图纸时，该接口不能使用。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @return QueryFloorLocationDetailsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public QueryFloorLocationDetailsResponse getFloorLocationDetails(UUID floorId) throws ApiException {
        ApiResponse<QueryFloorLocationDetailsResponse> resp = getFloorLocationDetailsWithHttpInfo(floorId);
        return resp.getData();
    }

    /**
     * 查询楼栋中楼层和设备布放信息
     * ## 典型场景 ##  查询楼层和设备布放信息。 ## 接口功能 ##  查询楼层和设备布放信息，包含楼层名称，楼层所属楼栋名称，楼层图纸，比例尺，已布放设备列表和未布放设备列表。 ## 接口约束 ##  1、只有租户管理员获取token并建立会话后才能调用该接口。  2、楼层未添加图纸时，该接口不能使用。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @return ApiResponse&lt;QueryFloorLocationDetailsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<QueryFloorLocationDetailsResponse> getFloorLocationDetailsWithHttpInfo(UUID floorId) throws ApiException {
        com.squareup.okhttp.Call call = getFloorLocationDetailsValidateBeforeCall(floorId, null, null);
        Type localVarReturnType = new TypeToken<QueryFloorLocationDetailsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询楼栋中楼层和设备布放信息 (asynchronously)
     * ## 典型场景 ##  查询楼层和设备布放信息。 ## 接口功能 ##  查询楼层和设备布放信息，包含楼层名称，楼层所属楼栋名称，楼层图纸，比例尺，已布放设备列表和未布放设备列表。 ## 接口约束 ##  1、只有租户管理员获取token并建立会话后才能调用该接口。  2、楼层未添加图纸时，该接口不能使用。 
     * @param floorId 楼层ID，格式UUID。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getFloorLocationDetailsAsync(UUID floorId, final ApiCallback<QueryFloorLocationDetailsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getFloorLocationDetailsValidateBeforeCall(floorId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<QueryFloorLocationDetailsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
