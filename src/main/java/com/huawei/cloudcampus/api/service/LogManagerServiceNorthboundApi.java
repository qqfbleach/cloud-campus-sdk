/*
 * 设备上报日志记录查询
 * 查询设备上报日志。
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.QueryResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LogManagerServiceNorthboundApi {
    private ApiClient apiClient;

    public LogManagerServiceNorthboundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LogManagerServiceNorthboundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for queryLogData
     * @param pageSize 当页大小。 (required)
     * @param siteId 站点ID，UUID格式。 (required)
     * @param beginTime 起始格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param endTime 结束时间格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param startQueryRowKey 起始rowkey，首次查询可输入空值来查询当页数据，翻页查询时输入的值根据前一次返回值中的nextRowkey填入。 (optional)
     * @param sceneName 场景名称。取值范围：不填表示全部场景。 1、Station login and logout：终端上下线。 2、Login and logout of cloud managed device：云盒上下线。 3、Device operation：设备操作。 4、Wireless radio：无线射频。 5、Hardware fault：硬件故障。  (optional)
     * @param deviceMac 设备MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 (optional)
     * @param stationMac 终端MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 入参stationMac有值时，仅查询终端上下线场景范围内的日志。  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call queryLogDataCall(Integer pageSize, String siteId, Long beginTime, Long endTime, String startQueryRowKey, String sceneName, String deviceMac, String stationMac, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/oamservice/devicelog";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));
        if (siteId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "siteId", siteId));
        if (startQueryRowKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "startQueryRowKey", startQueryRowKey));
        if (beginTime != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "beginTime", beginTime));
        if (endTime != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "endTime", endTime));
        if (sceneName != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sceneName", sceneName));
        if (deviceMac != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "deviceMac", deviceMac));
        if (stationMac != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "stationMac", stationMac));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call queryLogDataValidateBeforeCall(Integer pageSize, String siteId, Long beginTime, Long endTime, String startQueryRowKey, String sceneName, String deviceMac, String stationMac, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'pageSize' is set
        if (pageSize == null) {
            throw new ApiException("Missing the required parameter 'pageSize' when calling queryLogData(Async)");
        }
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling queryLogData(Async)");
        }
        
        // verify the required parameter 'beginTime' is set
        if (beginTime == null) {
            throw new ApiException("Missing the required parameter 'beginTime' when calling queryLogData(Async)");
        }
        
        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException("Missing the required parameter 'endTime' when calling queryLogData(Async)");
        }
        
        
        com.squareup.okhttp.Call call = queryLogDataCall(pageSize, siteId, beginTime, endTime, startQueryRowKey, sceneName, deviceMac, stationMac, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询设备上报日志记录
     * ## 典型场景 ##   查询设备上报日志记录。 ## 接口功能 ##   查询设备上报日志记录。 ## 接口约束 ##   只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param pageSize 当页大小。 (required)
     * @param siteId 站点ID，UUID格式。 (required)
     * @param beginTime 起始格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param endTime 结束时间格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param startQueryRowKey 起始rowkey，首次查询可输入空值来查询当页数据，翻页查询时输入的值根据前一次返回值中的nextRowkey填入。 (optional)
     * @param sceneName 场景名称。取值范围：不填表示全部场景。 1、Station login and logout：终端上下线。 2、Login and logout of cloud managed device：云盒上下线。 3、Device operation：设备操作。 4、Wireless radio：无线射频。 5、Hardware fault：硬件故障。  (optional)
     * @param deviceMac 设备MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 (optional)
     * @param stationMac 终端MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 入参stationMac有值时，仅查询终端上下线场景范围内的日志。  (optional)
     * @return QueryResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public QueryResponse queryLogData(Integer pageSize, String siteId, Long beginTime, Long endTime, String startQueryRowKey, String sceneName, String deviceMac, String stationMac) throws ApiException {
        ApiResponse<QueryResponse> resp = queryLogDataWithHttpInfo(pageSize, siteId, beginTime, endTime, startQueryRowKey, sceneName, deviceMac, stationMac);
        return resp.getData();
    }

    /**
     * 查询设备上报日志记录
     * ## 典型场景 ##   查询设备上报日志记录。 ## 接口功能 ##   查询设备上报日志记录。 ## 接口约束 ##   只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param pageSize 当页大小。 (required)
     * @param siteId 站点ID，UUID格式。 (required)
     * @param beginTime 起始格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param endTime 结束时间格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param startQueryRowKey 起始rowkey，首次查询可输入空值来查询当页数据，翻页查询时输入的值根据前一次返回值中的nextRowkey填入。 (optional)
     * @param sceneName 场景名称。取值范围：不填表示全部场景。 1、Station login and logout：终端上下线。 2、Login and logout of cloud managed device：云盒上下线。 3、Device operation：设备操作。 4、Wireless radio：无线射频。 5、Hardware fault：硬件故障。  (optional)
     * @param deviceMac 设备MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 (optional)
     * @param stationMac 终端MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 入参stationMac有值时，仅查询终端上下线场景范围内的日志。  (optional)
     * @return ApiResponse&lt;QueryResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<QueryResponse> queryLogDataWithHttpInfo(Integer pageSize, String siteId, Long beginTime, Long endTime, String startQueryRowKey, String sceneName, String deviceMac, String stationMac) throws ApiException {
        com.squareup.okhttp.Call call = queryLogDataValidateBeforeCall(pageSize, siteId, beginTime, endTime, startQueryRowKey, sceneName, deviceMac, stationMac, null, null);
        Type localVarReturnType = new TypeToken<QueryResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询设备上报日志记录 (asynchronously)
     * ## 典型场景 ##   查询设备上报日志记录。 ## 接口功能 ##   查询设备上报日志记录。 ## 接口约束 ##   只有租户管理员获取token并建立会话后才能调用该接口。 
     * @param pageSize 当页大小。 (required)
     * @param siteId 站点ID，UUID格式。 (required)
     * @param beginTime 起始格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param endTime 结束时间格林威治时间，起始与结束时间不可大于5天。 (required)
     * @param startQueryRowKey 起始rowkey，首次查询可输入空值来查询当页数据，翻页查询时输入的值根据前一次返回值中的nextRowkey填入。 (optional)
     * @param sceneName 场景名称。取值范围：不填表示全部场景。 1、Station login and logout：终端上下线。 2、Login and logout of cloud managed device：云盒上下线。 3、Device operation：设备操作。 4、Wireless radio：无线射频。 5、Hardware fault：硬件故障。  (optional)
     * @param deviceMac 设备MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 (optional)
     * @param stationMac 终端MAC地址，格式必须是xx-xx-xx-xx-xx-xx，支持大小写模糊。 入参stationMac有值时，仅查询终端上下线场景范围内的日志。  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call queryLogDataAsync(Integer pageSize, String siteId, Long beginTime, Long endTime, String startQueryRowKey, String sceneName, String deviceMac, String stationMac, final ApiCallback<QueryResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = queryLogDataValidateBeforeCall(pageSize, siteId, beginTime, endTime, startQueryRowKey, sceneName, deviceMac, stationMac, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<QueryResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
