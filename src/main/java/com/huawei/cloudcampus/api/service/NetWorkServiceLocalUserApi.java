/*
 * 本地用户配置管理
 * 本地用户配置北向接口，主要特性： · 查询本地用户配置 · 修改本地用户配置 · 创建本地用户配置 
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.CreateLocalUserInfoRequst;
import com.huawei.cloudcampus.api.model.CreateLocalUserInfoResponse;
import com.huawei.cloudcampus.api.model.DeleteLocalUserInfoResponse;
import com.huawei.cloudcampus.api.model.GetLocalUserInfosResponse;
import com.huawei.cloudcampus.api.model.InitLocalUserInfoRequst;
import com.huawei.cloudcampus.api.model.InitLocalUserInfoResponse;
import com.huawei.cloudcampus.api.model.UpdateLocalUserInfoRequst;
import com.huawei.cloudcampus.api.model.UpdateLocalUserInfoResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NetWorkServiceLocalUserApi {
    private ApiClient apiClient;

    public NetWorkServiceLocalUserApi() {
        this(Configuration.getDefaultApiClient());
    }

    public NetWorkServiceLocalUserApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for createLocaluserInfo
     * @param siteId 站点ID。 (required)
     * @param body 本地用户信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createLocaluserInfoCall(String siteId, CreateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/sites/{siteId}/users"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createLocaluserInfoValidateBeforeCall(String siteId, CreateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling createLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = createLocaluserInfoCall(siteId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 创建本地用户
     * ## 典型场景 ##    提供创建配置参数的接口，创建本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param body 本地用户信息。 (required)
     * @return CreateLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreateLocalUserInfoResponse createLocaluserInfo(String siteId, CreateLocalUserInfoRequst body) throws ApiException {
        ApiResponse<CreateLocalUserInfoResponse> resp = createLocaluserInfoWithHttpInfo(siteId, body);
        return resp.getData();
    }

    /**
     * 创建本地用户
     * ## 典型场景 ##    提供创建配置参数的接口，创建本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param body 本地用户信息。 (required)
     * @return ApiResponse&lt;CreateLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreateLocalUserInfoResponse> createLocaluserInfoWithHttpInfo(String siteId, CreateLocalUserInfoRequst body) throws ApiException {
        com.squareup.okhttp.Call call = createLocaluserInfoValidateBeforeCall(siteId, body, null, null);
        Type localVarReturnType = new TypeToken<CreateLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 创建本地用户 (asynchronously)
     * ## 典型场景 ##    提供创建配置参数的接口，创建本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param body 本地用户信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createLocaluserInfoAsync(String siteId, CreateLocalUserInfoRequst body, final ApiCallback<CreateLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createLocaluserInfoValidateBeforeCall(siteId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreateLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for createTemplateLocaluserInfo
     * @param siteTemplateId 站点模板ID。 (required)
     * @param body 本地用户信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTemplateLocaluserInfoCall(String siteTemplateId, CreateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/site-templates/{siteTemplateId}/users"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTemplateLocaluserInfoValidateBeforeCall(String siteTemplateId, CreateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling createTemplateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTemplateLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = createTemplateLocaluserInfoCall(siteTemplateId, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 创建站点模板的本地用户
     * ## 典型场景 ##    提供创建配置参数的接口，创建站点模板的本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param body 本地用户信息。 (required)
     * @return CreateLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CreateLocalUserInfoResponse createTemplateLocaluserInfo(String siteTemplateId, CreateLocalUserInfoRequst body) throws ApiException {
        ApiResponse<CreateLocalUserInfoResponse> resp = createTemplateLocaluserInfoWithHttpInfo(siteTemplateId, body);
        return resp.getData();
    }

    /**
     * 创建站点模板的本地用户
     * ## 典型场景 ##    提供创建配置参数的接口，创建站点模板的本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param body 本地用户信息。 (required)
     * @return ApiResponse&lt;CreateLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CreateLocalUserInfoResponse> createTemplateLocaluserInfoWithHttpInfo(String siteTemplateId, CreateLocalUserInfoRequst body) throws ApiException {
        com.squareup.okhttp.Call call = createTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, body, null, null);
        Type localVarReturnType = new TypeToken<CreateLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 创建站点模板的本地用户 (asynchronously)
     * ## 典型场景 ##    提供创建配置参数的接口，创建站点模板的本地用户接口。 ## 接口功能 ##    提供创建配置参数的接口，创建站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口功能基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param body 本地用户信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTemplateLocaluserInfoAsync(String siteTemplateId, CreateLocalUserInfoRequst body, final ApiCallback<CreateLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CreateLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteLocaluserInfo
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteLocaluserInfoCall(String siteId, String username, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/sites/{siteId}/users/{username}"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()))
            .replaceAll("\\{" + "username" + "\\}", apiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteLocaluserInfoValidateBeforeCall(String siteId, String username, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling deleteLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling deleteLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = deleteLocaluserInfoCall(siteId, username, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除本地用户
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @return DeleteLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteLocalUserInfoResponse deleteLocaluserInfo(String siteId, String username) throws ApiException {
        ApiResponse<DeleteLocalUserInfoResponse> resp = deleteLocaluserInfoWithHttpInfo(siteId, username);
        return resp.getData();
    }

    /**
     * 删除本地用户
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @return ApiResponse&lt;DeleteLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteLocalUserInfoResponse> deleteLocaluserInfoWithHttpInfo(String siteId, String username) throws ApiException {
        com.squareup.okhttp.Call call = deleteLocaluserInfoValidateBeforeCall(siteId, username, null, null);
        Type localVarReturnType = new TypeToken<DeleteLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除本地用户 (asynchronously)
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteLocaluserInfoAsync(String siteId, String username, final ApiCallback<DeleteLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteLocaluserInfoValidateBeforeCall(siteId, username, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteTemplateLocaluserInfo
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTemplateLocaluserInfoCall(String siteTemplateId, String username, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/site-templates/{siteTemplateId}/users/{username}"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()))
            .replaceAll("\\{" + "username" + "\\}", apiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTemplateLocaluserInfoValidateBeforeCall(String siteTemplateId, String username, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling deleteTemplateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling deleteTemplateLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = deleteTemplateLocaluserInfoCall(siteTemplateId, username, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除本地用户
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @return DeleteLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteLocalUserInfoResponse deleteTemplateLocaluserInfo(String siteTemplateId, String username) throws ApiException {
        ApiResponse<DeleteLocalUserInfoResponse> resp = deleteTemplateLocaluserInfoWithHttpInfo(siteTemplateId, username);
        return resp.getData();
    }

    /**
     * 删除本地用户
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @return ApiResponse&lt;DeleteLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteLocalUserInfoResponse> deleteTemplateLocaluserInfoWithHttpInfo(String siteTemplateId, String username) throws ApiException {
        com.squareup.okhttp.Call call = deleteTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, username, null, null);
        Type localVarReturnType = new TypeToken<DeleteLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除本地用户 (asynchronously)
     * ## 典型场景 ##    提供删除配置参数的接口，删除本地用户接口。 ## 接口功能 ##    提供删除配置参数的接口，删除本地用户。 ## 接口约束 ##    该接口基于站点发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTemplateLocaluserInfoAsync(String siteTemplateId, String username, final ApiCallback<DeleteLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, username, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getLocaluserInfo
     * @param siteId 站点ID。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getLocaluserInfoCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/sites/{siteId}/users"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getLocaluserInfoValidateBeforeCall(String siteId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling getLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getLocaluserInfoCall(siteId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询本地用户
     * ## 典型场景 ##    提供查询配置参数的接口，查询本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteId 站点ID。 (required)
     * @return GetLocalUserInfosResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetLocalUserInfosResponse getLocaluserInfo(String siteId) throws ApiException {
        ApiResponse<GetLocalUserInfosResponse> resp = getLocaluserInfoWithHttpInfo(siteId);
        return resp.getData();
    }

    /**
     * 查询本地用户
     * ## 典型场景 ##    提供查询配置参数的接口，查询本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteId 站点ID。 (required)
     * @return ApiResponse&lt;GetLocalUserInfosResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetLocalUserInfosResponse> getLocaluserInfoWithHttpInfo(String siteId) throws ApiException {
        com.squareup.okhttp.Call call = getLocaluserInfoValidateBeforeCall(siteId, null, null);
        Type localVarReturnType = new TypeToken<GetLocalUserInfosResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询本地用户 (asynchronously)
     * ## 典型场景 ##    提供查询配置参数的接口，查询本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteId 站点ID。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getLocaluserInfoAsync(String siteId, final ApiCallback<GetLocalUserInfosResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getLocaluserInfoValidateBeforeCall(siteId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetLocalUserInfosResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTemplateLocaluserInfo
     * @param siteTemplateId 站点模板ID。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTemplateLocaluserInfoCall(String siteTemplateId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/site-templates/{siteTemplateId}/users"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTemplateLocaluserInfoValidateBeforeCall(String siteTemplateId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling getTemplateLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getTemplateLocaluserInfoCall(siteTemplateId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询站点模板的本地用户
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点模板的本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询站点模板的本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @return GetLocalUserInfosResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetLocalUserInfosResponse getTemplateLocaluserInfo(String siteTemplateId) throws ApiException {
        ApiResponse<GetLocalUserInfosResponse> resp = getTemplateLocaluserInfoWithHttpInfo(siteTemplateId);
        return resp.getData();
    }

    /**
     * 查询站点模板的本地用户
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点模板的本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询站点模板的本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @return ApiResponse&lt;GetLocalUserInfosResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetLocalUserInfosResponse> getTemplateLocaluserInfoWithHttpInfo(String siteTemplateId) throws ApiException {
        com.squareup.okhttp.Call call = getTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, null, null);
        Type localVarReturnType = new TypeToken<GetLocalUserInfosResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询站点模板的本地用户 (asynchronously)
     * ## 典型场景 ##    提供查询配置参数的接口，查询站点模板的本地用户接口。 ## 接口功能 ##    提供查询配置参数的接口，查询站点模板的本地用户接口(包括monitor和manager设备本地用户)。 ## 接口约束 ##    该接口基于站点。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTemplateLocaluserInfoAsync(String siteTemplateId, final ApiCallback<GetLocalUserInfosResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetLocalUserInfosResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for initLoginuserInfo
     * @param body 租户下设备admin账号的默认密码配置信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call initLoginuserInfoCall(InitLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/users/admin";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call initLoginuserInfoValidateBeforeCall(InitLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling initLoginuserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = initLoginuserInfoCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 配置租户下设备admin账号的默认密码
     * ## 典型场景 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口功能 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param body 租户下设备admin账号的默认密码配置信息。 (required)
     * @return InitLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InitLocalUserInfoResponse initLoginuserInfo(InitLocalUserInfoRequst body) throws ApiException {
        ApiResponse<InitLocalUserInfoResponse> resp = initLoginuserInfoWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 配置租户下设备admin账号的默认密码
     * ## 典型场景 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口功能 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param body 租户下设备admin账号的默认密码配置信息。 (required)
     * @return ApiResponse&lt;InitLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InitLocalUserInfoResponse> initLoginuserInfoWithHttpInfo(InitLocalUserInfoRequst body) throws ApiException {
        com.squareup.okhttp.Call call = initLoginuserInfoValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<InitLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 配置租户下设备admin账号的默认密码 (asynchronously)
     * ## 典型场景 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口功能 ##    提供配置租户下设备admin账号的默认密码的接口。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param body 租户下设备admin账号的默认密码配置信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call initLoginuserInfoAsync(InitLocalUserInfoRequst body, final ApiCallback<InitLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = initLoginuserInfoValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InitLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateLocaluserInfo
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateLocaluserInfoCall(String siteId, String username, UpdateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/sites/{siteId}/users/{username}"
            .replaceAll("\\{" + "siteId" + "\\}", apiClient.escapeString(siteId.toString()))
            .replaceAll("\\{" + "username" + "\\}", apiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateLocaluserInfoValidateBeforeCall(String siteId, String username, UpdateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteId' is set
        if (siteId == null) {
            throw new ApiException("Missing the required parameter 'siteId' when calling updateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling updateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateLocaluserInfoCall(siteId, username, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改本地用户
     * ## 典型场景 ##    提供修改配置参数的接口，修改本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @return UpdateLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UpdateLocalUserInfoResponse updateLocaluserInfo(String siteId, String username, UpdateLocalUserInfoRequst body) throws ApiException {
        ApiResponse<UpdateLocalUserInfoResponse> resp = updateLocaluserInfoWithHttpInfo(siteId, username, body);
        return resp.getData();
    }

    /**
     * 修改本地用户
     * ## 典型场景 ##    提供修改配置参数的接口，修改本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @return ApiResponse&lt;UpdateLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UpdateLocalUserInfoResponse> updateLocaluserInfoWithHttpInfo(String siteId, String username, UpdateLocalUserInfoRequst body) throws ApiException {
        com.squareup.okhttp.Call call = updateLocaluserInfoValidateBeforeCall(siteId, username, body, null, null);
        Type localVarReturnType = new TypeToken<UpdateLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改本地用户 (asynchronously)
     * ## 典型场景 ##    提供修改配置参数的接口，修改本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteId 站点ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateLocaluserInfoAsync(String siteId, String username, UpdateLocalUserInfoRequst body, final ApiCallback<UpdateLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateLocaluserInfoValidateBeforeCall(siteId, username, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UpdateLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateTemplateLocaluserInfo
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateTemplateLocaluserInfoCall(String siteTemplateId, String username, UpdateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/networkservice/networkconfig/net/localuser/site-templates/{siteTemplateId}/users/{username}"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()))
            .replaceAll("\\{" + "username" + "\\}", apiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateTemplateLocaluserInfoValidateBeforeCall(String siteTemplateId, String username, UpdateLocalUserInfoRequst body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling updateTemplateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling updateTemplateLocaluserInfo(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateTemplateLocaluserInfo(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateTemplateLocaluserInfoCall(siteTemplateId, username, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改站点模板的本地用户
     * ## 典型场景 ##    提供修改配置参数的接口，修改站点模板的本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @return UpdateLocalUserInfoResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UpdateLocalUserInfoResponse updateTemplateLocaluserInfo(String siteTemplateId, String username, UpdateLocalUserInfoRequst body) throws ApiException {
        ApiResponse<UpdateLocalUserInfoResponse> resp = updateTemplateLocaluserInfoWithHttpInfo(siteTemplateId, username, body);
        return resp.getData();
    }

    /**
     * 修改站点模板的本地用户
     * ## 典型场景 ##    提供修改配置参数的接口，修改站点模板的本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @return ApiResponse&lt;UpdateLocalUserInfoResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UpdateLocalUserInfoResponse> updateTemplateLocaluserInfoWithHttpInfo(String siteTemplateId, String username, UpdateLocalUserInfoRequst body) throws ApiException {
        com.squareup.okhttp.Call call = updateTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, username, body, null, null);
        Type localVarReturnType = new TypeToken<UpdateLocalUserInfoResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改站点模板的本地用户 (asynchronously)
     * ## 典型场景 ##    提供修改配置参数的接口，修改站点模板的本地用户接口。 ## 接口功能 ##    提供修改配置参数的接口，修改站点模板的本地用户密码，接入方式（包括monitor和manager设备本地用户）等。 ## 接口约束 ##    该接口基于租户发布和管理。 
     * @param siteTemplateId 站点模板ID。 (required)
     * @param username 本地用户名，在URL中拼接用户名时，要对特殊字符转义。 (required)
     * @param body 本地用户配置信息。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateTemplateLocaluserInfoAsync(String siteTemplateId, String username, UpdateLocalUserInfoRequst body, final ApiCallback<UpdateLocalUserInfoResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateTemplateLocaluserInfoValidateBeforeCall(siteTemplateId, username, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UpdateLocalUserInfoResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
