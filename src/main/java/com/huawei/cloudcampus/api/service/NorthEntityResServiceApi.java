/*
 * 实体资源北向接口
 * 实体资源条件查询。 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.FrameResResponse;
import com.huawei.cloudcampus.api.model.OTPointResResponse;
import com.huawei.cloudcampus.api.model.PortResResponse;
import com.huawei.cloudcampus.api.model.SlotResResponse;
import com.huawei.cloudcampus.api.model.SubSlotResResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NorthEntityResServiceApi {
    private ApiClient apiClient;

    public NorthEntityResServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public NorthEntityResServiceApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getFrameList
     * @param nedn 设备dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 网元名称，样例：FW_B。 (optional)
     * @param framedn 机框Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param shelfindex 机架索引设备上有的，所有资源的根索引，样例：-1。 (optional)
     * @param frameindex 机框索引，样例：67108867。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.11.16715812。 (optional)
     * @param mfgname 物理固件的制造厂商，样例：Huawei。 (optional)
     * @param serialnum 序列号，样例：020LKTD0A9000233。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param descr 机框描述，样例：Eudemon1000E-N6。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param adminstatus 管理状态，可以是如下值之一： 4、11：正常 2、3、12：错误 13：LoopBack 其他：未知  (optional)
     * @param operstatus 操作状态，可以是如下值之一： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported  2：hotStandby  3：coldStandby  4：providingService  (optional)
     * @param softversion 软件版本。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明，如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明，如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename（机框名称）。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明，此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getFrameListCall(String nedn, String nename, String framedn, Integer shelfindex, Integer frameindex, Integer frameno, String vendortype, String mfgname, String serialnum, Integer physicalclass, String descr, String framename, Integer adminstatus, Integer operstatus, Integer standbystatus, String softversion, Integer start, Integer size, String orderby, Boolean desc, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/rest/openapi/network/frame";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (nedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nedn", nedn));
        if (nename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nename", nename));
        if (framedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framedn", framedn));
        if (shelfindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "shelfindex", shelfindex));
        if (frameindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "frameindex", frameindex));
        if (frameno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "frameno", frameno));
        if (vendortype != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "vendortype", vendortype));
        if (mfgname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "mfgname", mfgname));
        if (serialnum != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "serialnum", serialnum));
        if (physicalclass != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "physicalclass", physicalclass));
        if (descr != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "descr", descr));
        if (framename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framename", framename));
        if (adminstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "adminstatus", adminstatus));
        if (operstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "operstatus", operstatus));
        if (standbystatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "standbystatus", standbystatus));
        if (softversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "softversion", softversion));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "size", size));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "orderby", orderby));
        if (desc != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "desc", desc));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getFrameListValidateBeforeCall(String nedn, String nename, String framedn, Integer shelfindex, Integer frameindex, Integer frameno, String vendortype, String mfgname, String serialnum, Integer physicalclass, String descr, String framename, Integer adminstatus, Integer operstatus, Integer standbystatus, String softversion, Integer start, Integer size, String orderby, Boolean desc, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getFrameListCall(nedn, nename, framedn, shelfindex, frameindex, frameno, vendortype, mfgname, serialnum, physicalclass, descr, framename, adminstatus, operstatus, standbystatus, softversion, start, size, orderby, desc, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 条件查询机框资源
     * ## 典型场景 ##  北向接口支持条件查询机框资源。 ## 接口功能 ##  条件查询机框资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 网元名称，样例：FW_B。 (optional)
     * @param framedn 机框Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param shelfindex 机架索引设备上有的，所有资源的根索引，样例：-1。 (optional)
     * @param frameindex 机框索引，样例：67108867。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.11.16715812。 (optional)
     * @param mfgname 物理固件的制造厂商，样例：Huawei。 (optional)
     * @param serialnum 序列号，样例：020LKTD0A9000233。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param descr 机框描述，样例：Eudemon1000E-N6。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param adminstatus 管理状态，可以是如下值之一： 4、11：正常 2、3、12：错误 13：LoopBack 其他：未知  (optional)
     * @param operstatus 操作状态，可以是如下值之一： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported  2：hotStandby  3：coldStandby  4：providingService  (optional)
     * @param softversion 软件版本。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明，如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明，如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename（机框名称）。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明，此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @return FrameResResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public FrameResResponse getFrameList(String nedn, String nename, String framedn, Integer shelfindex, Integer frameindex, Integer frameno, String vendortype, String mfgname, String serialnum, Integer physicalclass, String descr, String framename, Integer adminstatus, Integer operstatus, Integer standbystatus, String softversion, Integer start, Integer size, String orderby, Boolean desc) throws ApiException {
        ApiResponse<FrameResResponse> resp = getFrameListWithHttpInfo(nedn, nename, framedn, shelfindex, frameindex, frameno, vendortype, mfgname, serialnum, physicalclass, descr, framename, adminstatus, operstatus, standbystatus, softversion, start, size, orderby, desc);
        return resp.getData();
    }

    /**
     * 条件查询机框资源
     * ## 典型场景 ##  北向接口支持条件查询机框资源。 ## 接口功能 ##  条件查询机框资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 网元名称，样例：FW_B。 (optional)
     * @param framedn 机框Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param shelfindex 机架索引设备上有的，所有资源的根索引，样例：-1。 (optional)
     * @param frameindex 机框索引，样例：67108867。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.11.16715812。 (optional)
     * @param mfgname 物理固件的制造厂商，样例：Huawei。 (optional)
     * @param serialnum 序列号，样例：020LKTD0A9000233。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param descr 机框描述，样例：Eudemon1000E-N6。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param adminstatus 管理状态，可以是如下值之一： 4、11：正常 2、3、12：错误 13：LoopBack 其他：未知  (optional)
     * @param operstatus 操作状态，可以是如下值之一： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported  2：hotStandby  3：coldStandby  4：providingService  (optional)
     * @param softversion 软件版本。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明，如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明，如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename（机框名称）。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明，此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @return ApiResponse&lt;FrameResResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<FrameResResponse> getFrameListWithHttpInfo(String nedn, String nename, String framedn, Integer shelfindex, Integer frameindex, Integer frameno, String vendortype, String mfgname, String serialnum, Integer physicalclass, String descr, String framename, Integer adminstatus, Integer operstatus, Integer standbystatus, String softversion, Integer start, Integer size, String orderby, Boolean desc) throws ApiException {
        com.squareup.okhttp.Call call = getFrameListValidateBeforeCall(nedn, nename, framedn, shelfindex, frameindex, frameno, vendortype, mfgname, serialnum, physicalclass, descr, framename, adminstatus, operstatus, standbystatus, softversion, start, size, orderby, desc, null, null);
        Type localVarReturnType = new TypeToken<FrameResResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 条件查询机框资源 (asynchronously)
     * ## 典型场景 ##  北向接口支持条件查询机框资源。 ## 接口功能 ##  条件查询机框资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 网元名称，样例：FW_B。 (optional)
     * @param framedn 机框Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param shelfindex 机架索引设备上有的，所有资源的根索引，样例：-1。 (optional)
     * @param frameindex 机框索引，样例：67108867。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.11.16715812。 (optional)
     * @param mfgname 物理固件的制造厂商，样例：Huawei。 (optional)
     * @param serialnum 序列号，样例：020LKTD0A9000233。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param descr 机框描述，样例：Eudemon1000E-N6。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param adminstatus 管理状态，可以是如下值之一： 4、11：正常 2、3、12：错误 13：LoopBack 其他：未知  (optional)
     * @param operstatus 操作状态，可以是如下值之一： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported  2：hotStandby  3：coldStandby  4：providingService  (optional)
     * @param softversion 软件版本。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明，如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明，如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename（机框名称）。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明，此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getFrameListAsync(String nedn, String nename, String framedn, Integer shelfindex, Integer frameindex, Integer frameno, String vendortype, String mfgname, String serialnum, Integer physicalclass, String descr, String framename, Integer adminstatus, Integer operstatus, Integer standbystatus, String softversion, Integer start, Integer size, String orderby, Boolean desc, final ApiCallback<FrameResResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getFrameListValidateBeforeCall(nedn, nename, framedn, shelfindex, frameindex, frameno, vendortype, mfgname, serialnum, physicalclass, descr, framename, adminstatus, operstatus, standbystatus, softversion, start, size, orderby, desc, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<FrameResResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getOTPointList
     * @param nedn 设备DN，样例：NE&#x3D;34604111。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getOTPointListCall(String nedn, Integer start, Integer size, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/rest/openapi/network/otpoint";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (nedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nedn", nedn));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "size", size));
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "fields", fields));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getOTPointListValidateBeforeCall(String nedn, Integer start, Integer size, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getOTPointListCall(nedn, start, size, fields, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 条件查询光口资源
     * ## 典型场景 ##  北向接口支持条件查询光口资源。 ## 接口功能 ##  条件查询光口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：NE&#x3D;34604111。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return OTPointResResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public OTPointResResponse getOTPointList(String nedn, Integer start, Integer size, String fields) throws ApiException {
        ApiResponse<OTPointResResponse> resp = getOTPointListWithHttpInfo(nedn, start, size, fields);
        return resp.getData();
    }

    /**
     * 条件查询光口资源
     * ## 典型场景 ##  北向接口支持条件查询光口资源。 ## 接口功能 ##  条件查询光口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：NE&#x3D;34604111。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return ApiResponse&lt;OTPointResResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<OTPointResResponse> getOTPointListWithHttpInfo(String nedn, Integer start, Integer size, String fields) throws ApiException {
        com.squareup.okhttp.Call call = getOTPointListValidateBeforeCall(nedn, start, size, fields, null, null);
        Type localVarReturnType = new TypeToken<OTPointResResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 条件查询光口资源 (asynchronously)
     * ## 典型场景 ##  北向接口支持条件查询光口资源。 ## 接口功能 ##  条件查询光口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：NE&#x3D;34604111。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getOTPointListAsync(String nedn, Integer start, Integer size, String fields, final ApiCallback<OTPointResResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getOTPointListValidateBeforeCall(nedn, start, size, fields, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<OTPointResResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getPortList
     * @param neip 设备IP地址，样例：10.136.252.60。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param portdn 端口DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1,SS&#x3D;-1,PP&#x3D;|1025|0|GigabitEthernet1/0/0。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param slotdn 单板DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param subslotdn 子卡DN，样例：-1。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param subslotno 子卡序号，样例：-1。 (optional)
     * @param portindex 端口索引，样例：67387406。 (optional)
     * @param portno 端口编号，样例：0。 (optional)
     * @param descr 端口描述，样例：Port。 (optional)
     * @param name 端口名称，样例：GigabitEthernet1/0/0。 (optional)
     * @param adminstatus 接口管理状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param operstatus 接口运行状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param ifindex 接口索引，样例：6。 (optional)
     * @param iftype 端口类型，可以是如下值之一： 2：Ethernet 5：Atm 6：Pos 7：Serial 9：E1 10：T1 11：Cpos 19：Aux 20：E3 21：T3 22：Meth 32：Cellular  (optional)
     * @param ipaddress 端口IP地址，样例：10.0.0.0。 (optional)
     * @param ifspeed 端口速率（bps），样例：1000000000。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、portdn，name(端口名) 说明： 指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getPortListCall(String neip, String nename, String nedn, String portdn, String framedn, String slotdn, String subslotdn, Integer frameno, Integer slotno, Integer subslotno, Integer portindex, Integer portno, String descr, String name, Integer adminstatus, Integer operstatus, Integer ifindex, Integer iftype, String ipaddress, String ifspeed, Integer start, Integer size, String orderby, Boolean desc, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/rest/openapi/network/port";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (neip != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "neip", neip));
        if (nename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nename", nename));
        if (nedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nedn", nedn));
        if (portdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "portdn", portdn));
        if (framedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framedn", framedn));
        if (slotdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotdn", slotdn));
        if (subslotdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotdn", subslotdn));
        if (frameno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "frameno", frameno));
        if (slotno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotno", slotno));
        if (subslotno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotno", subslotno));
        if (portindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "portindex", portindex));
        if (portno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "portno", portno));
        if (descr != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "descr", descr));
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "name", name));
        if (adminstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "adminstatus", adminstatus));
        if (operstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "operstatus", operstatus));
        if (ifindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "ifindex", ifindex));
        if (iftype != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "iftype", iftype));
        if (ipaddress != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "ipaddress", ipaddress));
        if (ifspeed != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "ifspeed", ifspeed));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "size", size));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "orderby", orderby));
        if (desc != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "desc", desc));
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "fields", fields));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getPortListValidateBeforeCall(String neip, String nename, String nedn, String portdn, String framedn, String slotdn, String subslotdn, Integer frameno, Integer slotno, Integer subslotno, Integer portindex, Integer portno, String descr, String name, Integer adminstatus, Integer operstatus, Integer ifindex, Integer iftype, String ipaddress, String ifspeed, Integer start, Integer size, String orderby, Boolean desc, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getPortListCall(neip, nename, nedn, portdn, framedn, slotdn, subslotdn, frameno, slotno, subslotno, portindex, portno, descr, name, adminstatus, operstatus, ifindex, iftype, ipaddress, ifspeed, start, size, orderby, desc, fields, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 条件查询端口资源
     * ## 典型场景 ##  北向接口支持条件查询端口资源。 ## 接口功能 ##  条件查询端口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param neip 设备IP地址，样例：10.136.252.60。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param portdn 端口DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1,SS&#x3D;-1,PP&#x3D;|1025|0|GigabitEthernet1/0/0。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param slotdn 单板DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param subslotdn 子卡DN，样例：-1。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param subslotno 子卡序号，样例：-1。 (optional)
     * @param portindex 端口索引，样例：67387406。 (optional)
     * @param portno 端口编号，样例：0。 (optional)
     * @param descr 端口描述，样例：Port。 (optional)
     * @param name 端口名称，样例：GigabitEthernet1/0/0。 (optional)
     * @param adminstatus 接口管理状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param operstatus 接口运行状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param ifindex 接口索引，样例：6。 (optional)
     * @param iftype 端口类型，可以是如下值之一： 2：Ethernet 5：Atm 6：Pos 7：Serial 9：E1 10：T1 11：Cpos 19：Aux 20：E3 21：T3 22：Meth 32：Cellular  (optional)
     * @param ipaddress 端口IP地址，样例：10.0.0.0。 (optional)
     * @param ifspeed 端口速率（bps），样例：1000000000。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、portdn，name(端口名) 说明： 指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return PortResResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PortResResponse getPortList(String neip, String nename, String nedn, String portdn, String framedn, String slotdn, String subslotdn, Integer frameno, Integer slotno, Integer subslotno, Integer portindex, Integer portno, String descr, String name, Integer adminstatus, Integer operstatus, Integer ifindex, Integer iftype, String ipaddress, String ifspeed, Integer start, Integer size, String orderby, Boolean desc, String fields) throws ApiException {
        ApiResponse<PortResResponse> resp = getPortListWithHttpInfo(neip, nename, nedn, portdn, framedn, slotdn, subslotdn, frameno, slotno, subslotno, portindex, portno, descr, name, adminstatus, operstatus, ifindex, iftype, ipaddress, ifspeed, start, size, orderby, desc, fields);
        return resp.getData();
    }

    /**
     * 条件查询端口资源
     * ## 典型场景 ##  北向接口支持条件查询端口资源。 ## 接口功能 ##  条件查询端口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param neip 设备IP地址，样例：10.136.252.60。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param portdn 端口DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1,SS&#x3D;-1,PP&#x3D;|1025|0|GigabitEthernet1/0/0。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param slotdn 单板DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param subslotdn 子卡DN，样例：-1。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param subslotno 子卡序号，样例：-1。 (optional)
     * @param portindex 端口索引，样例：67387406。 (optional)
     * @param portno 端口编号，样例：0。 (optional)
     * @param descr 端口描述，样例：Port。 (optional)
     * @param name 端口名称，样例：GigabitEthernet1/0/0。 (optional)
     * @param adminstatus 接口管理状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param operstatus 接口运行状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param ifindex 接口索引，样例：6。 (optional)
     * @param iftype 端口类型，可以是如下值之一： 2：Ethernet 5：Atm 6：Pos 7：Serial 9：E1 10：T1 11：Cpos 19：Aux 20：E3 21：T3 22：Meth 32：Cellular  (optional)
     * @param ipaddress 端口IP地址，样例：10.0.0.0。 (optional)
     * @param ifspeed 端口速率（bps），样例：1000000000。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、portdn，name(端口名) 说明： 指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return ApiResponse&lt;PortResResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PortResResponse> getPortListWithHttpInfo(String neip, String nename, String nedn, String portdn, String framedn, String slotdn, String subslotdn, Integer frameno, Integer slotno, Integer subslotno, Integer portindex, Integer portno, String descr, String name, Integer adminstatus, Integer operstatus, Integer ifindex, Integer iftype, String ipaddress, String ifspeed, Integer start, Integer size, String orderby, Boolean desc, String fields) throws ApiException {
        com.squareup.okhttp.Call call = getPortListValidateBeforeCall(neip, nename, nedn, portdn, framedn, slotdn, subslotdn, frameno, slotno, subslotno, portindex, portno, descr, name, adminstatus, operstatus, ifindex, iftype, ipaddress, ifspeed, start, size, orderby, desc, fields, null, null);
        Type localVarReturnType = new TypeToken<PortResResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 条件查询端口资源 (asynchronously)
     * ## 典型场景 ##  北向接口支持条件查询端口资源。 ## 接口功能 ##  条件查询端口资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param neip 设备IP地址，样例：10.136.252.60。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param portdn 端口DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1,SS&#x3D;-1,PP&#x3D;|1025|0|GigabitEthernet1/0/0。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param slotdn 单板DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param subslotdn 子卡DN，样例：-1。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param subslotno 子卡序号，样例：-1。 (optional)
     * @param portindex 端口索引，样例：67387406。 (optional)
     * @param portno 端口编号，样例：0。 (optional)
     * @param descr 端口描述，样例：Port。 (optional)
     * @param name 端口名称，样例：GigabitEthernet1/0/0。 (optional)
     * @param adminstatus 接口管理状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param operstatus 接口运行状态，可以是如下值之一： 1：up 2：down  (optional)
     * @param ifindex 接口索引，样例：6。 (optional)
     * @param iftype 端口类型，可以是如下值之一： 2：Ethernet 5：Atm 6：Pos 7：Serial 9：E1 10：T1 11：Cpos 19：Aux 20：E3 21：T3 22：Meth 32：Cellular  (optional)
     * @param ipaddress 端口IP地址，样例：10.0.0.0。 (optional)
     * @param ifspeed 端口速率（bps），样例：1000000000。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数，支持1～100条，缺省值是20。说明：如果值小于1或大于100时，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、portdn，name(端口名) 说明： 指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。 说明： 此请求参数只有指定了fields请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getPortListAsync(String neip, String nename, String nedn, String portdn, String framedn, String slotdn, String subslotdn, Integer frameno, Integer slotno, Integer subslotno, Integer portindex, Integer portno, String descr, String name, Integer adminstatus, Integer operstatus, Integer ifindex, Integer iftype, String ipaddress, String ifspeed, Integer start, Integer size, String orderby, Boolean desc, String fields, final ApiCallback<PortResResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getPortListValidateBeforeCall(neip, nename, nedn, portdn, framedn, slotdn, subslotdn, frameno, slotno, subslotno, portindex, portno, descr, name, adminstatus, operstatus, ifindex, iftype, ipaddress, ifspeed, start, size, orderby, desc, fields, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PortResResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getSlotList
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotdn 单板Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param slotindex 单板索引，样例：67371017。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.12.16719978。 (optional)
     * @param descr 单板描述，样例：--。 (optional)
     * @param slotname 单板名称，样例：2XG8GE。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported 2： hotStandby 3：coldStandby 4：providingService  (optional)
     * @param hardversion 硬件版本，样例：VER.A。 (optional)
     * @param firmversion 固件版本，样例：221 Nov 28 2017 17:23:17 。 (optional)
     * @param softversion 软件版本，样例：V500R001C80SPC100。 (optional)
     * @param serialnum 序列号，样例：210235G7FW0123456789。 (optional)
     * @param mfgname 组件名称，样例：Huawei。 (optional)
     * @param modelname 模块名称，样例：huawei。 (optional)
     * @param alarmlight 预留字段，当前无意义。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明： 如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明： 1、如果值小于0，将使用缺省值。2、数据的size，最大建议10000条。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename、slotdn说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明： 此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。说明：此请求参数只有指定了“fields”请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getSlotListCall(String nedn, String nename, String framedn, String framename, Integer frameno, String slotdn, Integer slotindex, Integer slotno, String vendortype, String descr, String slotname, Integer physicalclass, Integer adminstatus, Integer operstatus, Integer standbystatus, String hardversion, String firmversion, String softversion, String serialnum, String mfgname, String modelname, String alarmlight, Integer start, Integer size, String orderby, Boolean desc, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/rest/openapi/network/slot";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (nedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nedn", nedn));
        if (nename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nename", nename));
        if (framedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framedn", framedn));
        if (framename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framename", framename));
        if (frameno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "frameno", frameno));
        if (slotdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotdn", slotdn));
        if (slotindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotindex", slotindex));
        if (slotno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotno", slotno));
        if (vendortype != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "vendortype", vendortype));
        if (descr != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "descr", descr));
        if (slotname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotname", slotname));
        if (physicalclass != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "physicalclass", physicalclass));
        if (adminstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "adminstatus", adminstatus));
        if (operstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "operstatus", operstatus));
        if (standbystatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "standbystatus", standbystatus));
        if (hardversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "hardversion", hardversion));
        if (firmversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "firmversion", firmversion));
        if (softversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "softversion", softversion));
        if (serialnum != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "serialnum", serialnum));
        if (mfgname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "mfgname", mfgname));
        if (modelname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "modelname", modelname));
        if (alarmlight != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "alarmlight", alarmlight));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "size", size));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "orderby", orderby));
        if (desc != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "desc", desc));
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "fields", fields));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getSlotListValidateBeforeCall(String nedn, String nename, String framedn, String framename, Integer frameno, String slotdn, Integer slotindex, Integer slotno, String vendortype, String descr, String slotname, Integer physicalclass, Integer adminstatus, Integer operstatus, Integer standbystatus, String hardversion, String firmversion, String softversion, String serialnum, String mfgname, String modelname, String alarmlight, Integer start, Integer size, String orderby, Boolean desc, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getSlotListCall(nedn, nename, framedn, framename, frameno, slotdn, slotindex, slotno, vendortype, descr, slotname, physicalclass, adminstatus, operstatus, standbystatus, hardversion, firmversion, softversion, serialnum, mfgname, modelname, alarmlight, start, size, orderby, desc, fields, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 条件查询单板资源
     * ## 典型场景 ##  北向接口支持条件查询单板资源。 ## 接口功能 ##  条件查询单板资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotdn 单板Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param slotindex 单板索引，样例：67371017。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.12.16719978。 (optional)
     * @param descr 单板描述，样例：--。 (optional)
     * @param slotname 单板名称，样例：2XG8GE。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported 2： hotStandby 3：coldStandby 4：providingService  (optional)
     * @param hardversion 硬件版本，样例：VER.A。 (optional)
     * @param firmversion 固件版本，样例：221 Nov 28 2017 17:23:17 。 (optional)
     * @param softversion 软件版本，样例：V500R001C80SPC100。 (optional)
     * @param serialnum 序列号，样例：210235G7FW0123456789。 (optional)
     * @param mfgname 组件名称，样例：Huawei。 (optional)
     * @param modelname 模块名称，样例：huawei。 (optional)
     * @param alarmlight 预留字段，当前无意义。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明： 如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明： 1、如果值小于0，将使用缺省值。2、数据的size，最大建议10000条。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename、slotdn说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明： 此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。说明：此请求参数只有指定了“fields”请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return SlotResResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SlotResResponse getSlotList(String nedn, String nename, String framedn, String framename, Integer frameno, String slotdn, Integer slotindex, Integer slotno, String vendortype, String descr, String slotname, Integer physicalclass, Integer adminstatus, Integer operstatus, Integer standbystatus, String hardversion, String firmversion, String softversion, String serialnum, String mfgname, String modelname, String alarmlight, Integer start, Integer size, String orderby, Boolean desc, String fields) throws ApiException {
        ApiResponse<SlotResResponse> resp = getSlotListWithHttpInfo(nedn, nename, framedn, framename, frameno, slotdn, slotindex, slotno, vendortype, descr, slotname, physicalclass, adminstatus, operstatus, standbystatus, hardversion, firmversion, softversion, serialnum, mfgname, modelname, alarmlight, start, size, orderby, desc, fields);
        return resp.getData();
    }

    /**
     * 条件查询单板资源
     * ## 典型场景 ##  北向接口支持条件查询单板资源。 ## 接口功能 ##  条件查询单板资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotdn 单板Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param slotindex 单板索引，样例：67371017。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.12.16719978。 (optional)
     * @param descr 单板描述，样例：--。 (optional)
     * @param slotname 单板名称，样例：2XG8GE。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported 2： hotStandby 3：coldStandby 4：providingService  (optional)
     * @param hardversion 硬件版本，样例：VER.A。 (optional)
     * @param firmversion 固件版本，样例：221 Nov 28 2017 17:23:17 。 (optional)
     * @param softversion 软件版本，样例：V500R001C80SPC100。 (optional)
     * @param serialnum 序列号，样例：210235G7FW0123456789。 (optional)
     * @param mfgname 组件名称，样例：Huawei。 (optional)
     * @param modelname 模块名称，样例：huawei。 (optional)
     * @param alarmlight 预留字段，当前无意义。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明： 如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明： 1、如果值小于0，将使用缺省值。2、数据的size，最大建议10000条。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename、slotdn说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明： 此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。说明：此请求参数只有指定了“fields”请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @return ApiResponse&lt;SlotResResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SlotResResponse> getSlotListWithHttpInfo(String nedn, String nename, String framedn, String framename, Integer frameno, String slotdn, Integer slotindex, Integer slotno, String vendortype, String descr, String slotname, Integer physicalclass, Integer adminstatus, Integer operstatus, Integer standbystatus, String hardversion, String firmversion, String softversion, String serialnum, String mfgname, String modelname, String alarmlight, Integer start, Integer size, String orderby, Boolean desc, String fields) throws ApiException {
        com.squareup.okhttp.Call call = getSlotListValidateBeforeCall(nedn, nename, framedn, framename, frameno, slotdn, slotindex, slotno, vendortype, descr, slotname, physicalclass, adminstatus, operstatus, standbystatus, hardversion, firmversion, softversion, serialnum, mfgname, modelname, alarmlight, start, size, orderby, desc, fields, null, null);
        Type localVarReturnType = new TypeToken<SlotResResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 条件查询单板资源 (asynchronously)
     * ## 典型场景 ##  北向接口支持条件查询单板资源。 ## 接口功能 ##  条件查询单板资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：FW_B。 (optional)
     * @param framedn 机框DN，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1。 (optional)
     * @param framename 机框名称，样例：Eudemon1000E-N6。 (optional)
     * @param frameno 机框序号，样例：1。 (optional)
     * @param slotdn 单板Dn，样例：047f72d1-7ad3-11e9-b906-000c29b01448,FR&#x3D;1,S&#x3D;1。 (optional)
     * @param slotindex 单板索引，样例：67371017。 (optional)
     * @param slotno 单板序号，样例：1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.12.16719978。 (optional)
     * @param descr 单板描述，样例：--。 (optional)
     * @param slotname 单板名称，样例：2XG8GE。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param standbystatus 主备状态： 1：notSupported 2： hotStandby 3：coldStandby 4：providingService  (optional)
     * @param hardversion 硬件版本，样例：VER.A。 (optional)
     * @param firmversion 固件版本，样例：221 Nov 28 2017 17:23:17 。 (optional)
     * @param softversion 软件版本，样例：V500R001C80SPC100。 (optional)
     * @param serialnum 序列号，样例：210235G7FW0123456789。 (optional)
     * @param mfgname 组件名称，样例：Huawei。 (optional)
     * @param modelname 模块名称，样例：huawei。 (optional)
     * @param alarmlight 预留字段，当前无意义。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明： 如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明： 1、如果值小于0，将使用缺省值。2、数据的size，最大建议10000条。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、framename、slotdn说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明： 此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param fields 指定查询结果所包含的列。需要查询的列名为fields参数的值，多个列名时可用英文逗号隔开。说明：此请求参数只有指定了“fields”请求参数后才有效，不指定默认返回所有字段。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getSlotListAsync(String nedn, String nename, String framedn, String framename, Integer frameno, String slotdn, Integer slotindex, Integer slotno, String vendortype, String descr, String slotname, Integer physicalclass, Integer adminstatus, Integer operstatus, Integer standbystatus, String hardversion, String firmversion, String softversion, String serialnum, String mfgname, String modelname, String alarmlight, Integer start, Integer size, String orderby, Boolean desc, String fields, final ApiCallback<SlotResResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getSlotListValidateBeforeCall(nedn, nename, framedn, framename, frameno, slotdn, slotindex, slotno, vendortype, descr, slotname, physicalclass, adminstatus, operstatus, standbystatus, hardversion, firmversion, softversion, serialnum, mfgname, modelname, alarmlight, start, size, orderby, desc, fields, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SlotResResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getSubSlotList
     * @param nedn 设备Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：AR1220-56。 (optional)
     * @param framedn 机框Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0。 (optional)
     * @param slotdn 单板Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0。 (optional)
     * @param slotname 单板名称，样例：SRU Board 0。 (optional)
     * @param subslotdn 子卡Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0,SS&#x3D;0。 (optional)
     * @param frameno 机框序号，样例：0。 (optional)
     * @param slotno 单板序号，样例：0。 (optional)
     * @param subslotindex 子卡索引，样例：16397。 (optional)
     * @param subslotno 子卡序号，样例：0。 (optional)
     * @param descr 子卡描述，样例：FAN Card。 (optional)
     * @param subslotname 子卡名称，样例：FAN Card 0/1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.13.0。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param hardversion 硬件版本，样例：VER.0。 (optional)
     * @param firmversion 固件版本，样例：Hex： 31 30 39 。 (optional)
     * @param softversion 软件版本，样例：0。 (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param modelname 模块名称，样例：--。 (optional)
     * @param serialnum 序列号，样例：030KSB10B3000060。 (optional)
     * @param mfgname 组件名称，物理固件的制造厂商，样例：Huawei。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明：如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、slotdn、slotname。说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getSubSlotListCall(String nedn, String nename, String framedn, String slotdn, String slotname, String subslotdn, Integer frameno, Integer slotno, Integer subslotindex, Integer subslotno, String descr, String subslotname, String vendortype, Integer physicalclass, String hardversion, String firmversion, String softversion, Integer adminstatus, Integer operstatus, String modelname, String serialnum, String mfgname, Integer start, Integer size, String orderby, Boolean desc, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/rest/openapi/network/subslot";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (nedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nedn", nedn));
        if (nename != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "nename", nename));
        if (framedn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "framedn", framedn));
        if (slotdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotdn", slotdn));
        if (slotname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotname", slotname));
        if (subslotdn != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotdn", subslotdn));
        if (frameno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "frameno", frameno));
        if (slotno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "slotno", slotno));
        if (subslotindex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotindex", subslotindex));
        if (subslotno != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotno", subslotno));
        if (descr != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "descr", descr));
        if (subslotname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "subslotname", subslotname));
        if (vendortype != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "vendortype", vendortype));
        if (physicalclass != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "physicalclass", physicalclass));
        if (hardversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "hardversion", hardversion));
        if (firmversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "firmversion", firmversion));
        if (softversion != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "softversion", softversion));
        if (adminstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "adminstatus", adminstatus));
        if (operstatus != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "operstatus", operstatus));
        if (modelname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "modelname", modelname));
        if (serialnum != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "serialnum", serialnum));
        if (mfgname != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "mfgname", mfgname));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (size != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "size", size));
        if (orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "orderby", orderby));
        if (desc != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "desc", desc));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getSubSlotListValidateBeforeCall(String nedn, String nename, String framedn, String slotdn, String slotname, String subslotdn, Integer frameno, Integer slotno, Integer subslotindex, Integer subslotno, String descr, String subslotname, String vendortype, Integer physicalclass, String hardversion, String firmversion, String softversion, Integer adminstatus, Integer operstatus, String modelname, String serialnum, String mfgname, Integer start, Integer size, String orderby, Boolean desc, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getSubSlotListCall(nedn, nename, framedn, slotdn, slotname, subslotdn, frameno, slotno, subslotindex, subslotno, descr, subslotname, vendortype, physicalclass, hardversion, firmversion, softversion, adminstatus, operstatus, modelname, serialnum, mfgname, start, size, orderby, desc, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 条件查询子卡资源
     * ## 典型场景 ##  北向接口支持条件查询子卡资源。 ## 接口功能 ##  条件查询子卡资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：AR1220-56。 (optional)
     * @param framedn 机框Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0。 (optional)
     * @param slotdn 单板Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0。 (optional)
     * @param slotname 单板名称，样例：SRU Board 0。 (optional)
     * @param subslotdn 子卡Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0,SS&#x3D;0。 (optional)
     * @param frameno 机框序号，样例：0。 (optional)
     * @param slotno 单板序号，样例：0。 (optional)
     * @param subslotindex 子卡索引，样例：16397。 (optional)
     * @param subslotno 子卡序号，样例：0。 (optional)
     * @param descr 子卡描述，样例：FAN Card。 (optional)
     * @param subslotname 子卡名称，样例：FAN Card 0/1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.13.0。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param hardversion 硬件版本，样例：VER.0。 (optional)
     * @param firmversion 固件版本，样例：Hex： 31 30 39 。 (optional)
     * @param softversion 软件版本，样例：0。 (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param modelname 模块名称，样例：--。 (optional)
     * @param serialnum 序列号，样例：030KSB10B3000060。 (optional)
     * @param mfgname 组件名称，物理固件的制造厂商，样例：Huawei。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明：如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、slotdn、slotname。说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @return SubSlotResResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SubSlotResResponse getSubSlotList(String nedn, String nename, String framedn, String slotdn, String slotname, String subslotdn, Integer frameno, Integer slotno, Integer subslotindex, Integer subslotno, String descr, String subslotname, String vendortype, Integer physicalclass, String hardversion, String firmversion, String softversion, Integer adminstatus, Integer operstatus, String modelname, String serialnum, String mfgname, Integer start, Integer size, String orderby, Boolean desc) throws ApiException {
        ApiResponse<SubSlotResResponse> resp = getSubSlotListWithHttpInfo(nedn, nename, framedn, slotdn, slotname, subslotdn, frameno, slotno, subslotindex, subslotno, descr, subslotname, vendortype, physicalclass, hardversion, firmversion, softversion, adminstatus, operstatus, modelname, serialnum, mfgname, start, size, orderby, desc);
        return resp.getData();
    }

    /**
     * 条件查询子卡资源
     * ## 典型场景 ##  北向接口支持条件查询子卡资源。 ## 接口功能 ##  条件查询子卡资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：AR1220-56。 (optional)
     * @param framedn 机框Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0。 (optional)
     * @param slotdn 单板Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0。 (optional)
     * @param slotname 单板名称，样例：SRU Board 0。 (optional)
     * @param subslotdn 子卡Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0,SS&#x3D;0。 (optional)
     * @param frameno 机框序号，样例：0。 (optional)
     * @param slotno 单板序号，样例：0。 (optional)
     * @param subslotindex 子卡索引，样例：16397。 (optional)
     * @param subslotno 子卡序号，样例：0。 (optional)
     * @param descr 子卡描述，样例：FAN Card。 (optional)
     * @param subslotname 子卡名称，样例：FAN Card 0/1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.13.0。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param hardversion 硬件版本，样例：VER.0。 (optional)
     * @param firmversion 固件版本，样例：Hex： 31 30 39 。 (optional)
     * @param softversion 软件版本，样例：0。 (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param modelname 模块名称，样例：--。 (optional)
     * @param serialnum 序列号，样例：030KSB10B3000060。 (optional)
     * @param mfgname 组件名称，物理固件的制造厂商，样例：Huawei。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明：如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、slotdn、slotname。说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @return ApiResponse&lt;SubSlotResResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SubSlotResResponse> getSubSlotListWithHttpInfo(String nedn, String nename, String framedn, String slotdn, String slotname, String subslotdn, Integer frameno, Integer slotno, Integer subslotindex, Integer subslotno, String descr, String subslotname, String vendortype, Integer physicalclass, String hardversion, String firmversion, String softversion, Integer adminstatus, Integer operstatus, String modelname, String serialnum, String mfgname, Integer start, Integer size, String orderby, Boolean desc) throws ApiException {
        com.squareup.okhttp.Call call = getSubSlotListValidateBeforeCall(nedn, nename, framedn, slotdn, slotname, subslotdn, frameno, slotno, subslotindex, subslotno, descr, subslotname, vendortype, physicalclass, hardversion, firmversion, softversion, adminstatus, operstatus, modelname, serialnum, mfgname, start, size, orderby, desc, null, null);
        Type localVarReturnType = new TypeToken<SubSlotResResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 条件查询子卡资源 (asynchronously)
     * ## 典型场景 ##  北向接口支持条件查询子卡资源。 ## 接口功能 ##  条件查询子卡资源。 ## 接口约束 ##  该接口属于北向接口，由北向调用。 
     * @param nedn 设备Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448。 (optional)
     * @param nename 设备名称，样例：AR1220-56。 (optional)
     * @param framedn 机框Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0。 (optional)
     * @param slotdn 单板Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0。 (optional)
     * @param slotname 单板名称，样例：SRU Board 0。 (optional)
     * @param subslotdn 子卡Dn，样例：a4059c31-7ad3-11e9-b906-000c29b01448,FR&#x3D;0,S&#x3D;0,SS&#x3D;0。 (optional)
     * @param frameno 机框序号，样例：0。 (optional)
     * @param slotno 单板序号，样例：0。 (optional)
     * @param subslotindex 子卡索引，样例：16397。 (optional)
     * @param subslotno 子卡序号，样例：0。 (optional)
     * @param descr 子卡描述，样例：FAN Card。 (optional)
     * @param subslotname 子卡名称，样例：FAN Card 0/1。 (optional)
     * @param vendortype 厂商类型，样例：.1.3.6.1.4.1.2011.20021210.13.0。 (optional)
     * @param physicalclass 设备上实体大类型： 3：框 4：背板 5：子槽 6：电源 7：风扇 9：板 10：端口  (optional)
     * @param hardversion 硬件版本，样例：VER.0。 (optional)
     * @param firmversion 固件版本，样例：Hex： 31 30 39 。 (optional)
     * @param softversion 软件版本，样例：0。 (optional)
     * @param adminstatus 管理状态： 4、11：正常 2、3、12：错误 13：LoopBack  (optional)
     * @param operstatus 操作状态： 3、11、13、15、16：正常 2、12、17：错误 4：离线 其他：未知  (optional)
     * @param modelname 模块名称，样例：--。 (optional)
     * @param serialnum 序列号，样例：030KSB10B3000060。 (optional)
     * @param mfgname 组件名称，物理固件的制造厂商，样例：Huawei。 (optional)
     * @param start 指定从哪个起始记录位置开始返回查询结果集。缺省值是0。说明：如果值小于0，将使用缺省值。 (optional)
     * @param size 指定返回查询结果集总数。缺省值是20。说明：如果值小于0，将使用缺省值。 (optional)
     * @param orderby 指定查询结果集采用的排序字段。缺省排序字段是nedn。可指定的排序字段包括：nedn、nename、framedn、slotdn、slotname。说明：指定多个排序字段时字段间用英文半角逗号“,”分隔。 (optional)
     * @param desc 指定查询结果是否按降序排序。缺省值是false。说明：此请求参数只有指定了“orderby”请求参数后才有效。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getSubSlotListAsync(String nedn, String nename, String framedn, String slotdn, String slotname, String subslotdn, Integer frameno, Integer slotno, Integer subslotindex, Integer subslotno, String descr, String subslotname, String vendortype, Integer physicalclass, String hardversion, String firmversion, String softversion, Integer adminstatus, Integer operstatus, String modelname, String serialnum, String mfgname, Integer start, Integer size, String orderby, Boolean desc, final ApiCallback<SubSlotResResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getSubSlotListValidateBeforeCall(nedn, nename, framedn, slotdn, slotname, subslotdn, frameno, slotno, subslotindex, subslotno, descr, subslotname, vendortype, physicalclass, hardversion, firmversion, softversion, adminstatus, operstatus, modelname, serialnum, mfgname, start, size, orderby, desc, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SubSlotResResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
