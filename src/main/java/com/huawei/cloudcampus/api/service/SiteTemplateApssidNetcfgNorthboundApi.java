/*
 * AP站点模板SSID配置
 * AP站点模板SSID第三方接口说明。 
 *
 * OpenAPI spec version: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.SiteTemplateConfigSsidResponse;
import com.huawei.cloudcampus.api.model.SiteTemplateDeleteSsidResponse;
import com.huawei.cloudcampus.api.model.SiteTemplateQuerySsidResponse;
import com.huawei.cloudcampus.api.model.SiteTemplateSsidConfigDto;
import com.huawei.cloudcampus.api.model.SiteTemplateSsidDeleteDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SiteTemplateApssidNetcfgNorthboundApi {
    private ApiClient apiClient;

    public SiteTemplateApssidNetcfgNorthboundApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SiteTemplateApssidNetcfgNorthboundApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for createSiteTemplateSsidConfig
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createSiteTemplateSsidConfigCall(String siteTemplateId, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = siteTemplateSsidConfigDto;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v3/networkconfig/site-templates/{siteTemplateId}/apssid"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createSiteTemplateSsidConfigValidateBeforeCall(String siteTemplateId, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling createSiteTemplateSsidConfig(Async)");
        }
        
        // verify the required parameter 'siteTemplateSsidConfigDto' is set
        if (siteTemplateSsidConfigDto == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateSsidConfigDto' when calling createSiteTemplateSsidConfig(Async)");
        }
        
        
        com.squareup.okhttp.Call call = createSiteTemplateSsidConfigCall(siteTemplateId, siteTemplateSsidConfigDto, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 新增该站点模板的SSID配置
     * ## 典型场景 ##   提供新增站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   新增站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @return SiteTemplateConfigSsidResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateConfigSsidResponse createSiteTemplateSsidConfig(String siteTemplateId, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto) throws ApiException {
        ApiResponse<SiteTemplateConfigSsidResponse> resp = createSiteTemplateSsidConfigWithHttpInfo(siteTemplateId, siteTemplateSsidConfigDto);
        return resp.getData();
    }

    /**
     * 新增该站点模板的SSID配置
     * ## 典型场景 ##   提供新增站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   新增站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @return ApiResponse&lt;SiteTemplateConfigSsidResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateConfigSsidResponse> createSiteTemplateSsidConfigWithHttpInfo(String siteTemplateId, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto) throws ApiException {
        com.squareup.okhttp.Call call = createSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, siteTemplateSsidConfigDto, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateConfigSsidResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 新增该站点模板的SSID配置 (asynchronously)
     * ## 典型场景 ##   提供新增站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   新增站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createSiteTemplateSsidConfigAsync(String siteTemplateId, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ApiCallback<SiteTemplateConfigSsidResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, siteTemplateSsidConfigDto, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateConfigSsidResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteSiteTemplateSsidConfig
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidDeleteDto 站点模板SSID删除参数。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteSiteTemplateSsidConfigCall(String siteTemplateId, SiteTemplateSsidDeleteDto siteTemplateSsidDeleteDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = siteTemplateSsidDeleteDto;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v3/networkconfig/site-templates/{siteTemplateId}/apssid/batch-delete"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteSiteTemplateSsidConfigValidateBeforeCall(String siteTemplateId, SiteTemplateSsidDeleteDto siteTemplateSsidDeleteDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling deleteSiteTemplateSsidConfig(Async)");
        }
        
        // verify the required parameter 'siteTemplateSsidDeleteDto' is set
        if (siteTemplateSsidDeleteDto == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateSsidDeleteDto' when calling deleteSiteTemplateSsidConfig(Async)");
        }
        
        
        com.squareup.okhttp.Call call = deleteSiteTemplateSsidConfigCall(siteTemplateId, siteTemplateSsidDeleteDto, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除该站点模板的SSID配置
     * ## 典型场景 ##   提供删除站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   删除站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidDeleteDto 站点模板SSID删除参数。 (required)
     * @return SiteTemplateDeleteSsidResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateDeleteSsidResponse deleteSiteTemplateSsidConfig(String siteTemplateId, SiteTemplateSsidDeleteDto siteTemplateSsidDeleteDto) throws ApiException {
        ApiResponse<SiteTemplateDeleteSsidResponse> resp = deleteSiteTemplateSsidConfigWithHttpInfo(siteTemplateId, siteTemplateSsidDeleteDto);
        return resp.getData();
    }

    /**
     * 删除该站点模板的SSID配置
     * ## 典型场景 ##   提供删除站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   删除站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidDeleteDto 站点模板SSID删除参数。 (required)
     * @return ApiResponse&lt;SiteTemplateDeleteSsidResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateDeleteSsidResponse> deleteSiteTemplateSsidConfigWithHttpInfo(String siteTemplateId, SiteTemplateSsidDeleteDto siteTemplateSsidDeleteDto) throws ApiException {
        com.squareup.okhttp.Call call = deleteSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, siteTemplateSsidDeleteDto, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateDeleteSsidResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除该站点模板的SSID配置 (asynchronously)
     * ## 典型场景 ##   提供删除站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   删除站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param siteTemplateSsidDeleteDto 站点模板SSID删除参数。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteSiteTemplateSsidConfigAsync(String siteTemplateId, SiteTemplateSsidDeleteDto siteTemplateSsidDeleteDto, final ApiCallback<SiteTemplateDeleteSsidResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, siteTemplateSsidDeleteDto, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateDeleteSsidResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getSiteTemplateSsidConfig
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getSiteTemplateSsidConfigCall(String siteTemplateId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v3/networkconfig/site-templates/{siteTemplateId}/apssid"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getSiteTemplateSsidConfigValidateBeforeCall(String siteTemplateId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling getSiteTemplateSsidConfig(Async)");
        }
        
        
        com.squareup.okhttp.Call call = getSiteTemplateSsidConfigCall(siteTemplateId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询该站点模板的SSID配置
     * ## 典型场景 ##   提供查询站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   查询站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @return SiteTemplateQuerySsidResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateQuerySsidResponse getSiteTemplateSsidConfig(String siteTemplateId) throws ApiException {
        ApiResponse<SiteTemplateQuerySsidResponse> resp = getSiteTemplateSsidConfigWithHttpInfo(siteTemplateId);
        return resp.getData();
    }

    /**
     * 查询该站点模板的SSID配置
     * ## 典型场景 ##   提供查询站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   查询站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @return ApiResponse&lt;SiteTemplateQuerySsidResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateQuerySsidResponse> getSiteTemplateSsidConfigWithHttpInfo(String siteTemplateId) throws ApiException {
        com.squareup.okhttp.Call call = getSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateQuerySsidResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询该站点模板的SSID配置 (asynchronously)
     * ## 典型场景 ##   提供查询站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   查询站点模板内AP的SSID配置列表。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getSiteTemplateSsidConfigAsync(String siteTemplateId, final ApiCallback<SiteTemplateQuerySsidResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateQuerySsidResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateSiteTemplateSsidConfig
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param id SSID标识，创建或查询Response中的ID字段。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateSiteTemplateSsidConfigCall(String siteTemplateId, String id, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = siteTemplateSsidConfigDto;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v3/networkconfig/site-templates/{siteTemplateId}/apssid/{id}"
            .replaceAll("\\{" + "siteTemplateId" + "\\}", apiClient.escapeString(siteTemplateId.toString()))
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateSiteTemplateSsidConfigValidateBeforeCall(String siteTemplateId, String id, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'siteTemplateId' is set
        if (siteTemplateId == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateId' when calling updateSiteTemplateSsidConfig(Async)");
        }
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateSiteTemplateSsidConfig(Async)");
        }
        
        // verify the required parameter 'siteTemplateSsidConfigDto' is set
        if (siteTemplateSsidConfigDto == null) {
            throw new ApiException("Missing the required parameter 'siteTemplateSsidConfigDto' when calling updateSiteTemplateSsidConfig(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateSiteTemplateSsidConfigCall(siteTemplateId, id, siteTemplateSsidConfigDto, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改该站点模板的SSID配置
     * ## 典型场景 ##   提供修改站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   修改站点模板内AP的SSID配置。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param id SSID标识，创建或查询Response中的ID字段。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @return SiteTemplateConfigSsidResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public SiteTemplateConfigSsidResponse updateSiteTemplateSsidConfig(String siteTemplateId, String id, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto) throws ApiException {
        ApiResponse<SiteTemplateConfigSsidResponse> resp = updateSiteTemplateSsidConfigWithHttpInfo(siteTemplateId, id, siteTemplateSsidConfigDto);
        return resp.getData();
    }

    /**
     * 修改该站点模板的SSID配置
     * ## 典型场景 ##   提供修改站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   修改站点模板内AP的SSID配置。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param id SSID标识，创建或查询Response中的ID字段。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @return ApiResponse&lt;SiteTemplateConfigSsidResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<SiteTemplateConfigSsidResponse> updateSiteTemplateSsidConfigWithHttpInfo(String siteTemplateId, String id, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto) throws ApiException {
        com.squareup.okhttp.Call call = updateSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, id, siteTemplateSsidConfigDto, null, null);
        Type localVarReturnType = new TypeToken<SiteTemplateConfigSsidResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改该站点模板的SSID配置 (asynchronously)
     * ## 典型场景 ##   提供修改站点模板内AP的SSID配置列表接口。 ## 接口功能 ##   修改站点模板内AP的SSID配置。 ## 接口约束 ##   该接口支持租户下北向接口管理访问，必须在用户会话建立后使用。 
     * @param siteTemplateId 站点模板标识，UUID格式。 (required)
     * @param id SSID标识，创建或查询Response中的ID字段。 (required)
     * @param siteTemplateSsidConfigDto 站点模板SSID配置参数。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateSiteTemplateSsidConfigAsync(String siteTemplateId, String id, SiteTemplateSsidConfigDto siteTemplateSsidConfigDto, final ApiCallback<SiteTemplateConfigSsidResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateSiteTemplateSsidConfigValidateBeforeCall(siteTemplateId, id, siteTemplateSsidConfigDto, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<SiteTemplateConfigSsidResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
