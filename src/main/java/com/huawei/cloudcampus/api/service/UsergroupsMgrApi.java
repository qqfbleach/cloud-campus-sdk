/*
 * 用户组管理
 * 用户组管理开放API。 
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiCallback;
import com.huawei.cloudcampus.api.ApiClient;
import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.ApiResponse;
import com.huawei.cloudcampus.api.Configuration;
import com.huawei.cloudcampus.api.Pair;
import com.huawei.cloudcampus.api.ProgressRequestBody;
import com.huawei.cloudcampus.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.huawei.cloudcampus.api.model.AddUsergroupInputDto;
import com.huawei.cloudcampus.api.model.AddUsergroupOutputDto;
import com.huawei.cloudcampus.api.model.CommonUsergroupOutputDto;
import com.huawei.cloudcampus.api.model.DeleteUsergroupOutputDto;
import com.huawei.cloudcampus.api.model.GetUsergroupsOutputDto;
import com.huawei.cloudcampus.api.model.UpdateUsergroupInputDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UsergroupsMgrApi {
    private ApiClient apiClient;

    public UsergroupsMgrApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UsergroupsMgrApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for addUsergroup
     * @param body 用户组结构。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call addUsergroupCall(AddUsergroupInputDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/accountservice/usergroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call addUsergroupValidateBeforeCall(AddUsergroupInputDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling addUsergroup(Async)");
        }
        
        
        com.squareup.okhttp.Call call = addUsergroupCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 新增用户组
     * ## 典型场景 ##  提供新增用户组北向接口。 ## 接口功能 ##  新增用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。 
     * @param body 用户组结构。 (required)
     * @return AddUsergroupOutputDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AddUsergroupOutputDto addUsergroup(AddUsergroupInputDto body) throws ApiException {
        ApiResponse<AddUsergroupOutputDto> resp = addUsergroupWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * 新增用户组
     * ## 典型场景 ##  提供新增用户组北向接口。 ## 接口功能 ##  新增用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。 
     * @param body 用户组结构。 (required)
     * @return ApiResponse&lt;AddUsergroupOutputDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AddUsergroupOutputDto> addUsergroupWithHttpInfo(AddUsergroupInputDto body) throws ApiException {
        com.squareup.okhttp.Call call = addUsergroupValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<AddUsergroupOutputDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 新增用户组 (asynchronously)
     * ## 典型场景 ##  提供新增用户组北向接口。 ## 接口功能 ##  新增用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。 
     * @param body 用户组结构。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call addUsergroupAsync(AddUsergroupInputDto body, final ApiCallback<AddUsergroupOutputDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = addUsergroupValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AddUsergroupOutputDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for delUsergroups
     * @param id 用户组ID，UUID格式。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call delUsergroupsCall(String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/accountservice/usergroups/{id}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call delUsergroupsValidateBeforeCall(String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling delUsergroups(Async)");
        }
        
        
        com.squareup.okhttp.Call call = delUsergroupsCall(id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 删除用户组
     * ## 典型场景 ##  提供删除用户组北向接口。 ## 接口功能 ##  删除指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @return DeleteUsergroupOutputDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteUsergroupOutputDto delUsergroups(String id) throws ApiException {
        ApiResponse<DeleteUsergroupOutputDto> resp = delUsergroupsWithHttpInfo(id);
        return resp.getData();
    }

    /**
     * 删除用户组
     * ## 典型场景 ##  提供删除用户组北向接口。 ## 接口功能 ##  删除指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @return ApiResponse&lt;DeleteUsergroupOutputDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteUsergroupOutputDto> delUsergroupsWithHttpInfo(String id) throws ApiException {
        com.squareup.okhttp.Call call = delUsergroupsValidateBeforeCall(id, null, null);
        Type localVarReturnType = new TypeToken<DeleteUsergroupOutputDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 删除用户组 (asynchronously)
     * ## 典型场景 ##  提供删除用户组北向接口。 ## 接口功能 ##  删除指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call delUsergroupsAsync(String id, final ApiCallback<DeleteUsergroupOutputDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = delUsergroupsValidateBeforeCall(id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteUsergroupOutputDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getUsergroups
     * @param userGroupId 用户组ID，UUID格式。 (optional)
     * @param userGroupName 用户组名，支持模糊查询。 (optional)
     * @param isContainSubGroup 是否包含子用户组，该变量需要和userGroupId一起使用，主要用于查询指定用户组下子部门（只包含当前指定用户组下一层子用户组，更下层的不包含）。 (optional)
     * @param pageIndex 页面索引。 (optional)
     * @param pageSize 页面大小。 (optional)
     * @param sort 排序字段仅支持‘userGroupName’ +表示升序，-表示降序，默认用升序。 (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getUsergroupsCall(String userGroupId, String userGroupName, Boolean isContainSubGroup, Integer pageIndex, Integer pageSize, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/accountservice/usergroups";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (userGroupId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "userGroupId", userGroupId));
        if (userGroupName != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "userGroupName", userGroupName));
        if (isContainSubGroup != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "isContainSubGroup", isContainSubGroup));
        if (pageIndex != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageIndex", pageIndex));
        if (pageSize != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "pageSize", pageSize));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getUsergroupsValidateBeforeCall(String userGroupId, String userGroupName, Boolean isContainSubGroup, Integer pageIndex, Integer pageSize, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = getUsergroupsCall(userGroupId, userGroupName, isContainSubGroup, pageIndex, pageSize, sort, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 查询用户组
     * ## 典型场景 ##  提供查询用户组北向接口。 ## 接口功能 ##  查询用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param userGroupId 用户组ID，UUID格式。 (optional)
     * @param userGroupName 用户组名，支持模糊查询。 (optional)
     * @param isContainSubGroup 是否包含子用户组，该变量需要和userGroupId一起使用，主要用于查询指定用户组下子部门（只包含当前指定用户组下一层子用户组，更下层的不包含）。 (optional)
     * @param pageIndex 页面索引。 (optional)
     * @param pageSize 页面大小。 (optional)
     * @param sort 排序字段仅支持‘userGroupName’ +表示升序，-表示降序，默认用升序。 (optional)
     * @return GetUsergroupsOutputDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetUsergroupsOutputDto getUsergroups(String userGroupId, String userGroupName, Boolean isContainSubGroup, Integer pageIndex, Integer pageSize, String sort) throws ApiException {
        ApiResponse<GetUsergroupsOutputDto> resp = getUsergroupsWithHttpInfo(userGroupId, userGroupName, isContainSubGroup, pageIndex, pageSize, sort);
        return resp.getData();
    }

    /**
     * 查询用户组
     * ## 典型场景 ##  提供查询用户组北向接口。 ## 接口功能 ##  查询用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param userGroupId 用户组ID，UUID格式。 (optional)
     * @param userGroupName 用户组名，支持模糊查询。 (optional)
     * @param isContainSubGroup 是否包含子用户组，该变量需要和userGroupId一起使用，主要用于查询指定用户组下子部门（只包含当前指定用户组下一层子用户组，更下层的不包含）。 (optional)
     * @param pageIndex 页面索引。 (optional)
     * @param pageSize 页面大小。 (optional)
     * @param sort 排序字段仅支持‘userGroupName’ +表示升序，-表示降序，默认用升序。 (optional)
     * @return ApiResponse&lt;GetUsergroupsOutputDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetUsergroupsOutputDto> getUsergroupsWithHttpInfo(String userGroupId, String userGroupName, Boolean isContainSubGroup, Integer pageIndex, Integer pageSize, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getUsergroupsValidateBeforeCall(userGroupId, userGroupName, isContainSubGroup, pageIndex, pageSize, sort, null, null);
        Type localVarReturnType = new TypeToken<GetUsergroupsOutputDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 查询用户组 (asynchronously)
     * ## 典型场景 ##  提供查询用户组北向接口。 ## 接口功能 ##  查询用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param userGroupId 用户组ID，UUID格式。 (optional)
     * @param userGroupName 用户组名，支持模糊查询。 (optional)
     * @param isContainSubGroup 是否包含子用户组，该变量需要和userGroupId一起使用，主要用于查询指定用户组下子部门（只包含当前指定用户组下一层子用户组，更下层的不包含）。 (optional)
     * @param pageIndex 页面索引。 (optional)
     * @param pageSize 页面大小。 (optional)
     * @param sort 排序字段仅支持‘userGroupName’ +表示升序，-表示降序，默认用升序。 (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getUsergroupsAsync(String userGroupId, String userGroupName, Boolean isContainSubGroup, Integer pageIndex, Integer pageSize, String sort, final ApiCallback<GetUsergroupsOutputDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getUsergroupsValidateBeforeCall(userGroupId, userGroupName, isContainSubGroup, pageIndex, pageSize, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetUsergroupsOutputDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateUsergroup
     * @param id 用户组ID，UUID格式。 (required)
     * @param body 用户组结构。 (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateUsergroupCall(String id, UpdateUsergroupInputDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/controller/campus/v1/accountservice/usergroups/{id}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateUsergroupValidateBeforeCall(String id, UpdateUsergroupInputDto body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateUsergroup(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateUsergroup(Async)");
        }
        
        
        com.squareup.okhttp.Call call = updateUsergroupCall(id, body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 修改用户组
     * ## 典型场景 ##  提供修改用户组北向接口。 ## 接口功能 ##  修改指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @param body 用户组结构。 (required)
     * @return CommonUsergroupOutputDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CommonUsergroupOutputDto updateUsergroup(String id, UpdateUsergroupInputDto body) throws ApiException {
        ApiResponse<CommonUsergroupOutputDto> resp = updateUsergroupWithHttpInfo(id, body);
        return resp.getData();
    }

    /**
     * 修改用户组
     * ## 典型场景 ##  提供修改用户组北向接口。 ## 接口功能 ##  修改指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @param body 用户组结构。 (required)
     * @return ApiResponse&lt;CommonUsergroupOutputDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CommonUsergroupOutputDto> updateUsergroupWithHttpInfo(String id, UpdateUsergroupInputDto body) throws ApiException {
        com.squareup.okhttp.Call call = updateUsergroupValidateBeforeCall(id, body, null, null);
        Type localVarReturnType = new TypeToken<CommonUsergroupOutputDto>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * 修改用户组 (asynchronously)
     * ## 典型场景 ##  提供修改用户组北向接口。 ## 接口功能 ##  修改指定的用户组 ## 接口约束 ##  该接口支持北向管理员访问，必须在用户会话建立后使用。  
     * @param id 用户组ID，UUID格式。 (required)
     * @param body 用户组结构。 (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateUsergroupAsync(String id, UpdateUsergroupInputDto body, final ApiCallback<CommonUsergroupOutputDto> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateUsergroupValidateBeforeCall(id, body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CommonUsergroupOutputDto>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
