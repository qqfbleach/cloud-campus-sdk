/*
 * 交换机全局VLAN配置
 * 配置交换机全局VLAN 
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.model.LswGlobalVlanAllRespDto;
import com.huawei.cloudcampus.api.model.LswGlobalVlanDelRespDto;
import com.huawei.cloudcampus.api.model.LswGlobalVlanDto;
import com.huawei.cloudcampus.api.model.LswGlobalVlanFailedOperation;
import com.huawei.cloudcampus.api.model.LswGlobalVlanResponseDto;
import com.huawei.cloudcampus.api.model.LswGlobalVlanUpdateDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LSWGlobalVlanNorthboundApi
 */
@Ignore
public class LSWGlobalVlanNorthboundApiTest {

    private final LSWGlobalVlanNorthboundApi api = new LSWGlobalVlanNorthboundApi();

    
    /**
     * 创建交换机的全局VLAN配置
     *
     * ## 典型场景 ##    提供配置参数的接口，创建交换机的全局VLAN配置。 ## 接口功能 ##    创建交换机全局VLAN配置。 ## 接口约束 ##    该接口必须在租户内，存在交换机设备的站点内使用。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLswGlobalVlanInfoTest() throws ApiException {
        String deviceId = null;
        LswGlobalVlanDto body = null;
        LswGlobalVlanResponseDto response = api.createLswGlobalVlanInfo(deviceId, body);

        // TODO: test validations
    }
    
    /**
     * 删除交换机的全局VLAN配置
     *
     * ## 典型场景 ##    提供配置参数的接口，删除交换机的全局VLAN配置。 ## 接口功能 ##    删除交换机全局VLAN配置。 ## 接口约束 ##    该接口必须在租户内，存在交换机设备的站点内使用。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLswGlobalVlanInfoTest() throws ApiException {
        String deviceId = null;
        String recordId = null;
        LswGlobalVlanDelRespDto response = api.deleteLswGlobalVlanInfo(deviceId, recordId);

        // TODO: test validations
    }
    
    /**
     * 查询交换机的全局VLAN配置
     *
     * ## 典型场景 ##    提供查询配置参数的接口，查询LSW的全局VLAN配置信息。 ## 接口功能 ##    查询全局VLAN配置。 ## 接口约束 ##    该接口必须在租户内，存在交换机设备的站点内使用。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLswGlobalVlanInfosTest() throws ApiException {
        String deviceId = null;
        LswGlobalVlanAllRespDto response = api.getLswGlobalVlanInfos(deviceId);

        // TODO: test validations
    }
    
    /**
     * 修改交换机的全局VLAN配置
     *
     * ## 典型场景 ##    提供配置参数的接口，修改交换机的全局VLAN配置。 ## 接口功能 ##    修改交换机全局VLAN配置。 ## 接口约束 ##    该接口必须在租户内，存在交换机设备的站点内使用。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLswGlobalVlanInfoTest() throws ApiException {
        String deviceId = null;
        LswGlobalVlanUpdateDto body = null;
        LswGlobalVlanResponseDto response = api.updateLswGlobalVlanInfo(deviceId, body);

        // TODO: test validations
    }
    
}
