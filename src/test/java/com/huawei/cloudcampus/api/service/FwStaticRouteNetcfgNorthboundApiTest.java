/*
 * 防火墙设备静态路由配置
 * 防火墙设备静态路由配置第三方接口。
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.huawei.cloudcampus.api.service;

import com.huawei.cloudcampus.api.ApiException;
import com.huawei.cloudcampus.api.model.DeviceFwStaticRouteInfoDto;
import com.huawei.cloudcampus.api.model.FwFailedOperationDto;
import com.huawei.cloudcampus.api.model.FwRouteInfo;
import com.huawei.cloudcampus.api.model.FwStaticRouteDeleteDto;
import com.huawei.cloudcampus.api.model.FwStaticRouteDeleteResponseDto;
import com.huawei.cloudcampus.api.model.FwStaticRouteResponseDto;
import com.huawei.cloudcampus.api.model.GetFwStaticRouteResponseDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FwStaticRouteNetcfgNorthboundApi
 */
@Ignore
public class FwStaticRouteNetcfgNorthboundApiTest {

    private final FwStaticRouteNetcfgNorthboundApi api = new FwStaticRouteNetcfgNorthboundApi();

    
    /**
     * 创建防火墙设备静态路由配置
     *
     * ## 典型场景 ##    提供创建防火墙设备静态路由配置的接口。 ## 接口功能 ##    创建防火墙设备静态路由配置。 ## 接口约束 ##    只有租户管理员获取token并建立会话后才能调用该接口。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDeviceFwStaticRouteConfigTest() throws ApiException {
        UUID deviceId = null;
        FwRouteInfo deviceFwStaticRouteInfoDto = null;
        FwStaticRouteResponseDto response = api.createDeviceFwStaticRouteConfig(deviceId, deviceFwStaticRouteInfoDto);

        // TODO: test validations
    }
    
    /**
     * 删除防火墙设备静态路由配置
     *
     * ## 典型场景 ##    提供删除防火墙设备静态路由配置的接口。 ## 接口功能 ##    删除防火墙设备静态路由配置。 ## 接口约束 ##    只有租户管理员获取token并建立会话后才能调用该接口。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDeviceFwStaticRouteConfigTest() throws ApiException {
        UUID deviceId = null;
        FwStaticRouteDeleteDto id = null;
        FwStaticRouteDeleteResponseDto response = api.deleteDeviceFwStaticRouteConfig(deviceId, id);

        // TODO: test validations
    }
    
    /**
     * 查询防火墙设备静态路由配置
     *
     * ## 典型场景 ##    提供查询防火墙设备静态路由配置的接口。 ## 接口功能 ##    查询防火墙设备静态路由配置。 ## 接口约束 ##    只有租户管理员获取token并建立会话后才能调用该接口。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeviceFwStaticRouteConfigTest() throws ApiException {
        UUID deviceId = null;
        Integer pageIndex = null;
        Integer pageSize = null;
        GetFwStaticRouteResponseDto response = api.getDeviceFwStaticRouteConfig(deviceId, pageIndex, pageSize);

        // TODO: test validations
    }
    
    /**
     * 修改防火墙设备静态路由配置
     *
     * ## 典型场景 ##    提供修改防火墙设备静态路由配置的接口。 ## 接口功能 ##    修改防火墙设备静态路由配置。 ## 接口约束 ##    只有租户管理员获取token并建立会话后才能调用该接口。 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDeviceFwStaticRouteConfigTest() throws ApiException {
        UUID deviceId = null;
        DeviceFwStaticRouteInfoDto deviceFwStaticRouteInfoDto = null;
        FwStaticRouteResponseDto response = api.updateDeviceFwStaticRouteConfig(deviceId, deviceFwStaticRouteInfoDto);

        // TODO: test validations
    }
    
}
